<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>This Week in Rust</title><link href="https://this-week-in-rust.org/" rel="alternate"></link><link href="https://this-week-in-rust.org/feeds/all-en.atom.xml" rel="self"></link><id>https://this-week-in-rust.org/</id><updated>2020-09-04T00:00:00-04:00</updated><entry><title>This Week in Rust 354</title><link href="https://this-week-in-rust.org/blog/2020/09/04/this-week-in-rust-354/" rel="alternate"></link><updated>2020-09-04T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2020-09-04:blog/2020/09/04/this-week-in-rust-354/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/emberian/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/08/27/Rust-1.46.0.html"&gt;Announcing Rust 1.46.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tooling"&gt;Tooling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/08/31/changelog-40.html"&gt;Rust Analyzer Changelog #40&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kobzol.github.io/rust/intellij/2020/08/25/contributing-2-subst-assoc-type-int.html"&gt;Contributing to the IntelliJ Rust plugin: Writing an intention&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rustinblockchain.org/newsletters/2020-09-02-turbofish-in-the-blocksea/"&gt;Rust in Blockchain Newsletter #15 - Turbofish in the Blocksea&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://edfloreshz.blog/should-we-trust-rust-with-the-future-of-systems-programming"&gt;Should we trust Rust with the future of systems programming?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://andreaskroepelin.de/blog/sum_types/"&gt;Optionality in the type systems of Julia and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/e_net4/migrating-from-quick-error-to-snafu-a-story-on-revamped-error-handling-in-rust-58h9"&gt;Migrating from quick-error to SNAFU: a story on revamped error handling in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prateeknischal.github.io/go-use-those-traits/"&gt;Go use those Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://moletrooper.github.io/blog/2020/08/starframe-1-architecture/"&gt;Starframe devlog: Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jojolepro.com/blog/2020-08-20_event_chaining/"&gt;Event Chaining as a Decoupling Method in Entity-Component-System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/rust-serialization-whats-ready-for-production-today/"&gt;Rust serialization: What's ready for production today?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/pulse/rust-goodness-case-study-matthew-sherborne"&gt;rust vs scripted languages; a short case study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/hintergrund/Entwicklung-Warum-Rust-die-Antwort-auf-miese-Software-und-Programmierfehler-ist-4879795.html"&gt;Entwicklung: Warum Rust die Antwort auf miese Software und Programmierfehler ist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/iOBXVOAbpdY"&gt;Is Rust Used Safely by Software Developers?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-standard-rust"&gt;Learn Standard Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.thomascountz.com/2018/07/09/ownership-in-rust-part-1"&gt;Ownership in Rust, Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thomascountz.com/2018/07/11/ownership-in-rust-part-2"&gt;Ownership in Rust, Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/jbachhardie/learning-rust-1-install-things-and-read-a-file-5613"&gt;Learning Rust 1: Install things and read a file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/jbachhardie/learning-rust-2-a-tiny-database-is-born-eef"&gt;Learning Rust 2: A Tiny Database is Born&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/imaculate3/that-s-so-rusty-ownership-493c"&gt;That's so Rusty: Ownership&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-more-rust"&gt;Learn More Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ecorax.net/as-above-so-below-2/"&gt;As above, so below: Bare metal Rust generics 2/2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sgolem.com/halite-iii-bot-development-kit-in-rust"&gt;Halite III Bot Development Kit in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lpalmieri.com/posts/2020-08-31-zero-to-production-3-5-html-forms-databases-integration-tests/"&gt;Zero To Production #3.5: HTML forms, Databases, Integration tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://belkadan.com/blog/2020/08/Objective-Rust/"&gt;Objective-Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/rust-web-apps-using-rocket-framework/"&gt;Building web apps with Rust using the Rocket framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hassamuddin.com/blog/rust-mqtt/channels/"&gt;Writing an asynchronous MQTT Broker in Rust - Part 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pkolaczk.github.io/multiple-threadpools-rust/"&gt;Multiple Thread Pools in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://willcrichton.net/notes/type-directed-metaprogramming-in-rust/"&gt;Type-directed metaprogramming in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rustyoctopus/generating-static-arrays-during-compile-time-in-rust-10d8"&gt;Generating static arrays during compile time in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tjtelan/let-s-build-a-single-binary-grpc-server-client-with-rust-in-2020-part-2-1i2e"&gt;Let's build a single binary gRPC server-client with Rust in 2020 - Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/rust-webassembly-serverless-tencent-cloud/"&gt;How to use Rust + WebAssembly to Perform Serverless Machine Learning and Data Visualization in the Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.darrien.dev/posts/fireworks-for-your-terminal/"&gt;Fireworks for your terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jamesmcm.github.io/blog/2020/08/29/rust-ses/#en"&gt;Serverless Data Ingestion with Rust and AWS SES&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datacrayon.com/posts/programming/rust-notebooks/box-plots-at-the-olympics/"&gt;Box Plots at the Olympics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jack.wrenn.fyi/blog/include-transmute/"&gt;Fixing include_bytes!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rustyoctopus/generating-static-arrays-during-compile-time-in-rust-10d8"&gt;Generating static arrays during compile time in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PL] &lt;a href="https://postacnormalna.pl/animacja-kraboptaka/"&gt;CrabbyBird #1 O tym, jak animować postać gracza&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/okdFx6tv7ds"&gt;FLTK Rust: Creating a music player with customized widgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-updates"&gt;Project Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alex-dukhno.github.io/2020-08-29-This-August-in-my-Database-project-written-in-rust-copy/"&gt;This August in my database project written in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kentik.com/blog/using-rust-for-kentiks-new-synthetic-network-monitoring-agent/"&gt;Using Rust for Kentik's New Synthetic Monitoring Agent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zdnet.com/article/aws-introduces-bottlerocket-a-rust-language-oriented-linux-for-containers/"&gt;AWS introduces Bottlerocket: A Rust language-oriented Linux for containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/cargo-test-with-panic-probe/"&gt;Using &lt;code&gt;cargo test&lt;/code&gt; for embedded testing with &lt;code&gt;panic-probe&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://headcrab.rs/2020/08/31/august-update.html"&gt;Headcrab: August 2020 progress report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/blog/2020/08/20/financial-report.html"&gt;Rust Analyzer 2020[..6] Financial Report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.justanotherdot.com/posts/avoid-build-cache-bloat-by-sweeping-away-artifacts.html"&gt;Avoid Build Cache Bloat By Sweeping Away Artifacts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/ijpxz2/const_fn_makes_it_too_easy_to_do_mandelbrots/"&gt;const_fn makes it too easy to do mandelbrots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Linux-Kernel-Rust-Path-LPC2020"&gt;Linux Developers Continue Evaluating The Path To Adding Rust Code To The Kernel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwn.net/SubscriberLink/829858/281103f9c6fd0dc2/"&gt;Supporting Linux kernel development in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[video] &lt;a href="https://youtu.be/FFjV9f_Ub9o"&gt;LPC 2020 - LLVM MC&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://jamesmcm.github.io/blog/2020/08/29/rust-ses/#en"&gt;Serverless Data Ingestion with Rust and AWS SES&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://immunant.com/blog/2020/09/transpiled_c_safety/"&gt;Refactoring Rust Transpiled from C&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/gluesql/gluesql"&gt;GlueSQL&lt;/a&gt;, a SQL database engine written in Rust with WebAssembly support.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/807"&gt;Taehoon Moon&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alex-dukhno/database/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;Database in Rust is looking for contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/docs.rs/issues/1013"&gt;Docs.rs is looking for help adding a changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/out-of-cheese-error/gooseberry/labels/good%20first%20issue"&gt;Gooseberry has several good first issues with mentoring available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imsnif/diskonaut/issues/68"&gt;Diskonaut - Option to delete without confirmation?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imsnif/diskonaut/issues/15"&gt;Diskonaut - Feature: only show "(x = Small files)" legend when there are small files on the screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imsnif/diskonaut/issues/18"&gt;Diskonaut - Feature: error reporting with clean stacktraces&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;326 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-08-24..2020-08-31"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75933"&gt;point to a move-related span when pointing to closure upvars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70212"&gt;abort when foreign exceptions are caught by &lt;code&gt;catch_unwind&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75370"&gt;new pass to optimize &lt;code&gt;if&lt;/code&gt; conditions on integrals to switches on the integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75912"&gt;suggest &lt;code&gt;mem::forget&lt;/code&gt; if &lt;code&gt;mem::ManuallyDrop::new&lt;/code&gt; isn't used&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75779"&gt;improve error message when typo is made in &lt;code&gt;format!&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75687"&gt;allow reallocation to different alignment in &lt;code&gt;AllocRef&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/884"&gt;add some avx512f intrinsics for mask, rotation, shift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75463"&gt;make some &lt;code&gt;Ordering&lt;/code&gt; methods const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75132"&gt;stabilize {&lt;code&gt;Range&lt;/code&gt;, &lt;code&gt;RangeInclusive&lt;/code&gt;}&lt;code&gt;::is_empty&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75936"&gt;get rid of bounds check in &lt;code&gt;slice::chunks_exact()&lt;/code&gt; and related functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/887"&gt;stdarch: avx512&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/195"&gt;hashbrown: make &lt;code&gt;with_hasher&lt;/code&gt; functions const fn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/190"&gt;hashbrown: implement &lt;code&gt;replace_entry_with&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/5909"&gt;clippy: add a lint for an async block/closure that yields a type that is itself awaitable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75775"&gt;use &lt;code&gt;rustc_lexer&lt;/code&gt; for rustdoc syntax highlighting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75815"&gt;report an ambiguity if both modules and primitives are in scope for intra-doc links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75330"&gt;rustdoc: improve rendering of crate features via &lt;code&gt;doc(cfg)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/docs.rs/pull/1000"&gt;docs.rs: separate metadata parsing into a library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-08-24.md"&gt;2020-08-24&lt;/a&gt;:
  1 regression, 4 improvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This week included a major speedup on optimized builds of real-world crates (up to 5%) as a result of the &lt;a href="https://github.com/rust-lang/rust/pull/73526#issuecomment-679374070"&gt;upgrade to LLVM 11&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2964"&gt;RFC: Named arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2963"&gt;eRFC: Add JSON backend to Rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2930"&gt;RFC: Reading into uninitialized buffers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/74754"&gt;Add &lt;code&gt;#[cfg(panic = '...')]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/74160"&gt;Allow Weak::as_ptr and friends for unsized T&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/73166"&gt;Update stdarch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/issues/50146"&gt;Tracking issue for #[doc(alias = "...")]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2981"&gt;Safer Transmute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2979"&gt;[RFC]: Libs Team Governance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2977"&gt;[RFC]: Portable SIMD Libs Project Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Saar/events/272522454/"&gt;September 8. Saarbrücken, DE - Rust-Saar Meetup - &lt;code&gt;3u16.map_err(...)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gskksrybcmblb/"&gt;September 8. Seattle, WA, US - Seattle Rust Meetup - Monthly meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-NYC/events/272982073/"&gt;September 9. East Coast, US - Rust East Coast Virtual Talks + Q&amp;amp;A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-%D0%B2-%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B5/events/272798484/"&gt;September 11. Russia - Russian Rust Online Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/qxqdgrybcmbmb/"&gt;September 9. Atlanta, GA, US - Rust Atlanta - Grab a beer with fellow Rustaceans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/268567961/"&gt;September 10. Lehi, UT, US - Utah Rust - The Blue Pill: Rust on Microcontrollers (Sept / Second Round)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/266876702/"&gt;September 7. Auckland, NZ - Rust AKL - Finally, good Rust IDE support in VSCode: rust-analyzer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://payward.wd1.myworkdayjobs.com/en-US/Kraken_Careers/job/EMEA---Remote/Senior-Backend-Engineer---Rust--Remote-_R-17"&gt;Senior Backend Engineer - Rust at Kraken (Remote US, Remote EMEA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://payward.wd1.myworkdayjobs.com/en-US/Kraken_Careers/job/AMER---Remote/Backend-Engineer--Data-Processing---Rust_L-43"&gt;Backend Engineer, Data Processing – Rust at Kraken (Remote US, Remote EMEA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://payward.wd1.myworkdayjobs.com/en-US/Kraken_Careers/job/EMEA---Remote/Backend-Engineer---Rust_L-42"&gt;Backend Engineer - Rust at Kraken (Remote US, Remote EMEA)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;When the answer to your question contains the word "variance" you're probably going to have a bad time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/in-this-mesh-class-whats-wrong-with-my-use-of-lifetimes/47946/4"&gt;trentj on rust-users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/937"&gt;Michael Bryan&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/imoogj/this_week_in_rust_354/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 353</title><link href="https://this-week-in-rust.org/blog/2020/08/26/this-week-in-rust-353/" rel="alternate"></link><updated>2020-08-26T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2020-08-26:blog/2020/08/26/this-week-in-rust-353/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/emberian/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;h3 id="tooling"&gt;Tooling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kobzol.github.io/rust/intellij/2020/07/31/contributing-0-setup.html"&gt;Contributing to the IntelliJ Rust plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2020/08/24/changelog-129.html"&gt;IntelliJ Rust Changelog #129&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/08/24/changelog-39.html"&gt;Rust Analyzer Changelog #39&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://veloren.net/devblog-81/"&gt;This Week in Veloren 81&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-embedded.github.io/blog/newsletter-25/"&gt;The Embedded Working Group Newsletter - 25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/pnehrer/a-story-of-rusty-containers-queues-and-the-role-of-assumed-identity-kl2"&gt;A Story of Rusty Containers, Queues, and the Role of Assumed Identity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ecorax.net/as-above-so-below-1/"&gt;As above, so below: Bare metal Rust generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.darklang.com/first-thoughts-on-rust-vs-ocaml/"&gt;First thoughts on Rust vs OCaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.abubalay.com/blog/2020/08/22/safe-bindings-in-rust"&gt;The problem of safe FFI bindings in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/imaculate3/that-s-so-rusty-3akm"&gt;That's so Rusty!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.justanotherdot.com/posts/profiling-doesnt-always-have-to-be-fancy.html"&gt;Profiling Doesn't Always Have To Be Fancy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kai.coding.blog/why-i-like-piston"&gt;Why I like Piston, A Rust game engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://steveklabnik.com/writing/the-cxx-debate"&gt;The CXX Debate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/Z6X7Ada0ugE"&gt;Bending the curve: A personal tutor at your fingertips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-standard-rust"&gt;Learn Standard Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.christopherbiscardi.com/why-can-t-i-early-return-in-an-if-statement-in-rust"&gt;Why can't I early return in an if statement in Rust?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/bleed-less-during-runtime-with-rusts-lifetime/"&gt;Bleed Less during Runtime with Rust's Lifetime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tndl.me/blog/2020/rust-javascript-cheatsheet/"&gt;A Javascript Developer's Cheatsheet for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/dZiWkbnaQe8"&gt;RustConf 2020 - Macros for a More Productive Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/BBvcK_nXUEg"&gt;RustConf 2020 - Rust for Non-Systems Programmers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-more-rust"&gt;Learn More Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.fpcomplete.com/blog/different-levels-async-rust/"&gt;Different levels of Async in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/creativcoder/how-to-run-rust-on-arduino-uno-40c0"&gt;How to run Rust on Arduino Uno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tjtelan/let-s-build-a-single-binary-grpc-server-client-with-rust-in-2020-part-1-3cnk"&gt;Let's build a single binary gRPC server-client with Rust in 2020 - Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fitzgeraldnick.com/2020/08/24/writing-a-test-case-generator.html"&gt;Writing a Test Case Generator for a Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/0xbf/day11-write-web-app-with-actix-web-100dayofrust-1lkn"&gt;Day 12: Write web app with actix-web - 100DaysOfRust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://not-matthias.github.io/kernel-printing-with-rust/"&gt;Kernel printing with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mtigley.dev/posts/running-animation/"&gt;Running Animation in Amethyst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PL] &lt;a href="https://postacnormalna.pl/pierwsza-przygoda-z-rustem-i-godotem/"&gt;CrabbyBird #0 Pierwsza przygoda z Rustem i Godotem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/playlist?list=PLzIwronG0sE56c6hDYOKW3-rPxmIyttoe"&gt;Build a Smart Bookmarking Tool with Rust and Rocket Video Series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/rAF8mLI0naQ"&gt;RustConf 2020 - Error Handling Isn't All About Errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/2b8InauuRqw"&gt;RustConf 2020 - Under a Microscope: Exploring Fast and Safe Rust for Biology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/GFi_EdS_s_c"&gt;RustConf 2020 - My First Rust Project: Starting a 2D game with Amethyst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/xlVnp7VOxRE"&gt;RustConf 2020 - Controlling Telescope Hardware with Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-updates"&gt;Project Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dimforge.com/blog/2020/08/18/rustsim-becomes-dimforge/"&gt;Rustsim becomes Dimforge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dimforge.com/blog/2020/08/25/announcing-the-rapier-physics-engine/"&gt;Announcing the Rapier physics enginge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/defmt/"&gt;defmt, a highly efficient Rust logging framework for embedded devices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bevyengine.org/news/scaling-bevy/"&gt;Scaling Bevy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.nushell.sh/blog/2020/08/23/year_of_nushell.html"&gt;One year of Nushell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://axelforsman.tk/2020/08/24/rust-style-futures-in-c.html"&gt;Rust-style futures in C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.pingfrommorocco.com/2020/08/porting-golang-and-rust-cli-tool-to-d.html"&gt;Porting a Golang and Rust CLI tool to D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.possiblerust.com/community/how-to-read-first-impression-posts"&gt;How to Read First Impression Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://anchor.fm/the-virtual-world/episodes/Embedded-Rust--Ferrous-Systems---James-Munns-eidv76"&gt;The Virtual World - Embedded Rust &amp;amp; Ferrous Systems - James Munns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustgamedev.com/episodes/interview-with-herbert-wolverson-bracket-lib"&gt;Rust GameDev Podcast - Interview with Herbert Wolverson (Bracket-Lib)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/jR2hUhjcAXI"&gt;Before Main: How Executables Work on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/IwPRu5FhfIQ"&gt;RustConf 2020 - Opening Keynote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/yv6L_xmjw5I"&gt;RustConf 2020 - How to Start a Solo Project that You'll Stick With&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/RNsEsZbXE-4"&gt;RustConf 2020 - Closing Keynote&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/pdf-rs/pdf"&gt;pdf&lt;/a&gt;, a crate for reading PDF files.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/806"&gt;S3bk&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rusty-celery/rusty-celery/issues?q=label%3A%22Status%3A+Help+Wanted%22"&gt;Rusty Celery has several issues tagged with "Help Wanted"&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;292 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-08-17..2020-08-24"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75621"&gt;remove fast path in reallocation for same layout sizes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75776"&gt;missing doc examples lint improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75516"&gt;promote missing_fragment_specifier to hard error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75595"&gt;polymorphize: if any param in a predicate is used, then all are used&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75648"&gt;make &lt;code&gt;OnceCell&amp;lt;T&amp;gt;&lt;/code&gt; transparent to dropck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75677"&gt;don't panic in &lt;code&gt;Vec::shrink_to_fit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75600"&gt;improve codegen for &lt;code&gt;align_offset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75505"&gt;add &lt;code&gt;Arc::new_cyclic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75171"&gt;new zeroed slice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74940"&gt;make &lt;code&gt;&amp;lt;*const T&amp;gt;::is_null&lt;/code&gt; const fn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74238"&gt;stabilize &lt;code&gt;ptr_offset_from&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/73565"&gt;use &lt;code&gt;min_specialization&lt;/code&gt; in libcore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/72449"&gt;const floating point bitcasts and classification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/compiler-builtins/pull/341"&gt;compiler-builtins: add mips/mips64 compiler-rt fallbacks so that libgcc is not required&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/pin-utils/pull/33"&gt;pin-utils: deprecate unsafe pin projection macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/git2-rs/pull/614"&gt;git2: fix dangling pointer in format_email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/git2-rs/pull/612"&gt;git2: add support for zlib-ng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/8641"&gt;cargo: remove unnecessary allocations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-bindgen/pull/1882"&gt;rust-bindgen: do generate unnamed enums, as they can be referred to by members and others&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-08-24.md"&gt;2020-08-24&lt;/a&gt;:
  1 regression, 4 improvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This week included a major speedup on optimized builds of real-world crates (up to 5%) as a result of the &lt;a href="https://github.com/rust-lang/rust/pull/73526#issuecomment-679374070"&gt;upgrade to LLVM 11&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2975"&gt;Update the intra-doc link RFC to match the implementation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/74559"&gt;Stabilize deque_make_contiguous&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/issues/55002"&gt;Tracking issue for hint::spin_loop (renamed sync::atomic::spin_loop_hint)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/272786420/"&gt;September 2. Johannesburg, ZA - Monthly Joburg Rust Chat! - Johannesburg Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Dublin/events/272781420/?action=rsvp&amp;amp;response=yes"&gt;September 2. Dublin, IE - Rust Dublin September Remote Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs"&gt;September 2. Indianapolis, IN, US - Indy Rust - Indy.rs - with Social Distancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/txcprrybcmbfb/"&gt;September 3. Berlin, DE - Berlin.rs - Rust Hack and Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Saar/events/272522454/"&gt;September 8. Saarbrücken, DE - Rust-Saar Meetup - &lt;code&gt;3u16.map_err(...)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/qxqdgrybcmbmb/"&gt;September 9. Atlanta, GA, US - Rust Atlanta - Grab a beer with fellow Rustaceans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/266876702/"&gt;September 7. Auckland, NZ - Rust AKL - Finally, good Rust IDE support in VSCode: rust-analyzer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ockam.io/team/Senior-Engineer-Embedded-Rust/31b8be44-ca35-5e12-8777-ab16d7b08033"&gt;Senior Engineer - Embedded Rust at Ockam (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust is a very different beast for me. It is a &lt;em&gt;much&lt;/em&gt; bigger and &lt;em&gt;much&lt;/em&gt; more capable language. However, I've found that it is, in many ways, a lot more restrictive in how you can approach problems. I frequently find myself being perplexed at how to eloquently solve a problem. When I discover the idiomatic way of doing it I'm usually both blown away by the brilliance of it and a bit disheartened by how difficult it would be to come up with that solution by myself :-).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://reddit.com/r/rust/comments/id8n8d/are_some_of_you_coming_from_javascript_ts/g27d3ni/"&gt;mikekchar on /r/rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/931"&gt;Stephan Sokolow&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/ih8uai/this_week_in_rust_353/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 352</title><link href="https://this-week-in-rust.org/blog/2020/08/18/this-week-in-rust-352/" rel="alternate"></link><updated>2020-08-18T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2020-08-18:blog/2020/08/18/this-week-in-rust-352/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/emberian/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://rustacean-station.org/episode/028-twir-352/"&gt;this week's &lt;em&gt;This Week in Rust Podcast&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/08/18/laying-the-foundation-for-rusts-future.html"&gt;Laying the foundation for Rust's future&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tooling"&gt;Tooling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/08/17/changelog-38.html"&gt;Rust Analyzer Changelog #38&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-embedded.github.io/blog/newsletter-24/"&gt;The Embedded Working Group Newsletter - 24&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/blog/39/why-rust-is-a-great-fit-for-embedded-software"&gt;Why Rust is a great fit for embedded software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jam1.re/blog/why-rusts-unsafe-works"&gt;Why Rust's Unsafe Works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fy.blackhats.net.au/blog/html/2018/10/19/rust_rwlock_and_mutex_performance_oddities.html"&gt;Rust RwLock and Mutex Performance Oddities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@knidarkness/the-most-exciting-journey-of-2020-6262d6c6f03"&gt;The most exciting journey of 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raphlinus.github.io/rust/gui/2019/06/21/smooth-resize-test.html"&gt;The smooth resize test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.gnome.org/~federico/blog/rust-stable-abi.html"&gt;"Rust does not have a stable ABI"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/yujiri8/rust-review-515p"&gt;Rust Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/icdape/rust_vs_c_a_jsts_developers_perspective/"&gt;Rust vs C++: A JS/TS Developer's Perspective&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flak.tedunangst.com/post/comparative-unsafety"&gt;Comparative Unsafety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io/2020/08/15/concrete-abstraction.html"&gt;Code Smell: Concrete Abstraction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drs.is/post/against-globs/"&gt;Against Glob Imports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-standard-rust"&gt;Learn Standard Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hashrust.com/blog/lifetimes-in-rust/"&gt;Lifetimes in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/the-compiler-is-your-friend/"&gt;Learning Rust: The Compiler is your Friend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/i-am-a-java-csharp-c-or-cplusplus-dev-time-to-do-some-rust"&gt;I am a Java, C#, C or C++ developer, time to do some Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/frustrated-its-not-you-its-rust"&gt;Frustrated? It's not you, it's Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kdubovikov.ml/articles/rust/async-unicorns-love-rust"&gt;Async Unicorns love Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io/2020/08/12/who-builds-the-builder.html"&gt;Who Builds the Builder?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://serokell.io/blog/rust-guide"&gt;Introduction to Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/rust-getting-started-with-the-most-loved-programming-language/"&gt;Rust for Beginners – Get Started with the Most Loved Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aralroca.com/blog/first-steps-webassembly-rust"&gt;First steps with WebAssembly in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.warambil.com/variables-and-memory-management-in-rust"&gt;Variables and memory management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexene.dev/2020/08/17/webassembly-without-the-browser-part-1.html"&gt;WebAssembly Without The Browser Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/adobetech/how-i-learned-to-stop-fighting-the-borrow-checker-and-learned-to-love-dirty-structs-b6c5fe91b1dd"&gt;How I Learned to Stop Fighting the Borrow Checker and Love Dirty Structs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fosskers.ca/en/blog/rust-software-dev"&gt;Software Development Languages: Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ES] &lt;a href="https://emanuelpeg.blogspot.com/2020/08/trait-objects-para-hacer-dynamic.html#.XzSf1yK4C00.reddit"&gt;Trait Objects para hacer Dynamic Dispatch en Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ES] &lt;a href="https://emanuelpeg.blogspot.com/2020/08/que-es-ownership-en-rust.html#.XzyW-R5KFe0.reddit"&gt;Que es Ownership en Rust?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ES] &lt;a href="https://emanuelpeg.blogspot.com/2020/08/que-es-ownership-en-rust-parte-2.html#.XzybavgXG4M.reddit"&gt;Que es Ownership en Rust? Parte 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PT] &lt;a href="https://dev.to/pehdepano/aprendendo-rust-07-regioes-da-memoria-usadas-pela-rust-208k"&gt;Aprendendo Rust: 07 - Regiões da memória usadas pela Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-more-rust"&gt;Learn More Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ebbflow.io/blog/vending-linux-2"&gt;Linux Packages For Rust (2/3) - Building with GitHub Actions using Custom Actions and Docker Container Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ryhl.io/blog/temporary-shared-mutation/"&gt;Temporarily opt-in to shared mutation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.stephenmarz.com/2020/08/03/risc-v-os-using-rust-input-devices/"&gt;RISC-V OS using Rust: Input Devices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/rusty-chains-a-basic-blockchain-implementation-written-in-pure-rust-gk2m3uri"&gt;Rusty Chains: A Basic Blockchain Implementation Written in Pure Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.eyalkalderon.com/nom-error-recovery/"&gt;Error recovery with parser combinators (using nom)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hiddentao.com/archives/2020/07/17/my-first-smart-contract-in-rust-on-elrond-vm"&gt;My first smart contract in Rust on Elrond VM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rfaulhaber/writing-an-emacs-module-in-rust-3pg5"&gt;Writing an Emacs module in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/mindflavor/exploring-azure-cosmosdb-with-rust-part-2-32c0"&gt;Exploring Azure CosmosDB with Rust - Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mender.io/blog/a-whirlwind-tour-of-the-mender-client-architecture-using-rust"&gt;A whirlwind tour of the Mender client architecture using Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-updates"&gt;Project Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/run-rust-on-your-embedded-device-from-vscode/"&gt;Run Rust on your embedded device from VSCode in one click&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc-blog.microsoft.com/2020/08/17/control-flow-guard-for-clang-llvm-and-rust/"&gt;Control Flow Guard for Clang/LLVM and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/iat25g/cranelift_can_now_compile_rustc_giving_nearly_7x/"&gt;Cranelift can now compile rustc - giving nearly 7x faster compilations than LLVM!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/ia1vlc/nightly_stdlib_docs_now_document_all_keywords/"&gt;Nightly stdlib docs now document all keywords!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opencollective.com/clap/updates/faster-development-with-tiny-bounties"&gt;Faster development with tiny bounties&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rustfest.eu/rustfest-goes-global"&gt;RustFest goes Global&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/1903.00982"&gt;Oxide: The Essence of Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/yujiri8/why-i-don-t-believe-in-pure-functional-programming-anymore-gin"&gt;Why I don't believe in pure functional programming anymore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/jolocomdev/engineering-safer-and-more-secure-solutions-for-digital-identity-and-access-management-with-rust-2e39"&gt;The merits of Rust for SSI and IAM software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gal.hagever.com/posts/windows-long-paths-in-rust/"&gt;Using Long Paths in Windows and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.snoyman.com/blog/2020/08/stackage-for-rust"&gt;Stackage for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://astropad.com/why-rust/"&gt;Why We're Bringing Astropad Cross-Platform with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.fanout.io/2020/08/11/rewriting-pushpins-connection-manager-in-rust/"&gt;Rewriting Pushpin's connection manager in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://soundcloud.com/arewepodcastyet/awpy-06-jonathan-turner"&gt;AreWePodcastYet - 06 Jonathan Turner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/lu-zero/cargo-c"&gt;cargo-c&lt;/a&gt;, a cargo subcommand to build and install C-ABI compatibile dynamic and static libraries.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/799"&gt;Zicklag&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cfp.rustfest.eu/events/2020"&gt;RustFest Global 2020 CFP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;345 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-08-10..2020-08-17"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75363"&gt;use existing &lt;code&gt;infcx&lt;/code&gt; when emitting trait impl diagnostic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75321"&gt;detect JS-style &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; and recover&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75320"&gt;detect likely &lt;code&gt;for foo of bar&lt;/code&gt; JS syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75338"&gt;move stack size check to &lt;code&gt;const_eval&lt;/code&gt; machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75212"&gt;add &lt;code&gt;array&lt;/code&gt; lang item and &lt;code&gt;[T; N]::map(f: FnMut(T) -&amp;gt; S)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74562"&gt;remove branch in optimized &lt;code&gt;is_ascii&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75157"&gt;constified &lt;code&gt;str::from_utf8_unchecked&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75105"&gt;hard way to respect &lt;code&gt;BTreeMap&lt;/code&gt;'s minimum node length&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75195"&gt;BTreeMap: purge innocent use of &lt;code&gt;into_kv_mut&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/188"&gt;hashbrown: implement &lt;code&gt;FusedIterator&lt;/code&gt; and &lt;code&gt;size_hint&lt;/code&gt; for &lt;code&gt;DrainFilter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74936"&gt;rustdoc: don't print "const" keyword on non-nightly build if &lt;code&gt;rustc_const_unstable&lt;/code&gt; is used on the item&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-08-17.md"&gt;2020-08-17&lt;/a&gt;.
  4 regressions, 3 improvements, 4 mixed bags.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/75132"&gt;Stabilize Range[Inclusive]::is_empty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/74238"&gt; stabilize ptr_offset_from&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/vcgsvrybclbzb/"&gt;August 19. Vancouver, BC, CA - Vancouver Rust - Rust Study/Hack/Hang-out Night&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustconf.com/"&gt;August 20. RustConf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/nppvrrybclbhc/"&gt;August 25. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Seoul-Meetup/events/qfkdvrybclbxb/"&gt;August 18. Seoul, KR - Rust Meetup - Rust last 6 months review (also available on Zoom)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://adobe.wd5.myworkdayjobs.com/en-US/external_experienced/job/San-Francisco/Back-End-Engineer_84977"&gt;Backend Engineer at Adobe (San Francisco)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;As Dave Herman always told me, “macros are for when you run out of language”. If you still have language left—and Rust gives you a lot of language—use the language first.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/pcwalton/status/1294676975575896064"&gt;Patrick Walton on twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/926"&gt;Nixon Enraght-Moony&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/icwq65/this_week_in_rust_352/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 351</title><link href="https://this-week-in-rust.org/blog/2020/08/11/this-week-in-rust-351/" rel="alternate"></link><updated>2020-08-11T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2020-08-11:blog/2020/08/11/this-week-in-rust-351/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://rustacean-station.org/episode/027-twir-351/"&gt;this week's &lt;em&gt;This Week in Rust Podcast&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;p&gt;No official Rust announcements this week! :)&lt;/p&gt;
&lt;h3 id="tooling"&gt;Tooling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/08/10/changelog-37.html"&gt;Rust Analyzer Changelog #37&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2020/08/10/changelog-128.html"&gt;IntelliJ Rust Changelog #128&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-gamedev.github.io/posts/newsletter-012/"&gt;This Month in Rust GameDev #12 - July 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustinblockchain.org/newsletters/2020-08-05-are-we-smart-contract-yet/"&gt;Rust in Blockchain #14 - Are We Smart (Contract) Yet?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://evrone.com/steve-klabnik-interview"&gt;Steve Klabnik Interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.vmsplice.net/2020/08/why-qemu-should-move-from-c-to-rust.html?m=1"&gt;Why QEMU should move from C to Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://john-millikin.com/first-impressions-of-rust"&gt;First Impressions of Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pieohpah/how-to-stick-with-rust-1gpf"&gt;How to Stick with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/blorente/why-learning-rust-is-great-as-a-second-language-5583"&gt;Why learning Rust is great...As a second language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://robert.ocallahan.org/2020/08/what-is-minimal-set-of-optimizations.html"&gt;What Is The Minimal Set Of Optimizations Needed For Zero-Cost Abstraction?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://without.boats/blog/propane/"&gt;Propane: an experimental generator syntax for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ES] &lt;a href="https://blog.categulario.tk/por-que-me-gusta-tanto-rust.html"&gt;¿Por qué me gusta tanto Rust?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-standard-rust"&gt;Learn Standard Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hashrust.com/blog/moves-copies-and-clones-in-rust/"&gt;Moves, copies and clones in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dygalo.dev/blog/rust-for-a-pythonista-2/"&gt;Rust for a Pythonista #2: Building a Rust crate for CSS inlining&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/surviving-rust-async-interfaces"&gt;Surviving Rust async interfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.x5ff.xyz/blog/async-tests-tokio-rust/"&gt;Two Easy Ways to Test Async Functions in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.philipdaniels.com/blog/2020/self-cloning-for-multiple-threads-in-rust/"&gt;Cloning yourself - a refactoring for thread-spawning Rust types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notes.iveselov.info/programming/allocation-api-and-allocators"&gt;Allocation API, allocators and virtual memory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ES] &lt;a href="https://emanuelpeg.blogspot.com/2020/08/polimorfismo-con-traits-en-rust.html#.Xy7c6ukK2fc.reddit"&gt;Polimorfismo con traits en Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PT] &lt;a href="https://dev.to/pehdepano/aprendendo-rust-06-controles-de-fluxo-4mff"&gt;Aprendendo Rust: 06 - Controles de fluxo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PT] &lt;a href="https://rodolfoghi.github.io/posts/meia-hora-aprendendo-rust-parte1/"&gt;Meia hora aprendendo Rust - Parte 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=b4mS5UPHh20"&gt;Crust of Rust: Channels&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-more-rust"&gt;Learn More Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.lpalmieri.com/posts/2020-08-09-zero-to-production-3-how-to-bootstrap-a-new-rust-web-api-from-scratch/"&gt;Zero To Production #3: How To Bootstrap A Rust Web API From Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cvpartner.com/blog/using-rust-lambdas-in-production"&gt;Using Rust Lambdas in Production&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/incorporate-postgres-with-rust/"&gt;Incorporate Postgres with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://onatm.dev/2020/08/10/let-s-implement-a-bloom-filter/"&gt;Let's implement a Bloom Filter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/paulkernfeld/contiguous-data-in-rust"&gt;A Guide to Contiguous Data in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.possiblerust.com/guide/inbound-outbound-ffi"&gt;Inbound &amp;amp; Outbound FFI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.secondstate.io/articles/deno-webassembly-rust-wasi/"&gt;Tutorial: Deno Apps with WebAssembly, Rust, and WASI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sheshbabu.com/posts/rust-wasm-yew-single-page-application/"&gt;Single Page Applications using Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://willcrichton.net/notes/type-safe-printf/"&gt;Implementing a Type-safe printf in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://benkonz.github.io/building-a-brainfuck-compiler-with-rust-and-llvm/"&gt;Building a Brainf*ck Compiler with Rust and LLVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.com/article/20/8/capsule-networking"&gt;Modernize network function development with this Rust-based framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/delta_maniac/lets-build-a-redditbot-to-curate-playlist-links-1k4o"&gt;Let's build a RedditBot to curate playlist links - I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/delta_maniac/lets-build-a-redditbot-to-curate-playlist-links-ii-48kf"&gt;Let's build a RedditBot to curate playlist links - II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.aclysma.com/rust-on-ios-with-sdl2/"&gt;Rust on iOS with SDL2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/UgNrDb6hQQ0"&gt;Using Linux libc in Rust - with the file-locker Crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/BZqt187RWTw"&gt;Embedded Rust Mob Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/bzja9fQWzdA"&gt;Implementing TCP in Rust (part 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://vimeo.com/446618910"&gt;Define a function with parameters in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-updates"&gt;Project Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/knurling-rs/"&gt;Knurling-rs Announcement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.meilisearch.com/meili-fundraise/"&gt;Meili raises 1.5M€ for open source search in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/i55s5z/hors_instant_coding_answers_via_the_command_line/"&gt;hors - instant coding answers via the command line have released v0.6.4, with pretty colorized output by default&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.garrensmith.com/blogs/fortuna-rs-couchdb-view-server"&gt;Building a faster CouchDB View Server in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/blog/41/the-promise-of-rust-async-await-for-embedded"&gt;The promise of Rust async-await for embedded&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.camdenreslink.com/dev/implementing-the-dot-net-profiling-api-in-rust/"&gt;Implementing the .NET Profiling API in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yoric.github.io/post/rust-named-arguments/"&gt;Possibly one step towards named arguments in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/21st-century-embedded-tooling/"&gt;Embedded Rust tooling for the 21st century&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/i4ij47/rustc_1441_is_reproducible_in_debian/"&gt;rustc 1.44.1 is reproducible in Debian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/i44ahg/google_engineers_just_submitted_a_new_llvm/"&gt;Google engineers just submitted a new LLVM optimizer for consideration which gains an average of 2.33% perf.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/bevy"&gt;bevy&lt;/a&gt;, a very capable yet simple game engine.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/798"&gt;mmmmib&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/issues/8415"&gt;cargo: Deduplicate Cargo workspace
  information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotenv-linter/dotenv-linter/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;dotenv-linter: several good first issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruma/ruma/labels/help%20wanted"&gt;ruma: several help wanted issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorbase/tensorbase/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;tensorbase: several good first issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kanidm/kanidm/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;kanidm: several good first issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugs.libre-soc.org/show_bug.cgi?id=451"&gt;Libre-SOC: Add PowerPC64 to Rust's new inline assembly implementation (payment available)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;307 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-08-03..2020-08-10"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75280"&gt;add back unwinding support for Sony PSP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75227"&gt;fix ICE when using asm! on an unsupported architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/591"&gt;handle well known traits for more types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75318"&gt;resolve &lt;code&gt;char&lt;/code&gt; as a primitive even if there is a module in scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75130"&gt;forbid &lt;code&gt;#[track_caller]&lt;/code&gt; on main&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74953"&gt;remove restriction on type parameters preceding consts w/ feature const-generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74877"&gt;implement the &lt;code&gt;min_const_generics&lt;/code&gt; feature gate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75349"&gt;tweak confusable idents checking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1503"&gt;miri: accept some post-monomorphization errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1501"&gt;bubble up errors from &lt;code&gt;FileDescriptor::as_file_handle&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75271"&gt;simplify &lt;code&gt;array::IntoIter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75260"&gt;polymorphize: unevaluated constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75255"&gt;instance: polymorphize upvar closures/generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75253"&gt;clean up const-hacks in int endianess conversion functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75248"&gt;add &lt;code&gt;as_mut_ptr&lt;/code&gt; to &lt;code&gt;NonNull&amp;lt;[T]&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75250"&gt;make &lt;code&gt;MaybeUninit::as_&lt;/code&gt;(&lt;code&gt;mut_&lt;/code&gt;)&lt;code&gt;ptr&lt;/code&gt; const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75203"&gt;make &lt;code&gt;IntoIterator&lt;/code&gt; lifetime bounds of &lt;code&gt;&amp;amp;BTreeMap&lt;/code&gt; match with &lt;code&gt;&amp;amp;HashMap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75163"&gt;implement &lt;code&gt;into_keys&lt;/code&gt; and &lt;code&gt;into_values&lt;/code&gt; for associative maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75084"&gt;stabilize &lt;code&gt;Ident::new_raw&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75005"&gt;limit I/O vector count on Unix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74759"&gt;add &lt;code&gt;unsigned_abs&lt;/code&gt; to signed integers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75257"&gt;BTreeMap: better way to postpone root access in DrainFilter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/182"&gt;hashbrown: do not iterate to drop if empty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/185"&gt;hashbrown: relax bounds on HashSet constructors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/183"&gt;hashbrown: avoid closures to improve compile times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/881"&gt;stdarch: add more things that do adds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2187"&gt;futures: avoid writes without any data in write_all_vectored&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75124"&gt;clean up rustdoc's &lt;code&gt;main()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75237"&gt;rustdoc: display elided lifetime for non-reference type in doc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-08-11.md"&gt;2020-08-11&lt;/a&gt;.
  1 regression, 1 improvements, 1 of them on rollups. No outstanding nags from last week.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No Tracking Issues or PRs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2973"&gt;Proposal for POSIX error numbers in &lt;code&gt;std::os::unix&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2969"&gt;Standardize methods for leaking containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2968"&gt;Introduce '$self' macro metavar for hygienic macro items&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Saar/events/272044845/"&gt;August 11. Saarbrücken, DE - Rust-Saar Meetup &lt;code&gt;3u16&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/mzzfsrybclbpb/"&gt;August 11. Dallas, TX, US - Dallas Rust - Second Tuesday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/272060817/"&gt;August 13. San Diego, CA, US - San Diego Rust - August 2020 Tele-Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/vcgsvrybclbzb/"&gt;August 19. Vancouver, BC, CA - Vancouver Rust - Rust Study/Hack/Hang-out Night&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustconf.com/"&gt;August 20. RustConf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrybclbrb/"&gt;August 13. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/nppvrrybclbhc/"&gt;August 25. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Seoul-Meetup/events/qfkdvrybclbxb/"&gt;August 18. Seoul, KR - Rust Meetup - Rust last 6 months review (also available on Zoom)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.notion.so/Hiring-Senior-Rust-Engineer-e6c94ccc261f426c80a483c7fc642412"&gt;Senior Rust Engineer at equilibrium (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/derivadex/jobs/917157-software-developer"&gt;Software Developer at DerivaDEX (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apply.workable.com/casperlabs/j/85A300F063/"&gt;Rust Core Engineer at CasperLabs (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;You're not allowed to use references in structs until you think Rust is easy. They're the evil-hardmode of Rust that will ruin your day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/perpetual-n00b-struggling-with-ownership-again/46920/4"&gt;Kornel on rust-users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/918"&gt;Tom Phinney&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/i8iqb9/this_week_in_rust_351/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</summary></entry></feed>