<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>This Week in Rust - TWiR Contributors</title><link>https://this-week-in-rust.org/</link><description></description><lastBuildDate>Wed, 10 Aug 2022 00:00:00 -0400</lastBuildDate><item><title>This Week in Rust 455</title><link>https://this-week-in-rust.org/blog/2022/08/10/this-week-in-rust-455/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2022/08/05/nll-by-default.html"&gt;Non-lexical lifetimes (NLL) fully stable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2022/08/08/compiler-team-2022-midyear-report.html"&gt;Rust Compiler Midyear Report for 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2022/08/10/libs-contributors.html"&gt;Please welcome Dan to Library Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Foundation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/2022-08-09-trademark-policy-review-and-survey/"&gt;Trademark Policy: Review and Survey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-osdev.com/this-month/2022-07/"&gt;This Month in Rust OSDev: July 2022&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ralfj.de/blog/2022/08/08/minirust.html"&gt;Announcing: MiniRust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gregoryszorc.com/blog/2022/08/08/achieving-a-completely-open-source-implementation-of-apple-code-signing-and-notarization/"&gt;Achieving A Completely Open Source Implementation of Apple Code Signing and Notarization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adventures.michaelfbryan.com/posts/announcing-cargo-wapm/"&gt;Announcing Cargo WAPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://argmin-rs.org/blog/version-v0-6-0/"&gt;argmin 0.6.0 and argmin-math 0.1.0 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2022/08/08/changelog-141.html"&gt;rust-analyzer changelog #141&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fyrox.rs/blog/post/feature-highlights-0-27/"&gt;Fyrox 0.27 Feature Highlights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.antoyo.xyz/rustc_codegen_gcc-progress-report-14"&gt;rustc_codegen_gcc: Progress Report #14&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/rust/2022/08/03/intellij-rust-updates-for-the-2022-2-release-cycle/"&gt;IntelliJ Rust: Updates For the 2022.2 Release Cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fornjot.app/blog/weekly-release/2022-w32/"&gt;Fornjot (code-first CAD in Rust) - Weekly Release - 2022-W32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pxp9.github.io/rust/async-processing/"&gt;Fang, async background processing for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://m8geil.de/posts/hexosynth-8/"&gt;HexoSynth 2022 - Devlog #8 - A Visual DSP Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://weekly.databend.rs/2022-08-10-databend-weekly/"&gt;This week in Databend #54: A Modern Cloud Data Warehouse for Everyone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.burntsushi.net/unwrap/"&gt;Using unwrap() in Rust is Okay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://agourlay.github.io/rust-performance-retrospective-part3/"&gt;A performance retrospective using Rust (part 3)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://deprogrammaticaipsum.com/the-state-of-rust-in-2022/"&gt;The State Of Rust In 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thecodedmessage.com/posts/blocking-sockets/"&gt;Blocking Sockets and Async&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aidancully.blogspot.com/2022/08/how-does-rust-async-work.html"&gt;How does Rust async work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rsdlt.onrender.com/posts/welcome-blog-rust-technology-development-programming-language/"&gt;Basic Operator Overloading with Traits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/understanding-rust-generics-how-use/"&gt;Understanding Rust generics and how to use them&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://robert.kra.hn/posts/hot-reloading-rust/"&gt;Hot Reloading Rust — for Fun and Faster Feedback Cycles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swatinem.de/blog/magic-zerocopy/"&gt;The Magic of zerocopy (compared with scroll)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://manishearth.github.io/blog/2022/08/03/zero-copy-1-not-a-yoking-matter/"&gt;Not a Yoking Matter (Zero-Copy #1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://manishearth.github.io/blog/2022/08/03/zero-copy-2-zero-copy-all-the-things/"&gt;Zero-Copy All The Things! (Zero-Copy #2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://manishearth.github.io/blog/2022/08/03/zero-copy-3-so-zero-its-dot-dot-dot-negative/"&gt;So Zero It's ... Negative? (Zero-Copy #3)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.shuttle.rs/blog/2022/08/04/middleware"&gt;What is server middleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tung.github.io/posts/rust-and-webassembly-without-a-bundler/"&gt;Rust and WebAssembly without a Bundler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.adamchalmers.com/what-are-extensions/"&gt;What are Rust's HTTP extensions?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://owengage.com/writing/2022-08-05-mapping-into-the-serde-data-model/"&gt;Mapping into the serde data model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dorianlistens.com/2022/08/rust-analyzer-generate-enum-variant-with-associated-values/"&gt;Generate Enum Variant with associated values in Rust Analyzer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kgrech/7-ways-to-pass-a-string-between-rust-and-c-4ieb"&gt;7 ways to pass a string between 🦀 Rust and C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/stm32f4-embedded-rust-at-the-hal-i2c-temperature-pressure-sensing-with-bmp180"&gt;STM32F4 Embedded Rust at the HAL: I2C Temperature &amp;amp; Pressure Sensing with BMP180&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.papercall.io/eurorust-2022"&gt;EuroRust CFP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itch.io/jam/bevy-jam-2"&gt;Bevy Jam #2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1hALxNZimzc"&gt;Rust Arcade: Designing a Custom Arcade Machine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/ayrat555/fang"&gt;fang&lt;/a&gt; an async background processing crate.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1096"&gt;Ayrat Badykov&lt;/a&gt; for the self-suggestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnTitor/ctest2/issues/6"&gt;ctest2 - CTest uses syntex_syntax which doesn't support raw identifiers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnTitor/ctest2/issues/38"&gt;ctest2 - Fails to parse &lt;code&gt;_&lt;/code&gt; as a const identifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3149"&gt;ockam - Change &lt;code&gt;ockam tcp-listener create&lt;/code&gt; command for --at NODE and ADDRESS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3188"&gt;ockam - Implement the ockam secure-channel list command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3177"&gt;ockam - Make services information displayed with ockam node create | show command more dynamic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metalbear-co/mirrord/issues/220"&gt;mirrord - Remove unused dependencies from mirrord-layer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;330 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-08-01..2022-08-08"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98771"&gt;add support for link-flavor rust-lld for iOS, tvOS and watchOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100035"&gt;enable function merging when opt is for size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100167"&gt;recover &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt; instead of &lt;code&gt;use&lt;/code&gt; in item&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99786"&gt;recover from C++ style &lt;code&gt;enum struct&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100111"&gt;provide suggestion on missing &lt;code&gt;let&lt;/code&gt; in binding statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100168"&gt;improve diagnostics for &lt;code&gt;const a: = expr;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100019"&gt;revive suggestions for boxed trait objects instead of impl Trait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100058"&gt;suggest a positional formatting argument instead of a captured argument&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99835"&gt;suggest adding/removing &lt;code&gt;ref&lt;/code&gt; for binding patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/95977"&gt;warn about dead tuple struct fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98796"&gt;do not exclusively suggest &lt;code&gt;;&lt;/code&gt; when &lt;code&gt;,&lt;/code&gt; is also a choice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100130"&gt;avoid pointing out &lt;code&gt;return&lt;/code&gt; span if it has nothing to do with type error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99953"&gt;always create elided lifetimes, even if inferred&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100093"&gt;enable unused_parens for match arms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100029"&gt;prevent ICE for &lt;code&gt;doc_alias&lt;/code&gt; on match arm, statement, expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100094"&gt;detect type mismatch due to loop that might never iterate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2346"&gt;miri: add &lt;code&gt;mkstemp&lt;/code&gt; shim for unix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2457"&gt;miri: add shim for realpath on unix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2467"&gt;miri: add support for env::home_dir&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2474"&gt;miri: also forward --manifest-path to 'cargo metadata'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2466"&gt;miri: fix an ICE in nanosleep()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2469"&gt;miri: implement some missing float functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100087"&gt;avoid invalidating the CFG in &lt;code&gt;MirPatch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99431"&gt;remove &lt;code&gt;fn backtrace&lt;/code&gt; and replace with usages of provider API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100023"&gt;add back &lt;code&gt;Send&lt;/code&gt; and &lt;code&gt;Sync&lt;/code&gt; impls on &lt;code&gt;ChunksMut&lt;/code&gt; iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100169"&gt;optimize &lt;code&gt;pointer::as_aligned_to&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/portable-simd/pull/299"&gt;portable SIMD: fix interleave/deinterleave for vectors with only one lane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc_codegen_gcc/pull/203"&gt;codegen_gcc: support symbol visibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10924"&gt;cargo: improve error message for &lt;code&gt;no such subcommand&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99738"&gt;rustdoc: avoid inlining modules with duplicate names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100207"&gt;rustdoc: do not mark the contents of a skipped module as inlined&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12934"&gt;rust-analyzer: add a setting to disable comment continuation in VSCode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12937"&gt;rust-analyzer: add fixups for incomplete in proc-macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12931"&gt;rust-analyzer: add more constructors and entry-APIs for la-arena&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12880"&gt;rust-analyzer: add syntax fixup for while loops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12974"&gt;rust-analyzer: corrected order of printing op and &lt;code&gt;=&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12947"&gt;rust-analyzer: don't switch workspace on vfs file changes from libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12939"&gt;rust-analyzer: error Diagnostics appear in the wrong place&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12959"&gt;rust-analyzer: fix &lt;code&gt;test_rainbow_highlighting&lt;/code&gt; gate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12905"&gt;rust-analyzer: generate rust type from json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12956"&gt;rust-analyzer: more methods and traits for &lt;code&gt;la_arena::ArenaMap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12962"&gt;rust-analyzer: parse range patterns in struct and slice without trailing comma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12953"&gt;rust-analyzer: run stable &lt;code&gt;fmt&lt;/code&gt; &amp;amp; &lt;code&gt;cargo&lt;/code&gt; through &lt;code&gt;rustup&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12933"&gt;rust-analyzer: use an empty expander for ignored non-attribute proc-macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12948"&gt;rust-analyzer: handle operators like their trait functions in the IDE layer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12837"&gt;rust-analyzer: support associated values in "Generate Enum Variant" assist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12949"&gt;rust-analyzer: fix incorrect token pick rankings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12942"&gt;rust-analyzer: make &lt;code&gt;concat!&lt;/code&gt; work with char&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9264"&gt;clippy: add &lt;code&gt;elapsed_instant&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9303"&gt;clippy: fix ICE when reading literals with weird proc-macro spans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9266"&gt;clippy: fix &lt;code&gt;cast_abs_to_unsigned&lt;/code&gt; with code in parens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9053"&gt;clippy: fix suggestions for &lt;code&gt;async&lt;/code&gt; closures in &lt;code&gt;redundant_closure_call&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8694"&gt;clippy: more proc-macro detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9302"&gt;clippy: move &lt;code&gt;significant_drop_in_scrutinee&lt;/code&gt; into &lt;code&gt;nursery&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9306"&gt;clippy: rename &lt;code&gt;logic_bug&lt;/code&gt; to &lt;code&gt;overly_complex_bool_expr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9126"&gt;clippy: &lt;code&gt;explicit_auto_deref&lt;/code&gt; changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9282"&gt;clippy: add paren before '?' when suggesting deref for &lt;code&gt;clone_on_copy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;A pretty quiet week for performance. Unfortunately, by far the biggest change was a regression introduced by increasing the minimum libc version for linux-gnu targets. The exact reason for why this happened in this case is unclear, and it's not easy to investigate. Luckily, the average regression introduced by this change was 0.4% which is fairly small, and many of the larger regressions were limited to doc builds.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=792bc5a0102d0973d42183a2b267850bb905236f&amp;amp;end=cc4dd6fc9f1a5c798df269933c7e442b79661a86&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;792bc5a0..cc4dd6fc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="center"&gt;mean&lt;/th&gt;
&lt;th align="center"&gt;max&lt;/th&gt;
&lt;th align="center"&gt;count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;0.5%&lt;/td&gt;
&lt;td align="center"&gt;1.4%&lt;/td&gt;
&lt;td align="center"&gt;146&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;0.8%&lt;/td&gt;
&lt;td align="center"&gt;1.6%&lt;/td&gt;
&lt;td align="center"&gt;78&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-2.0%&lt;/td&gt;
&lt;td align="center"&gt;-4.0%&lt;/td&gt;
&lt;td align="center"&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;All ❌✅ (primary)&lt;/td&gt;
&lt;td align="center"&gt;0.5%&lt;/td&gt;
&lt;td align="center"&gt;1.4%&lt;/td&gt;
&lt;td align="center"&gt;146&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;1 Regressions, 2 Improvements, 2 Mixed; 1 of them in rollups
42 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;Full report &lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-08-09.md"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/97550"&gt;[RFC] Support &lt;code&gt;.comment&lt;/code&gt; section like GCC/Clang (&lt;code&gt;!llvm.ident&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/71668"&gt;Tracking Issue for "unsafe blocks in unsafe fn" (RFC #2585)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3300"&gt;Distinguish closures from callables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2022-08-10 - 2022-09-07 🦀&lt;/p&gt;
&lt;h3&gt;Virtual&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-08-10 | Virtual (Boulder, CO, US) | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/zvxcsrydclbnb/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-10 | Virtual (Brasília, BR) | &lt;a href="https://www.meetup.com/turing-community/"&gt;Turing Community&lt;/a&gt; + &lt;a href="https://www.meetup.com/turing-community/members/?op=leaders"&gt;Turing Community LatAm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/turing-community/events/287559034/"&gt;&lt;strong&gt;Coding Dojo #2: Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-10 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/287450224/"&gt;&lt;strong&gt;cargo expand --bin writing_proc_macros&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-10 | Virtual (Hoboken, NJ, US) | &lt;a href="https://www.meetup.com/neighborhood-math-club/"&gt;Neighborhood Math Club&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/neighborhood-math-club/events/kpgpssydclbnb/"&gt;&lt;strong&gt;The Early Rustacean Gets The Worm!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-11 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/hlvbvsydclbpb/"&gt;&lt;strong&gt;Rust Nürnberg online&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-12 | Virtual + Tokyo, JP | &lt;a href="https://gallery.tonari.no/en/tonari-lab"&gt;tonari&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/w7bktx/2022_tokyo_and_elsewhere_rust_game_hack_event_aug/"&gt;&lt;strong&gt;Tokyo Rust Game Hack 2022 edition: The Bombercrab Challenge&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-13 | Virtual | &lt;a href="https://gamedev.rs/"&gt;Rust Gamedev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?q=https://discord.gg/yNtPTb2&amp;amp;sa=D&amp;amp;source=calendar&amp;amp;usd=2&amp;amp;usg=AOvVaw2Eop9Blil9YUWeTq472NIi"&gt;&lt;strong&gt;Rust Gamedev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-13 | Virtual (Bangalore, IN) | &lt;a href="https://www.meetup.com/polkadot-india/"&gt;Polkadot India&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/polkadot-india/events/287058154/"&gt;&lt;strong&gt;Substrate Saturday - Bootcamp Series 2: Fundamentals of Rust &amp;amp; Substrate&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-16 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/287286736/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-16 | Virtual (Granada, ES) | &lt;a href="https://www.meetup.com/granadagdg/"&gt;Google Developer Group Granada&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/granadagdg/events/287702154/"&gt;&lt;strong&gt;¡Aprendamos Rust!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-16 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/RustDC/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/vdhxgsydclbvb/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-17 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/287450947/"&gt;&lt;strong&gt;C++ Concepts vs Rust Traits&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-17 | Virtual (Hoboken, NJ, US) | &lt;a href="https://www.meetup.com/neighborhood-math-club/"&gt;Neighborhood Math Club&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/neighborhood-math-club/events/287468144/"&gt;&lt;strong&gt;The Early Rustacean Gets The Worm!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-17 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/Vancouver-Rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/nwcmpsydclbwb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-18 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/287203159/"&gt;&lt;strong&gt;Hierarchical Task Network compiler written in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-18 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/qtvtvsydclbxb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-18 | Virtual (Tehran, IR) | &lt;a href="https://rust-meetup.ir/"&gt;Iran Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-meetup.ir/2022/08/18/8th-meetup.html"&gt;&lt;strong&gt;Iran Rust Meetup #8&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-18 | Virtual (Wiesbaden, DE) | &lt;a href="https://www.meetup.com/frontend_rm/"&gt;Frontend RheinMain&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/frontend_rm/events/287713743/"&gt;&lt;strong&gt;Rust for curious developers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-20 | Virtual | &lt;a href="https://rust-edu.org/workshop"&gt;Rust Edu&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-edu.org/workshop"&gt;&lt;strong&gt;Rust Education Workshop 2022 (Submission deadline 2022-08-16)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-20 | Virtual (Hoboken, NJ, US) | &lt;a href="https://www.meetup.com/neighborhood-math-club/"&gt;Neighborhood Math Club&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/neighborhood-math-club/events/kbjcssydclbbc/"&gt;&lt;strong&gt;Share Your Coding Project(s)!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-24 | Virtual + Wellington, NZ | &lt;a href="https://www.meetup.com/rust-wellington/"&gt;Rust Wellington&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-wellington/events/287280642/"&gt;&lt;strong&gt;Flywheel Edition: 3 talks on Rust!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-27 | Virtual (Bangalore, IN) | &lt;a href="https://www.meetup.com/polkadot-india/"&gt;Polkadot India&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/polkadot-india/events/287059968/"&gt;&lt;strong&gt;Substrate Saturday - Bootcamp Series 2: Fundamentals of Rust &amp;amp; Substrate&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-30 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/287286751/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-30 | Virtual + Dallas, TX, US | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsydclbnc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-09-01 | Virtual | &lt;a href="https://www.meetup.com/google-open-source/"&gt;Google Open Source Live&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/google-open-source/events/287435626/"&gt;&lt;strong&gt;Rust Day on Google Open Source Live&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-09-02 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/287092397/"&gt;&lt;strong&gt;Rust Nuremberg Get Together&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-09-03 | Virtual (Bangalore, IN) | &lt;a href="https://www.meetup.com/polkadot-india/"&gt;Polkadot India&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/polkadot-india/events/287059974/"&gt;&lt;strong&gt;Substrate Saturday - Bootcamp Series 2: Fundamentals of Rust &amp;amp; Substrate&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-09-03 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/287346970/"&gt;&lt;strong&gt;Deep Dive Session 1: Tokio my-redis Tutorial&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-09-06 | Virtual (Beijing, CN) | &lt;a href="https://www.meetup.com/wasm-rust-meetup/"&gt;WebAssembly and Rust Meetup (Rustlang)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/wasm-rust-meetup/events/286481325/"&gt;&lt;strong&gt;Monthly WasmEdge Community Meeting, a CNCF sandbox WebAssembly runtime&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-09-06 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/xgmfssydcmbjb/"&gt;&lt;strong&gt;Buffalo Rust User Group, First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-09-07 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/285121715/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-09-10 | Virtual (Bangalore, IN) | &lt;a href="https://www.meetup.com/polkadot-india/"&gt;Polkadot India&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/polkadot-india/events/287059979/"&gt;&lt;strong&gt;Substrate Saturday - Bootcamp Series 2: Fundamentals of Rust &amp;amp; Substrate&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Asia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-08-12 | Tokyo, JP + Virtual | &lt;a href="https://gallery.tonari.no/en/tonari-lab"&gt;tonari&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bombercrab-rust-game-hack.peatix.com/view"&gt;&lt;strong&gt;Tokyo Rust Game Hack 2022 edition: The Bombercrab Challenge&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-08-30 | Utrecht, NL | &lt;a href="https://www.meetup.com/rust-nederland/"&gt;Rust Nederland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/287302224/"&gt;&lt;strong&gt;Run Rust Anywhere&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-08-10 | Atlanta, GA, US | &lt;a href="https://www.meetup.com/rust-atl/"&gt;Rust Atlanta&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atl/events/pczdssydclbnb/"&gt;&lt;strong&gt;Grab a beer with fellow Rustaceans&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-11 | Columbus, OH, US| &lt;a href="https://www.meetup.com/columbus-rs/"&gt;Columbus Rust Society&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrydclbpb/"&gt;&lt;strong&gt;Monthly Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-16 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/wjkjssydclbvb/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-23 | Toronto, ON, CA | &lt;a href="https://www.meetup.com/rust-toronto/"&gt;Rust Toronto&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-toronto/events/287284601/"&gt;&lt;strong&gt;WebAssembly plugins in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-25 | Ciudad de México, MX | &lt;a href="https://www.meetup.com/rust-mx/"&gt;Rust MX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-mx/events/287561814/"&gt;&lt;strong&gt;Concurrencia &amp;amp; paralelismo con Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-25 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/kvrxqsydclbpb/"&gt;&lt;strong&gt;Hello World Cargo Crates Using Github Actions with jojobyte and Food!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Oceania&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-08-24 | Wellington, NZ + Virtual | &lt;a href="https://www.meetup.com/rust-wellington/"&gt;Rust Wellington&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-wellington/events/287280642/"&gt;&lt;strong&gt;Flywheel Edition: 3 talks on Rust!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-26 | Melbourne, VIC, AU | &lt;a href="https://www.meetup.com/rust-melbourne/"&gt;Rust Melbourne&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-melbourne/events/287468753/"&gt;&lt;strong&gt;August 2022 Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;h2&gt;Jobs&lt;/h2&gt;
&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/voglel/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Don't come empty-handed to a project saying "this could be rewritten in Rust". It's obnoxious and gives the rust community a bad name.&lt;br&gt;
Do start the project on your own, adding Rust to the build system and converting some significant functions, and then ask the project's community for comments.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://www.reddit.com/r/rust/comments/wfriz3/comment/iiw49bw/"&gt;moltonel on /r/rust&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1277"&gt;zjp-CN&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="REDDIT_LINK_HERE"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 10 Aug 2022 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2022-08-10:/blog/2022/08/10/this-week-in-rust-455/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 454</title><link>https://this-week-in-rust.org/blog/2022/08/03/this-week-in-rust-454/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2022/08/01/Increasing-glibc-kernel-requirements.html"&gt;Increasing the glibc and Linux kernel requirements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2022/08/01/changelog-140.html"&gt;rust-analyzer changelog #140&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thephilbert.io/2022/08/01/gcc-rust-monthly-report-19-july-2022/"&gt;GCC Rust Monthly Report #19 July 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seanmonstar.com/post/691039972381294592/this-month-in-hyper-july-2022"&gt;This Month in hyper: July 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bevyengine.org/news/bevy-0-8/"&gt;Bevy 0.8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/news/this-week-in-fluvio-0041/"&gt;This week in Fluvio #41: The programmable streaming platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fornjot.app/blog/weekly-release/2022-w31/"&gt;Fornjot (code-first CAD in Rust) - Weekly Release - 2022-W31&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zellij.dev/news/sixel-search-statusbar/"&gt;Zellij 0.31.0: Sixel support, search panes and custom status-bar keybindings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kurtlawrence.info/blog/ogma-v05-release"&gt;Ogma v0.5 Release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slint-ui.com/thisweek/2022-08-01.html"&gt;Slint UI crate weekly updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://m8geil.de/posts/hexosynth-7/"&gt;HexoSynth 2022 - Devlog #7 - The DSP JIT Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://weekly.databend.rs/2022-08-03-databend-weekly/"&gt;This week in Databend #53: A Modern Cloud Data Warehouse for Everyone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jackos.io/rust-kernel/rust-for-linux.html"&gt;Rust linux kernel development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/proc-macro-support-in-rust-analyzer-for-nightly-rustc-versions"&gt;Proc macro support in rust-analyzer for nightly rustc versions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dystroy.org/blog/keybindings/"&gt;Manage keybindings in a Rust terminal application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nested.substack.com/p/safety"&gt;Safety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.theincredibleholk.org/blog/2022/07/29/safe-flexible-aliasing-with-deferred-borrows/"&gt;Paper Review: Safe, Flexible Aliasing with Deferred Borrows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrissardegna.com/blog/uncovering-a-blocking-syscall/"&gt;Uncovering a Blocking Syscall&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://colinfinck.de/posts/nt-list-windows-linked-lists-in-idiomatic-rust/"&gt;nt-list: Windows Linked Lists in idiomatic Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://blog.scottlogic.com/2022/08/01/beyond-the-hype-most-loved-language-does-rust-justify-the-hype.html"&gt;Beyond the Hype: Most-loved language – does Rust justify the hype?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.shuttle.rs/blog/2022/07/28/patterns-with-rust-types"&gt;Patterns with Rust types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://recursion.wtf/posts/rust_schemes_2/"&gt;Fully generic recursion in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/advanced-shellcode-in-rust"&gt;Advanced shellcode in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/stm32f4-embedded-rust-at-the-hal-analog-temperature-sensing-using-the-adc"&gt;STM32F4 Embedded Rust at the HAL: Analog Temperature Sensing using the ADC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=5l7WUXaaHzA"&gt;Are we web yet? Our journey to Axum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=ifaLk5v3W90"&gt;Build your Rust lightsaber (my Rust toolkit recommendations)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=ygL_xcavzQ4"&gt;Rust Tutorial Full Course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=vAg2xXRHqXY"&gt;Bevy 0.7 to 0.8 migration guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.erk.dev/posts/rrust"&gt;RRust: A Reversible Embedded Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.theregister.com/2022/07/27/meta_approves_four_programming_languages/"&gt;Meta approves 4 programming languages for employees and devs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/news/Meta-setzt-auf-die-Programmiersprachen-C-Python-Hack-und-neuerdings-Rust-7193403.html"&gt;Meta setzt auf die Programmiersprachen C++, Python, Hack und neuerdings Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://lib.rs/crates/lending-iterator"&gt;lending-iterator&lt;/a&gt;, a type similar to &lt;code&gt;std::iter::Iterator&lt;/code&gt;, but with some type trickery that allows it to &lt;code&gt;.windows_mut(_)&lt;/code&gt; safely.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1094"&gt;Daniel H-M&lt;/a&gt; for the self-nomination!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.papercall.io/eurorust-2022"&gt;EuroRust Call for Papers is Open&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgrif/pq-sys/issues/42"&gt;pq-sys - Setup a CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3068"&gt;ockam - Make &lt;code&gt;ockam message send ...&lt;/code&gt; support &lt;code&gt;-&lt;/code&gt; to represent STDIN in its addr argument&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3100"&gt;ockam - Display a node's default identifier in output of &lt;code&gt;ockam node create | show | list&lt;/code&gt; commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3077"&gt;ockam - Refactor &lt;code&gt;ockam portal ...&lt;/code&gt; commands into &lt;code&gt;ockam tcp-...&lt;/code&gt; commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;391 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-07-25..2022-08-01"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99903"&gt;Add diagnostic when using &lt;code&gt;public&lt;/code&gt; instead of &lt;code&gt;pub&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99703"&gt;Expose &lt;code&gt;size_hint()&lt;/code&gt; for &lt;code&gt;TokenStream&lt;/code&gt;'s iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99671"&gt;suggest dereferencing index when trying to use a reference of usize as index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99974"&gt;suggest removing a semicolon and boxing the expressions for if-else&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99593"&gt;suggest removing the tuple struct field for the unwrapped value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99629"&gt;improve &lt;code&gt;cannot move out of&lt;/code&gt; error message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99673"&gt;don't ICE on invalid dyn calls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/755"&gt;chalk: solve auto traits for closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99704"&gt;add &lt;code&gt;Self: ~const Trait&lt;/code&gt; to traits with &lt;code&gt;#\[const_trait\]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2444"&gt;miri: add default impls for &lt;code&gt;FileDescriptor&lt;/code&gt; methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2450"&gt;miri: use &lt;code&gt;cargo_metadata&lt;/code&gt; in cargo-miri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2426"&gt;miri: use real exec on &lt;code&gt;cfg(unix)&lt;/code&gt; targets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99574"&gt;codegen: use new {re,de,}allocator annotations in llvm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99725"&gt;use &lt;code&gt;FxIndexSet&lt;/code&gt; for &lt;code&gt;region_bound_pairs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99884"&gt;lexer improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99667"&gt;optimize &lt;code&gt;UnDerefer&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/78802"&gt;implement network primitives with ideal Rust layout, not C system layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/94247"&gt;fix &lt;code&gt;slice::ChunksMut&lt;/code&gt; aliasing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98553"&gt;optimize &lt;code&gt;vec::IntoIter::next_chunk&lt;/code&gt; impl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10844"&gt;cargo: support for negative --jobs parameter, counting backwards from max CPUs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99235"&gt;rustdoc: add support for &lt;code&gt;#[rustc_must_implement_one_of]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99873"&gt;rustdoc: align invalid-html-tags lint with commonmark spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt/pull/5459"&gt;rustfmt: nicer skip context for macro/attribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9273"&gt;clippy: move &lt;code&gt;assertions_on_result_states&lt;/code&gt; to restriction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9252"&gt;clippy: read and use deprecated configuration (as well as emitting a warning)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8974"&gt;clippy: remove "blacklist" terminology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9223"&gt;clippy: &lt;code&gt;unwrap_used&lt;/code&gt;: don't recommend using &lt;code&gt;expect&lt;/code&gt; when the &lt;code&gt;expect_used&lt;/code&gt; lint is not allowed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12830"&gt;rust-analyzer: find original ast node before compute ref match&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12878"&gt;rust-analyzer: find standalone &lt;code&gt;proc-macro-srv&lt;/code&gt; on windows too&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12920"&gt;rust-analyzer: publish extension for 32-bit ARM systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12895"&gt;rust-analyzer: calculate completions after type anchors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12899"&gt;rust-analyzer: do completions in path qualifier position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12901"&gt;rust-analyzer: don't complete marker traits in expression position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12898"&gt;rust-analyzer: fix pattern completions adding unnecessary braces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12906"&gt;rust-analyzer: complete path of existing record expr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;!-- Perf results go here --&gt;

&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/98835"&gt;relate &lt;code&gt;closure_substs.parent_substs()&lt;/code&gt; to parent fn in NLL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/98655"&gt;Don't derive &lt;code&gt;PartialEq::ne&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/99606"&gt;Guarantees of content preservation on &lt;code&gt;try_reserve&lt;/code&gt; failure?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/99573"&gt;Partially stabilize std::backtrace from backtrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/92675"&gt;Tracking Issue for ptr_const_cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No New or Updated RFCs were created this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2022-08-03 - 2022-08-31 🦀&lt;/p&gt;
&lt;h3&gt;Virtual&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-08-03 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsydclbfb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-03 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/dvvtvsydclbfb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-05 | Virtual + Portland, OR, US | &lt;a href="https://rustconf.com/"&gt;RustConf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rustconf.com/"&gt;&lt;strong&gt;RustConf 2022&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-09 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/vndgwsydclbmb/"&gt;&lt;strong&gt;Second Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-09 | Virtual (Myrtle Point, OR, US) | &lt;a href="https://www.meetup.com/everyonecancontribute-cafe/"&gt;#EveryoneCanContribute Cafe&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/everyonecancontribute-cafe/events/286609523/"&gt;&lt;strong&gt;Summer Chill &amp;amp; Learn: including OpenTelemetry getting started with Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-10 | Virtual (Boulder, CO, US) | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/zvxcsrydclbnb/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-11 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/hlvbvsydclbpb/"&gt;&lt;strong&gt;Rust Nürnberg online&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-12 | Virtual + Tokyo, JP | &lt;a href="https://gallery.tonari.no/en/tonari-lab"&gt;tonari&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/w7bktx/2022_tokyo_and_elsewhere_rust_game_hack_event_aug/"&gt;&lt;strong&gt;Tokyo Rust Game Hack 2022 edition: The Bombercrab Challenge&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-13 | Virtual | &lt;a href="https://gamedev.rs/"&gt;Rust Gamedev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?q=https://discord.gg/yNtPTb2&amp;amp;sa=D&amp;amp;source=calendar&amp;amp;usd=2&amp;amp;usg=AOvVaw2Eop9Blil9YUWeTq472NIi"&gt;&lt;strong&gt;Rust Gamedev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-16 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/RustDC/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/vdhxgsydclbvb/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-17 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/Vancouver-Rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/nwcmpsydclbwb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-18 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/287203159/"&gt;&lt;strong&gt;Hierarchical Task Network compiler written in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-18 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/qtvtvsydclbxb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-24 | Virtual + Wellington, NZ | &lt;a href="https://www.meetup.com/rust-wellington/"&gt;Rust Wellington&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-wellington/events/287280642/"&gt;&lt;strong&gt;Flywheel Edition: 3 talks on Rust!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-30 | Virtual + Dallas, TX, US | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsydclbnc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Asia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-08-12 | Tokyo, JP + Virtual | &lt;a href="https://gallery.tonari.no/en/tonari-lab"&gt;tonari&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bombercrab-rust-game-hack.peatix.com/view"&gt;&lt;strong&gt;Tokyo Rust Game Hack 2022 edition: The Bombercrab Challenge&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-08-30 | Utrecht, NL | &lt;a href="https://www.meetup.com/rust-nederland/"&gt;Rust Nederland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/287302224/"&gt;&lt;strong&gt;Run Rust Anywhere&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-08-05 | Portland, OR, US + Virtual | &lt;a href="https://rustconf.com/"&gt;RustConf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rustconf.com/"&gt;&lt;strong&gt;RustConf 2022&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-06 | Portland, OR, US | &lt;a href="https://www.rust-lang.org/governance"&gt;Rust Project Teams&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.com/e/rustconf-postconf-unconf-registration-373057423797"&gt;&lt;strong&gt;RustConf 2022 PostConf Unconf&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://blog.rust-lang.org/2022/06/28/rust-unconference.html"&gt;&lt;strong&gt;Blog post&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-10 | Atlanta, GA, US | &lt;a href="https://www.meetup.com/rust-atl/"&gt;Rust Atlanta&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atl/events/pczdssydclbnb/"&gt;&lt;strong&gt;Grab a beer with fellow Rustaceans&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-11 | Columbus, OH, US| &lt;a href="https://www.meetup.com/columbus-rs/"&gt;Columbus Rust Society&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrydclbpb/"&gt;&lt;strong&gt;Monthly Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-16 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/wjkjssydclbvb/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-23 | Toronto, ON, CA | &lt;a href="https://www.meetup.com/rust-toronto/"&gt;Rust Toronto&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-toronto/events/287284601/"&gt;&lt;strong&gt;WebAssembly plugins in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-25 | Ciudad de México, MX | &lt;a href="https://www.meetup.com/rust-mx/"&gt;Rust MX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-mx/events/287561814/"&gt;&lt;strong&gt;Concurrencia &amp;amp; paralelismo con Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-25 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/kvrxqsydclbpb/"&gt;&lt;strong&gt;Hello World Cargo Crates Using Github Actions with jojobyte and Food!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Oceania&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-08-24 | Wellington, NZ + Virtual | &lt;a href="https://www.meetup.com/rust-wellington/"&gt;Rust Wellington&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-wellington/events/287280642/"&gt;&lt;strong&gt;Flywheel Edition: 3 talks on Rust!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-26 | Melbourne, VIC, AU | &lt;a href="https://www.meetup.com/rust-melbourne/"&gt;Rust Melbourne&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-melbourne/events/287468753/"&gt;&lt;strong&gt;August 2022 Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;h2&gt;Jobs&lt;/h2&gt;
&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/voglel/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;❤️🦀❤️&lt;/p&gt;
&lt;p&gt;100,000 issues filled with love, compassion and a wholesome community. Thank you, Rust community, for being one of the most, if not straight out the most, welcoming programming communities out there. Thank you, Rust teams, for the tireless hours you spend every day on every aspect of this project. Thank you to the Rust team alumni for the many hours spent growing a plant and the humility of passing it to people you trust to continue taking care of it. Thank you everyone for RFCs, giving voice to the community, being those voices AND listening to each other.&lt;/p&gt;
&lt;p&gt;This community has been and continue to be one of the best I have ever had the pleasure of being a part of. The language itself has many things to love and appreciate about it, from the humane error messages to giving the people the power to express high performance code without sacrificing readability for the ones to come after us. But nothing, truly nothing, takes the cake as much as the community that's building it, answering questions, helping and loving each other. Every single day.&lt;/p&gt;
&lt;p&gt;Congratulations everyone for 100,000 issues and PRs! And thank you for being you. Because Rust is Beautiful, for having you as part of it.&lt;/p&gt;
&lt;p&gt;To the times we spent together and the many more to come!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://github.com/rust-lang/rust/issues/100000"&gt;mathspy on the rust-lang/rust github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1275"&gt;Sean Chen&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/wfrxx2/this_week_in_rust_453/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 03 Aug 2022 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2022-08-03:/blog/2022/08/03/this-week-in-rust-454/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 453</title><link>https://this-week-in-rust.org/blog/2022/07/27/this-week-in-rust-453/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2022/07/27/keyword-generics.html"&gt;Announcing the Keyword Generics Initiative&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Foundation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/2022-07-27-what-has-the-foundation-been-up-to/"&gt;What has the Foundation been up to?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://deepfence.io/aya-your-trusty-ebpf-companion/"&gt;Aya: your tRusty eBPF companion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/news/this-week-in-fluvio-0039/"&gt;This week in Fluvio #39: The programmable streaming platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/news/this-week-in-fluvio-0040/"&gt;This week in Fluvio #40: The programmable streaming platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://relm4.org/blog/posts/announcing_relm4_v0.5_beta"&gt;Announcing Relm4 v0.5 beta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2022/07/25/changelog-139.html"&gt;rust-analyzer changelog #139&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2022/07/25/changelog-175.html"&gt;IntelliJ Rust Changelog #175&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fornjot.app/blog/weekly-release/2022-w30/"&gt;Fornjot (code-first CAD in Rust) - Weekly Release - 2022-W30&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slint-ui.com/thisweek/2022-07-25.html"&gt;Slint UI crate weekly updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://m8geil.de/posts/hexosynth-6/"&gt;HexoSynth 2022 - Devlog #6 - Workflow and Oscilloscope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://weekly.databend.rs/2022-07-27-databend-weekly/"&gt;This week in Databend #52: A Modern Cloud Data Warehouse for Everyone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://laurmaedje.github.io/posts/hypher/"&gt;How To Put 30 Languages Into 1.1MB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aaronerhardt.github.io/blog/posts/proc_macro_v2/"&gt;Does Rust need proc-macros 2.0?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/the-ferrocene-language-specification-is-here/"&gt;The Ferrocene Language Specification is here!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.polybdenum.com/2022/07/24/fixing-the-next-thousand-deadlocks-why-buffered-streams-are-broken-and-how-to-make-them-safer.html"&gt;Fixing the Next Thousand Deadlocks: Why Buffered Streams Are Broken and How To Make Them Safer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://agourlay.github.io/rust-performance-retrospective-part2/"&gt;A performance retrospective using Rust (part 2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bojanstipic.rs/blog/01-introduction-to-webassembly-and-rust/"&gt;Introduction to WebAssembly and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://owengage.com/writing/2022-07-22-a-look-at-serde-json/"&gt;A look at serde-json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://veetaha.github.io/impl-trait-parameters-and-turbofish.html"&gt;Impl Trait Parameters And Turbofish - Veetaha Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://console.substack.com/p/console-115"&gt;Console #115 - Interview with Jonathan of BonsaiDb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/tyler-mandry/"&gt;Asynchronous Rust with Tyler Mandry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/daniel-thompson/"&gt;Tauri with Daniel Thompson-Yvetot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lore.kernel.org/rust-for-linux/CAN6UTaywU8NfeNVi2ZDfwgjo3LCKiQRbD9PUWKsRp33Gxo+4gg@mail.gmail.com/"&gt;Writing Linux Kernel Modules in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/stm32f4-embedded-rust-at-the-hal-timer-ultrasonic-distance-measurement"&gt;STM32F4 Embedded Rust at the HAL: Timer Ultrasonic Distance Measurement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/antonov_mike/move-data-out-of-closure-4jck"&gt;Move data out of closure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/cargo-semver-checks"&gt;cargo-semver-checks&lt;/a&gt;, a CI-friendly tool to check your library's API.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1087"&gt;Predrag Gruevski&lt;/a&gt; and &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1088"&gt;Matthias Beyer&lt;/a&gt; for the (self and other) nominations.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3042"&gt;ockam - Make output node information and format consistent across &lt;code&gt;ockam node create | show | list&lt;/code&gt; commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pest-parser/pest/discussions/606"&gt;ockam - Combine &lt;code&gt;ockam identity print&lt;/code&gt; and &lt;code&gt;ockam identity export&lt;/code&gt; into one command &lt;code&gt;ockam identity show&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metalbear-co/mirrord/issues/200"&gt;mirrord - Add e2e tests for a bash script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metalbear-co/mirrord/issues/199"&gt;mirrord - Add e2e sanity tests for Rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;397 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-07-18..2022-07-25"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99320"&gt;rustc_expand: switch &lt;code&gt;FxHashMap&lt;/code&gt; to &lt;code&gt;FxIndexMap&lt;/code&gt; where iteration is used&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98189"&gt;proc_macro/bridge: stop using a remote object handle for proc_macro &lt;code&gt;Ident&lt;/code&gt; and &lt;code&gt;Literal&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98162"&gt;allow to disable thinLTO buffer to support lto-embed-bitcode lld feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93429"&gt;allow &lt;code&gt;trait A: ~const B&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99345"&gt;do not allow typeck children items to constrain outer RPITs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99449"&gt;do not resolve associated const when there is no provided value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99580"&gt;don't suggest unnameable generic arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99438"&gt;improve suggestions for &lt;code&gt;NonZeroT&lt;/code&gt; &amp;lt;- &lt;code&gt;T&lt;/code&gt; coercion error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99539"&gt;improve suggestions for returning binding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98028"&gt;add E0790 as more specific variant of E0283&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2381"&gt;miri: add a scheme for always using the default toolchain, running clippy and fmt before running any other command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2424"&gt;miri: add a flag to print a diagnostic when an outdated value is returned from an atomic load&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/97581"&gt;support vec zero-alloc optimization for tuples and byte arrays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99413"&gt;add &lt;code&gt;PhantomData&lt;/code&gt; marker for dropck to &lt;code&gt;BTreeMap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93397"&gt;add &lt;code&gt;\[f32\]::sort_floats&lt;/code&gt; and &lt;code&gt;\[f64\]::sort_floats&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/95040"&gt;protect &lt;code&gt;std::io::Take::limit&lt;/code&gt; from overflow in &lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99434"&gt;fix &lt;code&gt;Skip::next&lt;/code&gt; for non-fused inner iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99419"&gt;stabilize &lt;code&gt;core::task::ready!&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/reference/pull/1233"&gt;add &lt;code&gt;IntoFuture::into_future&lt;/code&gt; desugaring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2626"&gt;futures: inline &lt;code&gt;WakerRef&lt;/code&gt; functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2398"&gt;cargo-miri: support nextest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2402"&gt;cargo-miri: reorder &lt;code&gt;--target&lt;/code&gt; to after the user-defined commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10859"&gt;cargo: stabilize workspace Inheritance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/docs.rs/pull/1773"&gt;docs.rs: add canonical URL for rustdoc pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9130"&gt;clippy: add &lt;code&gt;arithmetic&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9225"&gt;clippy: add &lt;code&gt;assertions_on_result_states&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9214"&gt;clippy: check &lt;code&gt;assign_op_pattern&lt;/code&gt; for conflicting borrows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9207"&gt;clippy: check for &lt;code&gt;todo!&lt;/code&gt; on every expression in &lt;code&gt;SpanlessEq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9246"&gt;clippy: check macro statements in &lt;code&gt;non_copy_const&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9243"&gt;clippy: don't lint &lt;code&gt;std_instead_of_core&lt;/code&gt; on &lt;code&gt;std::env&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9241"&gt;clippy: fix ICE in &lt;code&gt;miri_to_const&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9244"&gt;clippy: fix ICE in &lt;code&gt;question_mark&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9237"&gt;clippy: fix &lt;code&gt;useless_format&lt;/code&gt; spans for &lt;code&gt;format!("{foo}")&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9210"&gt;clippy: fix suggestion causing error for &lt;code&gt;needless_borrow&lt;/code&gt; function in field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12800"&gt;rust-analyzer: find original as node before compute ref match&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12863"&gt;rust-analyzer: fix missing fields check on destructuring assignment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12861"&gt;rust-analyzer: fix: autocomplete for struct fields includes receiver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12851"&gt;rust-analyzer: fix: don't add braces to 'if' completion in match guard position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12850"&gt;rust-analyzer: fix error tooltip message for VSCode status bar item&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12847"&gt;rust-analyzer: fix restart server duplicating language clients&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12809"&gt;rust-analyzer: fix: work around Code bug with empty diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12832"&gt;rust-analyzer: don't replace default members' body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/pull/1341"&gt;rustc-perf: enable measuring stable compiler builds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;Overall it was a mostly good week, with some very significant wins among the
secondary benchmarks. Rollups continue to complicate triage process.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@pnkfelix&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=8bd12e8cca3f28f302b9cc0f1f47bb64bd1f98fd&amp;amp;end=50166d5e5e82ca795306824decbe4ffabcc23d3d&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;8bd12e8c..50166d5e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="center"&gt;mean&lt;/th&gt;
&lt;th align="center"&gt;max&lt;/th&gt;
&lt;th align="center"&gt;count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions 😿 &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions 😿 &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;2.2%&lt;/td&gt;
&lt;td align="center"&gt;3.2%&lt;/td&gt;
&lt;td align="center"&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements 🎉 &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;-1.8%&lt;/td&gt;
&lt;td align="center"&gt;-21.2%&lt;/td&gt;
&lt;td align="center"&gt;199&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements 🎉 &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-2.6%&lt;/td&gt;
&lt;td align="center"&gt;-9.0%&lt;/td&gt;
&lt;td align="center"&gt;124&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;All 😿🎉 (primary)&lt;/td&gt;
&lt;td align="center"&gt;-1.8%&lt;/td&gt;
&lt;td align="center"&gt;-21.2%&lt;/td&gt;
&lt;td align="center"&gt;199&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 Regressions, 4 Improvements, 4 Mixed; 4 of them in rollups
61 artifact comparisons made in total  &lt;/p&gt;
&lt;p&gt;Full report &lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-07-27.md"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3289"&gt;RFC: resolve crates.io source replacement ambiguity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/92675"&gt;Tracking Issue for ptr_const_cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3296"&gt;RFC: Improve C types for cross-language LLVM CFI support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3295"&gt;RFC: Postfix match&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2022-07-27 - 2022-08-24 🦀&lt;/p&gt;
&lt;h3&gt;Virtual&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-07-27 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/287121637/"&gt;&lt;strong&gt;Using Rust to read the Little Schemer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-28 | Virtual (Linz, AT) | &lt;a href="https://www.meetup.com/Rust-Linz/"&gt;Rust Linz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Linz/events/287238072/"&gt;&lt;strong&gt;Rust Meetup Linz - 24th Edition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-29 | Virtual (Minneapolis, MN, US) | &lt;a href="https://www.meetup.com/Minneapolis-Rust-Meetup/"&gt;Minneapolis Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Minneapolis-Rust-Meetup/events/286993342/"&gt;&lt;strong&gt;Beginner Rust Open "Office Hours"&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-31 | Virtual (Seattle, WA, US) | &lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/"&gt;Seattle Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/286692243/"&gt;&lt;strong&gt;Intro to Monads for Rustaceans&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-02 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;Berline.rs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://berline.rs/2022/08/02/rust-hack-and-learn.html"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-02 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/xgmfssydclbdb/"&gt;&lt;strong&gt;August Meetup: Using Rust on AWS Lambda&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-03 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsydclbfb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-03 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/dvvtvsydclbfb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-05 | Virtual + Portland, OR, US | &lt;a href="https://rustconf.com/"&gt;RustConf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rustconf.com/"&gt;&lt;strong&gt;RustConf 2022&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-09 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/vndgwsydclbmb/"&gt;&lt;strong&gt;Second Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-10 | Virtual (Boulder, CO, US) | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/zvxcsrydclbnb/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-11 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/hlvbvsydclbpb/"&gt;&lt;strong&gt;Rust Nürnberg online&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-12 | Virtual + Tokyo, JP | &lt;a href="https://gallery.tonari.no/en/tonari-lab"&gt;tonari&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/w7bktx/2022_tokyo_and_elsewhere_rust_game_hack_event_aug/"&gt;&lt;strong&gt;Tokyo Rust Game Hack 2022 edition: The Bombercrab Challenge&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-13 | Virtual | &lt;a href="https://gamedev.rs/"&gt;Rust Gamedev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?q=https://discord.gg/yNtPTb2&amp;amp;sa=D&amp;amp;source=calendar&amp;amp;usd=2&amp;amp;usg=AOvVaw2Eop9Blil9YUWeTq472NIi"&gt;&lt;strong&gt;Rust Gamedev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-16 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/RustDC/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/vdhxgsydclbvb/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-17 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/Vancouver-Rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/nwcmpsydclbwb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-18 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/287203159/"&gt;&lt;strong&gt;Hierarchical Task Network compiler written in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-18 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/qtvtvsydclbxb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-24 | Virtual + Wellington, NZ | &lt;a href="https://www.meetup.com/rust-wellington/"&gt;Rust Wellington&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-wellington/events/287280642/"&gt;&lt;strong&gt;Flywheel Edition: 3 talks on Rust!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Asia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-08-12 | Tokyo, JP + Virtual | &lt;a href="https://gallery.tonari.no/en/tonari-lab"&gt;tonari&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bombercrab-rust-game-hack.peatix.com/view"&gt;&lt;strong&gt;Tokyo Rust Game Hack 2022 edition: The Bombercrab Challenge&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-07-27 | Amsterdam, NL | &lt;a href="https://www.meetup.com/rust-amsterdam-group/"&gt;Rust Developers Amsterdam Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-amsterdam-group/events/287019877/"&gt;&lt;strong&gt;Rust Developers Amsterdam Group&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-28 | Copenhagen, DK | &lt;a href="https://cph.rs/"&gt;Copenhagen Rust Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/events/287057762/"&gt;&lt;strong&gt;Hack Night #27&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-28 | Oslo, NO | &lt;a href="https://www.meetup.com/Rust-Oslo/"&gt;Rust Oslo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-oslo/events/287422914/"&gt;&lt;strong&gt;Rust &amp;amp; Relax @ Brygg w/Jon Gjengset&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-02 | London, UK | &lt;a href="https://www.meetup.com/Rust-London-User-Group/"&gt;Rust London User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-london-user-group/events/287271789/"&gt;&lt;strong&gt;Rust London Code Dojo: Rust with Front-End Web Assembly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-07-27 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/287009519/"&gt;&lt;strong&gt;Rust Lunch&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-05 | Portland, OR, US + Virtual | &lt;a href="https://rustconf.com/"&gt;RustConf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rustconf.com/"&gt;&lt;strong&gt;RustConf 2022&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-06 | Portland, OR, US | &lt;a href="https://www.rust-lang.org/governance"&gt;Rust Project Teams&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.com/e/rustconf-postconf-unconf-registration-373057423797"&gt;&lt;strong&gt;RustConf 2022 PostConf Unconf&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://blog.rust-lang.org/2022/06/28/rust-unconference.html"&gt;&lt;strong&gt;Blog post&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-10 | Atlanta, GA, US | &lt;a href="https://www.meetup.com/rust-atl/"&gt;Rust Atlanta&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atl/events/pczdssydclbnb/"&gt;&lt;strong&gt;Grab a beer with fellow Rustaceans&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-11 | Columbus, IL | &lt;a href="https://www.meetup.com/columbus-rs/"&gt;Columbus Rust Society&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrydclbpb/"&gt;&lt;strong&gt;Monthly Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-16 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/wjkjssydclbvb/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-23 | Toronto, ON, CA | &lt;a href="https://www.meetup.com/rust-toronto/"&gt;Rust Toronto&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-toronto/events/287284601/"&gt;&lt;strong&gt;WebAssembly plugins in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Oceania&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-07-28 | Brisbane, QLD, AU | &lt;a href="https://www.meetup.com/rust-brisbane/"&gt;Rust Brisbane&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-brisbane/events/286889804/"&gt;&lt;strong&gt;July Meetup: Reflections on using Rust for Data Analysis (Libor Spacek)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-24 | Wellington, NZ + Virtual | &lt;a href="https://www.meetup.com/rust-wellington/"&gt;Rust Wellington&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-wellington/events/287280642/"&gt;&lt;strong&gt;Flywheel Edition: 3 talks on Rust!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;h2&gt;Jobs&lt;/h2&gt;
&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/voglel/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;h1&gt;JuSt Be CaReFuL&lt;/h1&gt;
&lt;p&gt;If there’s one lesson from decades of software engineering, it is the failure of “just be careful” as a strategy. C/C++ programmers still experience memory corruption constantly, no matter how careful they are. Java programmers still frequently see NullPointerExceptions, no matter how careful they are. And so on. One of the reasons that Rust is so successful is that it adds automated checks to prevent many common mistakes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://blog.polybdenum.com/2022/07/24/fixing-the-next-thousand-deadlocks-why-buffered-streams-are-broken-and-how-to-make-them-safer.html"&gt;Robert Grosse on their blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1274"&gt;robin&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/w9y6jp/this_week_in_rust_453/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 27 Jul 2022 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2022-07-27:/blog/2022/07/27/this-week-in-rust-453/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 452</title><link>https://this-week-in-rust.org/blog/2022/07/20/this-week-in-rust-452/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2022/07/19/Rust-1.62.1.html"&gt;Announcing Rust 1.62.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2022/07/18/changelog-138.html"&gt;rust-analyzer changelog #138&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustlings/releases/tag/5.0.0"&gt;Release Rustlings 5.0.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mabez.dev/blog/posts/esp-rust-15-07-2022/"&gt;Rust on Espressif chips - 15-07-2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fornjot.app/blog/weekly-release/2022-w29/"&gt;Fornjot (code-first CAD in Rust) - Weekly Release - 2022-W29&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://m8geil.de/posts/hexosynth-5/"&gt;HexoSynth 2022 - Devlog #5 - Signal Monitors and HexoTK Bugfixing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sea-ql.org/SeaORM/blog/2022-07-17-whats-new-in-0.9.0/"&gt;What's new in SeaORM 0.9.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slint-ui.com/thisweek/2022-07-18.html"&gt;Slint UI crate weekly updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://weekly.databend.rs/2022-07-20-databend-weekly/"&gt;This week in Databend #51: A Modern Cloud Data Warehouse for Everyone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nnethercote.github.io/2022/07/20/how-to-speed-up-the-rust-compiler-in-july-2022.html"&gt;How to speed up the Rust compiler in July 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://monadical.com/posts/wasm-chip8.html"&gt;How to setup a Wasm API for a CHIP-8 emulator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://conradludgate.com/posts/async-let"&gt;async let - A new concurrency primitve?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sergey.khabibullin.com/sqlite-extensions-in-rust/"&gt;Extending SQLite with Rust to support Excel files as virtual tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://studioterabyte.nl/en/blog/polars-vs-pandas"&gt;Pandas vs Polar - A look at performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dorianlistens.com/2022/07/improving-extract-function-in-rust-analyzer/"&gt;Improving “Extract Function” in Rust Analyzer  - Dorian Listens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raphlinus.github.io/rust/gui/2022/07/15/next-dozen-guis.html"&gt;Advice for the next dozen Rust GUIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/when-rustc-explodes"&gt;When rustc explodes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.blog/2022/07/14/how-rust-manages-memory-using-ownership-and-borrowing/"&gt;How Rust manages memory using ownership and borrowing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/integrating-rust-module-android-app/"&gt;Integrating a Rust module into an Android app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://haibane-tenshi.github.io/rust-contexts2/"&gt;Futuristic Rust: context emulation, part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://recursion.wtf/posts/rust_schemes/"&gt;Elegant and performant recursion in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://anshulchauhan.com/getting-started-seaorm"&gt;Getting Started with SeaORM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/antonov_mike/making-gtk-keyboard-on-rust-2fma"&gt;Making GTK keyboard on Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/stm32f4-embedded-rust-at-the-hal-pwm-buzzer"&gt;STM32F4 Embedded Rust at the HAL: PWM Buzzer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/meinung/Kommentar-Rust-im-Linux-Kernel-handeln-statt-jubeln-7179268.html"&gt;Kommentar: Rust im Linux-Kernel – handeln statt jubeln!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=Z3xPIYHKSoI"&gt;Stop writing Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-edu.org/workshop/"&gt;Rust Education Workshop 2022 Call For Participation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/bnum"&gt;bnum&lt;/a&gt;, a library of arbitrarily sized fixed-size numerals.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1079"&gt;Isaac Holt&lt;/a&gt; for the self-suggestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/CAD97_/status/1548743689698250755"&gt;@CAD97 is collecting examples of unwind-safety bugs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PyO3/pyo3/issues/2501"&gt;pyo3 - run_closure and drop_closure unsoundly drop payload on panic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Frommi/miniz_oxide/issues/118"&gt;miniz_oxide - println!() can cause panic outside catch_unwind()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tokio-rs/axum/issues/1175"&gt;axum - Add an example for a GET-or-HEAD handler that special-cases HEAD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/2987"&gt;ockam - ockam node delete should have an --all option&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/2996"&gt;ockam - Diagnose Cannot drop a runtime ... error in rust nodes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;416 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-07-11..2022-07-18"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88991"&gt;add Nintendo Switch as tier 3 target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98705"&gt;implement &lt;code&gt;for&amp;lt;&amp;gt;&lt;/code&gt; lifetime binder for closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98582"&gt;allow destructuring opaque types in their defining scopes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/97995"&gt;allow unions with mutable references and tuples of allowed types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/97720"&gt;always create elided lifetime parameters for functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99146"&gt;do not error during method probe on &lt;code&gt;Sized&lt;/code&gt; predicates for types that aren't the method receiver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/96482"&gt;add Output = expected type trait obligation for known binary operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98754"&gt;fix drop-tracking ICE when a struct containing a field with a significant drop is used across an await&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99263"&gt;fix ICE in &lt;code&gt;named_arguments_used_positionally&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99192"&gt;fix spans for asm diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98580"&gt;emit warning when named arguments are used positionally in format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99222"&gt;better error message for &lt;code&gt;generic_const_exprs&lt;/code&gt; inference failure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98574"&gt;lower let-else in MIR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2315"&gt;miri: optimizing Stacked Borrows (part 2): Shrink Item&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99062"&gt;use ICF (identical code folding) for building rustc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/96978"&gt;utilize PGO for windows x64 rustc dist builds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99232"&gt;&lt;code&gt;replace_bound_vars&lt;/code&gt; fast path: check predicates, don't check consts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99317"&gt;borrow &lt;code&gt;Vec&amp;lt;T, A&amp;gt;&lt;/code&gt; as &lt;code&gt;\[T\]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99046"&gt;final derive output improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98633"&gt;fix last &lt;code&gt;let_chains&lt;/code&gt; blocker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/94927"&gt;stabilize &lt;code&gt;let_chains&lt;/code&gt; in Rust 1.64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99277"&gt;stabilize &lt;code&gt;core::ffi::CStr&lt;/code&gt;, &lt;code&gt;alloc::ffi::CString&lt;/code&gt;, and friends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98315"&gt;stabilize &lt;code&gt;core::ffi:c_*&lt;/code&gt; and rexport in &lt;code&gt;std::ffi&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99306"&gt;stabilize &lt;code&gt;future_poll_fn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99088"&gt;document and stabilize &lt;code&gt;process_set_process_group&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99223"&gt;rearrange &lt;code&gt;slice::split_mut&lt;/code&gt; to remove bounds check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98072"&gt;add provider API to error trait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98387"&gt;add new unstable API &lt;code&gt;downcast&lt;/code&gt; to &lt;code&gt;std::io::Error&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99270"&gt;add &lt;code&gt;#[must_use]&lt;/code&gt; to &lt;code&gt;Box::from_raw&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/97915"&gt;implement &lt;code&gt;fmt::Write&lt;/code&gt; for &lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99011"&gt;&lt;code&gt;UnsafeCell&lt;/code&gt; blocks niches inside its nested type from being available outside&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/348"&gt;hashbrown: fix double-drop in &lt;code&gt;RawTable::clone_from&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10784"&gt;cargo: allow '.' in workspace.default-members in non-virtual workspaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10846"&gt;cargo: fix nested workspace resolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10668"&gt;cargo: normalize path for &lt;code&gt;cargo vendor&lt;/code&gt; output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10838"&gt;cargo: stabilize &lt;code&gt;--crate-type&lt;/code&gt; flag for &lt;code&gt;cargo rustc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10766"&gt;cargo: stabilize &lt;code&gt;-Zmultitarget&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99344"&gt;rustdoc: avoid inlining items with duplicate &lt;code&gt;(type, name)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt/pull/5446"&gt;rustfmt: fix/comments inside trait generics gets duplicated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt/pull/5449"&gt;rustfmt: remove useless conditional compilation - 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt/pull/5347"&gt;rustfmt: add &lt;code&gt;skip_macro_invocations&lt;/code&gt; option&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8703"&gt;clippy: add &lt;code&gt;repeated_where_clause_or_trait_bound&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9103"&gt;clippy: add &lt;code&gt;std_instead_of_core&lt;/code&gt;, &lt;code&gt;std_instead_of_alloc&lt;/code&gt;, &lt;code&gt;alloc_instead_of_core&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9148"&gt;clippy: add new lint &lt;code&gt;obfuscated_if_else&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9146"&gt;clippy: fix &lt;code&gt;mismatching_type_param_order&lt;/code&gt; false positive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9138"&gt;clippy: fix for &lt;code&gt;branches_sharing_code&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9134"&gt;clippy: improve &lt;code&gt;while_let_on_iterator&lt;/code&gt; suggestion inside an &lt;code&gt;FnOnce&lt;/code&gt; closure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9161"&gt;clippy: move &lt;code&gt;format_push_string&lt;/code&gt; to &lt;code&gt;restriction&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9170"&gt;clippy: &lt;code&gt;box_collection&lt;/code&gt;: raise warn for all std collections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9149"&gt;clippy: change applicability type to &lt;code&gt;MaybeIncorrect&lt;/code&gt; in &lt;code&gt;explicit_counter_loop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9199"&gt;clippy: &lt;code&gt;unused_self&lt;/code&gt;: respect &lt;code&gt;avoid-breaking-exported-api&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9178"&gt;clippy: &lt;code&gt;match_like_matches_macro&lt;/code&gt; does not trigger when one arm contains conta…&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12807"&gt;rust-analyzer: add simple support for completion item details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12696"&gt;rust-analyzer: add &lt;code&gt;str_ref_to_string&lt;/code&gt; fix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12539"&gt;rust-analyzer: automatically instaciate trivially instaciable structs in "Generate new" and "Fill struct fields"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12788"&gt;rust-analyzer: fix extract variable assist for subexpression in mutable borrow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12778"&gt;rust-analyzer: support negative, &lt;code&gt;char&lt;/code&gt; &amp;amp; &lt;code&gt;bool&lt;/code&gt; const generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12549"&gt;rust-analyzer: go to implementation of trait methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12735"&gt;rust-analyzer: &lt;code&gt;super::&lt;/code&gt; completion at crate root and module depth aware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12766"&gt;rust-analyzer: don't show qualified path completions for private items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12754"&gt;rust-analyzer: fix VSCode status bar tooltip not showing the error messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12765"&gt;rust-analyzer: fix imports being inserted before doc comments in inline modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12691"&gt;rust-analyzer: fix unresolved proc macro diagnostics pointing to macro expansions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12781"&gt;rust-analyzer: stack overflows and wrong type inference of associated type shorthands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12556"&gt;rust-analyzer: support generics in extract_function assist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup/pull/3034"&gt;rustup: revert "Set RUSTC and RUSTDOC env for child processes run through the proxy"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup/pull/3038"&gt;rustup: improved warning message for System-Rust-override&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup/pull/3012"&gt;rustup: correctly propagate subshell failures in rustup-init&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;A rather rough week for compiler performance with regressions outweighing improvements by a considerable margin, in particular in real world crates. To add insult to injury, the biggest regressions came in rollups which make it difficult to trace the cause.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=b3f4c3119957aa0a250cab08ab586b7a9a680ef1&amp;amp;end=8bd12e8cca3f28f302b9cc0f1f47bb64bd1f98fd&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;b3f4c311..8bd12e8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="center"&gt;mean&lt;/th&gt;
&lt;th align="center"&gt;max&lt;/th&gt;
&lt;th align="center"&gt;count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions 😿 &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;1.5%&lt;/td&gt;
&lt;td align="center"&gt;4.0%&lt;/td&gt;
&lt;td align="center"&gt;176&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions 😿 &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;1.8%&lt;/td&gt;
&lt;td align="center"&gt;6.4%&lt;/td&gt;
&lt;td align="center"&gt;147&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements 🎉 &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements 🎉 &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-1.6%&lt;/td&gt;
&lt;td align="center"&gt;-4.1%&lt;/td&gt;
&lt;td align="center"&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;All 😿🎉 (primary)&lt;/td&gt;
&lt;td align="center"&gt;1.5%&lt;/td&gt;
&lt;td align="center"&gt;4.0%&lt;/td&gt;
&lt;td align="center"&gt;176&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;7 Regressions, 5 Improvements, 3 Mixed; 4 of them in rollups
48 artifact comparisons made in total&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3262"&gt;Rolling co-lead roles for T-compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3289"&gt;RFC: resolve crates.io source replacement ambiguity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/98051"&gt;session: stabilize split debuginfo on linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/98017"&gt;do not mark interior mutable shared refs as dereferenceable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/issues/66080"&gt;Tracking issue for &lt;code&gt;#![register_attr]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No New or Updated RFCs were created this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2022-07-20 - 2022-08-17 🦀&lt;/p&gt;
&lt;h3&gt;Virtual&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-07-20 | Boulder, CO, US | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/zvxcsrydckbrb/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-20 | Cardiff, UK | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/287121101/"&gt;&lt;strong&gt;Rust Book Discussion - Building a Multithreaded Web Server&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-21 | Buenos Aires, AR | &lt;a href="https://www.meetup.com/es-ES/rust-argentina/"&gt;Rust Argentina&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://salesforce.zoom.us/webinar/register/WN_gaI8WBDSQFGnMgaqYAxPHA"&gt;&lt;strong&gt;WASM beyond the browser with Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-21 | Stuttgart, DE | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/qtvtvsydckbcc/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-26 | Dallas, TX, US | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/jqxqwrydckbjc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-27 | Cardiff, UK | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/287121637/"&gt;&lt;strong&gt;Using Rust to read the Little Schemer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-28 | Linz, AT | &lt;a href="https://www.meetup.com/Rust-Linz/"&gt;Rust Linz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Linz/events/287238072/"&gt;&lt;strong&gt;Rust Meetup Linz - 24th Edition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-29 | Minneapolis, MN, US | &lt;a href="https://www.meetup.com/Minneapolis-Rust-Meetup/"&gt;Minneapolis Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Minneapolis-Rust-Meetup/events/286993342/"&gt;&lt;strong&gt;Beginner Rust Open "Office Hours"&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-31 | Seattle, WA, US | &lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/"&gt;Seattle Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/286692243/"&gt;&lt;strong&gt;Intro to Monads for Rustaceans&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-02 | Berlin, DE | &lt;a href="https://berline.rs/"&gt;Berline.rs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://berline.rs/2022/08/02/rust-hack-and-learn.html"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-02 | Buffalo, NY, US | &lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/xgmfssydclbdb/"&gt;&lt;strong&gt;Buffalo Rust User Group, First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-03 | Indianapolis, IN, US | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsydclbfb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-03 | Stuttgart, DE | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/dvvtvsydclbfb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-05 | Portland, OR, US | &lt;a href="https://rustconf.com/"&gt;RustConf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rustconf.com/"&gt;&lt;strong&gt;RustConf 2022&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-10 | Atlanta, GA, US | &lt;a href="https://www.meetup.com/rust-atl/"&gt;Rust Atlanta&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atl/events/pczdssydclbnb/"&gt;&lt;strong&gt;Grab a beer with fellow Rustaceans&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-10 | Boulder, CO, US | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/zvxcsrydclbnb/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-11 | Nürnberg, DE | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/hlvbvsydclbpb/"&gt;&lt;strong&gt;Rust Nürnberg online&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-13 | Virtual | &lt;a href="https://gamedev.rs/"&gt;Rust Gamedev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?q=https://discord.gg/yNtPTb2&amp;amp;sa=D&amp;amp;source=calendar&amp;amp;usd=2&amp;amp;usg=AOvVaw2Eop9Blil9YUWeTq472NIi"&gt;&lt;strong&gt;Rust Gamedev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-16 | Washington, DC, US | &lt;a href="https://www.meetup.com/RustDC/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/vdhxgsydclbvb/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-17 | Vancouver, BC, CA | &lt;a href="https://www.meetup.com/Vancouver-Rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/nwcmpsydclbwb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-18 | Charlottesville, VA, US | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/287203159/"&gt;&lt;strong&gt;Hierarchical Task Network compiler written in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-07-20 | Warsaw, PL | &lt;a href="https://www.meetup.com/rust-warsaw/"&gt;Rust Warsaw&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-warsaw/events/287093615/"&gt;&lt;strong&gt;Rust Warsaw #5&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-21 | Oslo, NO | &lt;a href="https://www.meetup.com/Rust-Oslo/"&gt;Rust Oslo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Oslo/events/287184674/"&gt;&lt;strong&gt;Rust &amp;amp; Relax @ Kulturhuset&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-21 | Wrocław, PL | &lt;a href="https://www.meetup.com/rust-wroclaw/"&gt;Rust Wrocław&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-wroclaw/events/287023750/"&gt;&lt;strong&gt;Rust Wrocław Meetup #27&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-27 | Amsterdam, NL | &lt;a href="https://www.meetup.com/rust-amsterdam-group/"&gt;Rust Developers Amsterdam Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-amsterdam-group/events/287019877/"&gt;&lt;strong&gt;Rust Developers Amsterdam Group&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-28 | Copenhagen, DK | &lt;a href="https://cph.rs/"&gt;Copenhagen Rust Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/events/287057762/"&gt;&lt;strong&gt;Hack Night #27&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-02 | London, UK | &lt;a href="https://www.meetup.com/Rust-London-User-Group/"&gt;Rust London User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-london-user-group/events/287271789/"&gt;&lt;strong&gt;Rust London Code Dojo: Rust with Front-End Web Assembly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-07-26 | Austin, TX, US | &lt;a href="https://www.meetup.com/atx-rustaceans/"&gt;ATX Rustaceans&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/atx-rustaceans/events/285878081/"&gt;&lt;strong&gt;First Official Meetup - July 2022&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-07-27 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/287009519/"&gt;&lt;strong&gt;Rust Lunch&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-05 | Portland, OR, US | &lt;a href="https://rustconf.com/"&gt;RustConf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rustconf.com/"&gt;&lt;strong&gt;RustConf 2022&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-10 | Atlanta, GA, US | &lt;a href="https://www.meetup.com/rust-atl/"&gt;Rust Atlanta&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atl/events/pczdssydclbnb/"&gt;&lt;strong&gt;Grab a beer with fellow Rustaceans&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-11 | Columbus, IL | &lt;a href="https://www.meetup.com/columbus-rs/"&gt;Columbus Rust Society&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrydclbpb/"&gt;&lt;strong&gt;Monthly Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-08-16 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/wjkjssydclbvb/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Oceania&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-07-28 | Brisbane, QLD, AU | &lt;a href="https://www.meetup.com/rust-brisbane/"&gt;Rust Brisbane&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-brisbane/events/286889804/"&gt;&lt;strong&gt;July Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;!--

Rust Jobs:

TWiR has removed the jobs posting section. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;The long compile times where all responsibility is taken away from you is infinitely more effective than submission patterns in BDSM, where the graceful rustc takes over and all you have to do is wait until they tell you that you're a good person and that everything is alright!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://www.reddit.com/r/rust/comments/w0oyo5/comment/igfs4fw"&gt;/u/whyvitamins on /r/rust&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1268"&gt;Jacob Pratt&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="REDDIT_LINK_HERE"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 20 Jul 2022 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2022-07-20:/blog/2022/07/20/this-week-in-rust-452/</guid><category>This Week in Rust</category></item></channel></rss>