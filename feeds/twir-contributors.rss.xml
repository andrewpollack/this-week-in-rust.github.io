<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>This Week in Rust - TWiR Contributors</title><link>https://this-week-in-rust.org/</link><description></description><lastBuildDate>Wed, 25 Jan 2023 00:00:00 -0500</lastBuildDate><item><title>This Week in Rust 479</title><link>https://this-week-in-rust.org/blog/2023/01/25/this-week-in-rust-479/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on Twitter or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3 id="official"&gt;&lt;a class="toclink" href="#official"&gt;Official&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2023/01/20/types-announcement.html"&gt;Officially announcing the types team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2023/01/24/content-delivery-networks.html"&gt;Diversifying our Content Delivery Networks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="foundation"&gt;&lt;a class="toclink" href="#foundation"&gt;Foundation&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/lars-bergstrom-elected-as-rust-foundation-board-of-directors-chair/"&gt;Lars Bergstrom Elected as Rust Foundation Board of Directors Chair&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/join-the-rust-foundation-at-rust-nation-uk-2023/"&gt;Join the Rust Foundation at Rust Nation UK 2023&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2023/01/23/changelog-165.html"&gt;rust-analyzer changelog #165&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seanmonstar.com/post/706802392260362240/hyper-ish-2022-in-review"&gt;hyper-ish 2022 in review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.garrensmith.com/new-mobc-release-0-8-1/"&gt;Mobc 0.8.1 release with improved stability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenoh.io/blog/2023-01-10-zenoh-charmander/"&gt;Zenoh 0.7.0, a pure Rust Pub/Sub/Query protocol for cloud-to-thing continuum, was released and it is packed with new features.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fornjot.app/blog/weekly-release/2023-w04/"&gt;Fornjot (code-first CAD in Rust) - Weekly Release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slint-ui.com/blog/slint-0.3.4-released.html"&gt;Slint 0.3.4 release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ibraheem.ca/posts/announcing-astra/"&gt;Astra: A Blocking HTTP Server Built on Top of Hyper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codetrance.io/blog/1/rust-visual-programming-dataflow-ngenate-first-steps/"&gt;First steps with NGenate - A dataflow and visual programming platform built with rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://epage.github.io/blog/2023/01/toml-vs-toml-edit/"&gt;&lt;code&gt;toml&lt;/code&gt; vs &lt;code&gt;toml_edit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fyrox.rs/blog/post/twif11/"&gt;This Week in Fyrox #11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dimforge.com/blog/2023/01/22/the-year-2022-in-dimforge/"&gt;The year 2022 in Dimforge and our objectives for 2023&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://smallcultfollowing.com/babysteps/blog/2023/01/20/rust-in-2023-growing-up/"&gt;Rust in 2023: Growing up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/rust/2023/01/18/rust-deveco-2022-discover-recent-trends/"&gt;The State of Developer Ecosystem 2022 in Rust: Discover recent trends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swatinem.de/blog/future-size/"&gt;The size of Rust Futures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yoshuawuyts.com/capabilities-1/"&gt;Capability-Safety I: Prelude&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ecton.dev/rust-json-ecosystem/"&gt;Surprises in the Rust JSON Ecosystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://litchipi.github.io/infosec/2023/01/24/git-code-audit-viewed-as-rust-programmer.html"&gt;The Git source code audit, viewed as a Rust programmer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://predr.ag/blog/turning-rust-struct-to-enum-is-not-always-breaking/"&gt;Turning a Rust struct into an enum is not always a major breaking change&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itsfoss.com/rust-cli-tools/"&gt;14 Rust Tools for Linux Terminal Dwellers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/shuang-zhu/"&gt;Rust Magazine with Shuang Zhu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/ernest-kissiedu/"&gt;Rust Nation with Ernest Kissiedu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.vashishtha.in/temporary-lifetimes/"&gt;Temporary Values, Borrowing, and Lifetimes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kazlauskas.me/entries/due-to-borrowck-limitations"&gt;Due to limitations in the borrow checker, this implies a 'static lifetime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rauljordan.com/rust-concepts-i-wish-i-learned-earlier/"&gt;Rust concepts I wish I learned earlier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@adetaylor/comparative-fuzzing-parallel-rust-tools-fac5ce9c9c2d"&gt;Comparative fuzzing in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yoshuawuyts.com/ensure-macros/"&gt;domain-specific error macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://johns.codes/blog/build-a-db/part02"&gt;Building a Simple DB in Rust - Part 2 - Basic Execution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/rust-ffi-and-cbindgen-integrating-embedded-rust-code-in-c"&gt;Rust FFI and cbindgen: Integrating Embedded Rust Code in C&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;&lt;a class="toclink" href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.blog/changelog/2023-01-19-the-crate-io-registry-is-now-a-github-secret-scanning-integrator/"&gt;The crates.io registry is now a GitHub secret scanning integrator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wishawa.github.io/posts/fun-rust-operators/"&gt;Six fun things to do with Rust operator overloading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.orhun.dev/packaging-rust-for-npm/"&gt;Packaging Rust Applications for the NPM Registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codesandbox.io/blog/announcing-rust-support-in-codesandbox"&gt;Announcing Rust Support in CodeSandbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=ul9vyWuT8SU"&gt;10 Reasons Not To Use Rust (The Whole Truth)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=HwupNf9iCJk"&gt;Sneaking By The Rust Borrow Checker - Interior Mutability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/Rustixir/darkbird"&gt;Darkbird&lt;/a&gt;, a mnesia-inspired high concurrency, real time, in-memory storage library.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1149"&gt;DanyalMh&lt;/a&gt; for the self-suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;&lt;a class="toclink" href="#call-for-participation"&gt;Call for Participation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4129"&gt;Ockam - Implement 'ockam node logs' CLI command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4130"&gt;Ockam - Implement 'ockam worker list' CLI command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4108"&gt;Ockam - Add a CI check to avoid conflicts in 'TypeTag' ids&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;378 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-01-16..2023-01-23"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106113"&gt;llvm-wrapper: adapt for LLVM API change&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107127"&gt;enable sanitizers for s390x-linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106294"&gt;put &lt;code&gt;noundef&lt;/code&gt; on all scalars that don't allow uninit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106747"&gt;add 'static lifetime suggestion when GAT implied 'static requirement from HRTB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106928"&gt;add raw identifier for keyword in suggestion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105102"&gt;check ADT fields for copy implementations considering regions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101698"&gt;constify &lt;code&gt;TypeId&lt;/code&gt; ordering impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/104347"&gt;diagnostics: suggest changing &lt;code&gt;s@self::{macro}@::macro&lt;/code&gt; for exported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106873"&gt;dont randomly use &lt;code&gt;_&lt;/code&gt; to print out const generic arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106699"&gt;drop tracking Visit break expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106917"&gt;encode const mir for closures if they're const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107124"&gt;fix check macro expansion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106578"&gt;label closure captures/generator locals that make opaque types recursive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106976"&gt;lazy dominator tree construction in borrowck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106927"&gt;make &lt;code&gt;CastError::NeedsDeref&lt;/code&gt; create a &lt;code&gt;MachineApplicable&lt;/code&gt; suggestion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106712"&gt;make error emitted on &lt;code&gt;impl &amp;amp;Trait&lt;/code&gt; nicer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106975"&gt;refactor basic blocks control flow caches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106884"&gt;simplify &lt;code&gt;derive(Debug)&lt;/code&gt; output for fieldless enums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107203"&gt;suggest remove deref for type mismatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106591"&gt;suggestion for attempted integer identifier in patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106891"&gt;tweak "borrow closure argument" suggestion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/104672"&gt;unify stable and unstable sort implementations in same core module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106977"&gt;use UnordMap and UnordSet for id collections (DefIdMap, LocalDefIdMap, etc)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106810"&gt;various cleanups around pre-TyCtxt queries and functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106997"&gt;add heapsort fallback in &lt;code&gt;select_nth_unstable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106989"&gt;implement &lt;code&gt;alloc::vec::IsZero&lt;/code&gt; for &lt;code&gt;Option&amp;lt;$NUM&amp;gt;&lt;/code&gt; types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103702"&gt;lift &lt;code&gt;T: Sized&lt;/code&gt; bounds from some &lt;code&gt;strict_provenance&lt;/code&gt; pointer methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106854"&gt;add &lt;code&gt;Arc::into_inner&lt;/code&gt; for safely discarding &lt;code&gt;Arc&lt;/code&gt;s without calling the destructor on the inner type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/389"&gt;hashbrown: provide default hasher types to &lt;code&gt;Vacant&lt;/code&gt; and &lt;code&gt;Occupied&lt;/code&gt; entries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2691"&gt;futures: add &lt;code&gt;Either::as_pin_mut&lt;/code&gt; and &lt;code&gt;Either::as_pin_ref&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2693"&gt;futures: implement &lt;code&gt;FusedStream&lt;/code&gt; for all streams in &lt;code&gt;ReadyChunks&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/llvm-project/pull/144"&gt;(cherry-pick) WebAssembly multivalue stackify fix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11224"&gt;cargo: stabilize sparse-registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11545"&gt;cargo: wrapper type for data that should never be logged&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt/pull/5669"&gt;rustfmt: correct span for structs with const generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10206"&gt;clippy: add &lt;code&gt;multiple_unsafe_ops_per_block&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10218"&gt;clippy: add machine applicable suggestion for &lt;code&gt;bool_assert_comparison&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10106"&gt;clippy: fix false positive in &lt;code&gt;unnecessary_safety_comment&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10193"&gt;clippy: fix suggestion in &lt;code&gt;transmutes_expressible_as_ptr_casts&lt;/code&gt; when the source type is a borrow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14004"&gt;rust-analyzer: don't escape non-snippets in assist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13985"&gt;rust-analyzer: don't respond with a ContentModified while loading the workspace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13980"&gt;rust-analyzer: fix checkOnSave to check config patching not always working&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13988"&gt;rust-analyzer: fix markdown removal in hover handling whitespace weirdly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13978"&gt;rust-analyzer: handle slice patterns in "Fill match arms"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13971"&gt;rust-analyzer: more precise binop inference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13993"&gt;rust-analyzer: substitute vscode variables in &lt;code&gt;config.serverPath&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13983"&gt;rust-analyzer: parse &lt;code&gt;const_closures&lt;/code&gt; syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14001"&gt;rust-analyzer: replace SmolStr usage with lang item enum for lang items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13969"&gt;rust-analyzer: use workspace.dependencies to declare local dependencies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Largely a win for compiler performance with 100 test cases in real-world crates showing some sort of change in performance with an average 1% improvement. These wins were a combination of many different changes including how &lt;code&gt;doc(hidden)&lt;/code&gt; gets more efficiently encoded in metadata, some optimizations in the borrow checker, and simplification of the output from &lt;code&gt;derive(Debug)&lt;/code&gt; for fieldless enums.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=1f72129ffe5e8c495113f9a2d4e1730f7fad3209&amp;amp;end=c8e6a9e8b6251bbc8276cb78cabe1998deecbed7&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;1f72129f..c8e6a9e8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;(instructions:u)&lt;/th&gt;
&lt;th align="center"&gt;mean&lt;/th&gt;
&lt;th align="center"&gt;range&lt;/th&gt;
&lt;th align="center"&gt;count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;0.4%&lt;/td&gt;
&lt;td align="center"&gt;[0.2%, 0.7%]&lt;/td&gt;
&lt;td align="center"&gt;19&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;0.9%&lt;/td&gt;
&lt;td align="center"&gt;[0.2%, 1.5%]&lt;/td&gt;
&lt;td align="center"&gt;34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;-1.3%&lt;/td&gt;
&lt;td align="center"&gt;[-17.2%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;81&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-2.1%&lt;/td&gt;
&lt;td align="center"&gt;[-7.1%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;All ❌✅ (primary)&lt;/td&gt;
&lt;td align="center"&gt;-1.0%&lt;/td&gt;
&lt;td align="center"&gt;[-17.2%, 0.7%]&lt;/td&gt;
&lt;td align="center"&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;2 Regressions, 5 Improvements, 3 Mixed; 1 of them in rollups
34 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-01-24.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/107082"&gt;Autotrait bounds on dyn-safe trait methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/pull/102697"&gt;Stabilize &lt;code&gt;ControlFlow::{BREAK, CONTINUE}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/106938"&gt;Add missing normalization for union fields types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/102842"&gt;rustdoc: change trait bound formatting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3374"&gt;Cargo target features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3373"&gt;Avoid non-local definitions in functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="call-for-testing"&gt;&lt;a class="toclink" href="#call-for-testing"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2023-01-25 - 2023-02-22 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-25 | Virtual (Redmond, WA, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224544/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224540/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/290122935/"&gt;&lt;strong&gt;Rust Lightning Talks!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Virtual (Karlsruhe, DE) | &lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/"&gt;The Karlsruhe Functional Programmers Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/events/290406675/"&gt;&lt;strong&gt;Stammtisch (gemeinsam mit der C++ UG KA)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Virtual (Redmond, WA, US; San Francisco, CA, US; New York, NY, US; Stockholm, SE) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/"&gt;Microsoft Reactor Stockholm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290086420/"&gt;&lt;strong&gt;Crack code interview problems in Rust - Ep. 3&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290086421/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290086422/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/events/290086418/"&gt;&lt;strong&gt;Stockholm Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-27 | Virtual (Tunis, TN) | &lt;a href="https://www.meetup.com/rust-tunisia/"&gt;Rust Meetup Tunisia&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-tunisia/events/291103663/"&gt;&lt;strong&gt;Rust Meetup Tunisia - Volume I, Number I&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-30 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224559/"&gt;&lt;strong&gt;Primeros pasos con Rust - Control de errores en Rust&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224558/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224561/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-31 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/290697014/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-31 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsyfccbpc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-31 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224861/"&gt;&lt;strong&gt;Primeros pasos con Rust - Compresión de cómo Rust administra la memoria&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224860/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224859/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/291184911/"&gt;&lt;strong&gt;New Year Virtual Social + Share&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsyfcdbcb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224570/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224566/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224570/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224568/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcdbcb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-06 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224572/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224576/"&gt;&lt;strong&gt;Primeros pasos con Rust - Implementación de tipos y rasgos genéricos&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224572/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224573/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-07 | Virtual (Beijing, CN) | &lt;a href="https://www.meetup.com/wasm-rust-meetup/"&gt;WebAssembly and Rust Meetup (Rustlang)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/wasm-rust-meetup/events/290609896/"&gt;&lt;strong&gt;Monthly WasmEdge Community Meeting, a CNCF sandbox WebAssembly runtime&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-07 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/lsjbbtyfcdbkb/"&gt;&lt;strong&gt;Buffalo Rust User Group, First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-07 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224578/"&gt;&lt;strong&gt;Primeros pasos con Rust - Módulos, paquetes y contenedores de terceros&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224577/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224579/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-08 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Rector New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224584/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224583/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224585/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-11 | Virtual | &lt;a href="https://discord.gg/yNtPTb2"&gt;Rust GameDev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/yNtPTb2"&gt;&lt;strong&gt;Rust GameDev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-13 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Rector New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224610/"&gt;&lt;strong&gt;Primeros pasos con Rust - Escritura de pruebas automatizadas&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224608/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224609/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-14 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/zdrzpsyfcdbsb/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-14 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Rector New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224616/"&gt;&lt;strong&gt;Primeros pasos con Rust - Creamos un programa de ToDos en la línea de comandos&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224613/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224617/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-14 | Virtual (Saarbrücken, DE) | &lt;a href="https://www.meetup.com/rust-saar/"&gt;Rust-Saar&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-saar/events/290040138/"&gt;&lt;strong&gt;Meetup: 26u16&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-15 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US; São Paulo, BR) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Rector New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo"&gt;Microsoft Reactor São Paulo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224624/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224624/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224621/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/events/290224623/"&gt;&lt;strong&gt;São Paulo Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-15 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/tqvhxsyfcdbtb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;&lt;a class="toclink" href="#asia"&gt;Asia&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-01 | Kyoto, JP | &lt;a href="https://www.meetup.com/kansai-rust"&gt;Kansai Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/kansai-rust/events/291020672"&gt;&lt;strong&gt;Rust talk: How to implement Iterator on tuples... kind of&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-25 | Paris, FR | &lt;a href="https://www.meetup.com/rust-paris/"&gt;Rust Paris&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-paris/events/290100223/"&gt;&lt;strong&gt;Rust Paris meetup #55&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Copenhagen, DK | &lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/"&gt;Copenhagen Rust Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/events/290037532/"&gt;&lt;strong&gt;Rust Hack Night #32&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-02 | Berlin, DE | &lt;a href="https://www.meetup.com/prenzlauer-berg-software-engineers/"&gt;Prenzlauer Berg Software Engineers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/prenzlauer-berg-software-engineers/events/290513923/"&gt;&lt;strong&gt;PBerg engineers - inaugural meetup; Lukas: Serverless APIs using Rust and Azure functions (Fee)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-02 | Hamburg, DE | &lt;a href="https://www.meetup.com/rust-meetup-hamburg/"&gt;Rust Meetup Hamburg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-meetup-hamburg/events/290824576/"&gt;&lt;strong&gt;Rust Hack &amp;amp; Learn February 2023&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-02 | Lyon, FR | &lt;a href="https://mobilizon.fr/events/b8577678-d072-4d9a-9562-974715f1dfbb"&gt;Rust Lyon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mobilizon.fr/events/b8577678-d072-4d9a-9562-974715f1dfbb"&gt;&lt;strong&gt;Rust Lyon meetup #01&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-04 | Brussels, BE | &lt;a href="https://fosdem.org/"&gt;FOSDEM&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fosdem.org/2023/schedule/track/rust/"&gt;&lt;strong&gt;FOSDEM 2023 Conference: Rust devroom&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-21 | Zurich, CH | &lt;a href="https://www.meetup.com/rust-zurich/"&gt;Rust Zurich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/rust-zurich/events/290915075/"&gt;&lt;strong&gt;Practical Cryptography - February Meetup (Registration opens 7 Feb 2023)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-26 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/dsbpxsyfccbjc/"&gt;&lt;strong&gt;Building a Rust Playground with WASM and Lane and Food!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/zpd1qo/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust has demonstrated that you using a type system as a vehicle for separation logic works, even in imperative languages, and it's nothing as arcane as those immutable functional predecessors would suggest. It did this by making sure the language defines a type system that helps you, by making sure core properties of soundness &lt;em&gt;can&lt;/em&gt; be expressed in it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;soundness requirement for memory access: lifetimes&lt;/li&gt;
&lt;li&gt;soundness requirements for references &lt;em&gt;with&lt;/em&gt; value semantics: &amp;gt; &lt;code&gt;&amp;amp;&lt;/code&gt;/&lt;code&gt;&amp;amp;mut _&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;soundness requirements for resources: &lt;code&gt;Copy&lt;/code&gt; and &lt;code&gt;Drop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;making sure your logic is monotic: traits instead of inheritance, lack of specialization (yes, that's a &lt;em&gt;feature&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;(notably missing: no dependent types; apparently not 'necessary' but I'm sure it could be useful; however, research is heavily ongoing; caution is good)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This allows the standard library to encode all of its relevant requirements as types. And doing this everywhere is its soundness property: safe functions have no requirements beyond the sum of its parameter type, &lt;code&gt;unsafe functions&lt;/code&gt; can. Nothing new or special there, nothing that makes Rust's notion of soundness special.&lt;/p&gt;
&lt;p&gt;Basing your mathematical reasoning on separation logic makes soundness reviews &lt;em&gt;local&lt;/em&gt; instead of requiring whole program analysis. This is what makes it practical. It did this pretty successfully and principled, but did no single truly revolutionary thing. It's a sum of good bits from the last decade of type system research. That's probably why people refer to it as 'the soundness definition', it's just a very poignant way to say: "we learned that a practical type systems works as a proof checker".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://www.reddit.com/r/cpp/comments/10d4qny/a_call_to_action_think_seriously_about_safety/j4ks225/"&gt;HeroicKatora on /r/cpp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1365"&gt;Stephan Sokolow&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/10ledzv/this_week_in_rust_479/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 25 Jan 2023 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2023-01-25:/blog/2023/01/25/this-week-in-rust-479/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 478</title><link>https://this-week-in-rust.org/blog/2023/01/18/this-week-in-rust-478/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on Twitter or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2023/01/16/changelog-186.html"&gt;IntelliJ Rust Changelog #186&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2023/01/16/changelog-164.html"&gt;rust-analyzer changelog #164&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fyrox.rs/blog/post/twif10/"&gt;This Week in Fyrox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://epage.github.io/blog/2023/01/clap-v4-1/"&gt;clap v4.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fornjot.app/blog/weekly-release/2023-w03/"&gt;Fornjot (code-first CAD in Rust) - Weekly Release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://argmin-rs.org/blog/sphrs-v0-2-0/"&gt;Release of sphrs 0.2.0, a spherical harmonics library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://thoughtbot.com/blog/axum-from-a-rails-perspective"&gt;Rails developers write some Rust: a review of Axum 0.6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yoshuawuyts.com/rust-should-own-its-debugger-experience/"&gt;Rust should own its debugger experience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://greptime.com/blogs/2023-01-12-hidden-control-flow"&gt;The Hidden Control Flow — Some Insights on an Async Cancellation Problem in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datavirke.dk/posts/fallible-missing-rust-error-handling/"&gt;Fallible - The Lost Sibling of Result and Option&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nnmm.github.io/rust/2023/01/11/folding-arguments-into-the-macro.html"&gt;Folding arguments into the macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rusty-ferris.pages.dev/blog/zero-to-production-book-review/"&gt;Zero To Production book review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blaz.is/blog/post/we-dont-need-a-stable-abi/"&gt;We Need Type Information, Not Stable ABI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bwysocki/rocket-nest-spring/"&gt;Comparison of web frameworks written in Java, nodejs and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://duarteocarmo.com/blog/on-rust"&gt;This year I tried solving AoC using Rust, here are my impressions coming from Python!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://workers.wasmlabs.dev/docs/tutorials/rust-workers/"&gt;Create a Rust worker | Wasm Workers Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lilymara.xyz/posts/images-esp32/"&gt;Displaying Images on ESP32 with Rust!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/rust-ffi-and-bindgen-integrating-embedded-c-code-in-rust"&gt;Rust FFI and bindgen: Integrating Embedded C Code in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.youmu.moe/posts/finding-nice-md5s-using-rust/"&gt;Finding Nice MD5s Using Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://radim.xyz/project/rusty_woods/"&gt;2D game base with Bevy and LDtk (linked wasm)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gigapotential.dev/blog/song-search-in-rust-using-openai/"&gt;Song search in Rust using OpenAI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.superperfundo.tech/articles/ray-tracer-part1"&gt;Build a ray tracer, pt. 1 - 2D Image&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;&lt;a class="toclink" href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rnstlr.ch/building-an-out-of-tree-rust-kernel-module-part-two.html"&gt;Building an out-of-tree Rust Kernel Module Part Two&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.confessionsofadataguy.com/using-rust-to-write-a-data-pipeline-thoughts-musings/"&gt;Using Rust to write a Data Pipeline. Thoughts. Musings.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=VMpSYJ_7aYM"&gt;C++ vs Rust: which is faster?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtube.com/watch?v=_jDKeOtOiEo"&gt;Everything You Wanted to Know About Rust Unit Testing (and then some more)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=feBYxeO-3cY"&gt;Introduction to rust operators for Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/news/Rust-Framework-Turmoil-testet-verteilte-Systeme-7449772.html"&gt;Rust-Framework: Turmoil testet verteilte Systeme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/news/Rust-bis-zu-2500-Projekte-durch-Bibliothek-Hyper-fuer-DoS-verwundbar-7451019.html"&gt;Rust: bis zu 2500 Projekte durch Bibliothek Hyper für DoS verwundbar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/hintergrund/Ferris-Talk-13-Rust-Web-APIs-und-Mocking-mit-Axum-7457143.html"&gt;Ferris Talk #13: Rust-Web-APIs und Mocking mit Axum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/news/Open-Source-Browser-Google-oeffnet-Chromium-fuer-Rust-7458091.html"&gt;Open-Source-Browser: Google öffnet Chromium für Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/syntactic-for"&gt;syntactic-for&lt;/a&gt;, a syntactic "for" loop Rust macro.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1148"&gt;Tor Hovland&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;&lt;a class="toclink" href="#call-for-participation"&gt;Call for Participation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3997"&gt;Ockam - GitHub CI: use global default shell in documentation.yml workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4080"&gt;Ockam - Modify clap command ockam start to set the node attribute's default value using attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3907"&gt;Ockam - Add optional --identity argument to clap command secure-channel-listener create and modify its API handler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;458 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-01-09..2023-01-16"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106645"&gt;Initial &lt;code&gt;#[do_not_recommend]&lt;/code&gt; implementation&lt;/a&gt; (RFC &lt;a href="https://rust-lang.github.io/rfcs/2397-do-not-recommend.html"&gt;#2397&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106446"&gt;LSDA Take &lt;code&gt;ttype_index&lt;/code&gt; into account when taking unwind action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106092"&gt;add checks for the signature of the &lt;code&gt;start&lt;/code&gt; lang item&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/104645"&gt;add log-backtrace option to show backtraces along with logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106665"&gt;add note when &lt;code&gt;FnPtr&lt;/code&gt; vs. &lt;code&gt;FnDef&lt;/code&gt; impl trait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106740"&gt;adding a hint on iterator type errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106532"&gt;allow codegen to unsize &lt;code&gt;dyn*&lt;/code&gt; to &lt;code&gt;dyn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106671"&gt;change flags with a fixed default value from &lt;code&gt;Option&amp;lt;bool&amp;gt;&lt;/code&gt; to bool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106397"&gt;check &lt;code&gt;impl&lt;/code&gt;'s &lt;code&gt;where&lt;/code&gt; clauses in &lt;code&gt;consider_impl_candidate&lt;/code&gt; in experimental solver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106321"&gt;collect and emit proper backtraces for &lt;code&gt;delay_span_bug&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106607"&gt;consider return type when giving various method suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106004"&gt;const closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106820"&gt;deprioritize fulfillment errors that come from expansions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106622"&gt;detect out of bounds range pattern value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106620"&gt;detect struct literal needing parentheses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106709"&gt;disable "split dwarf inlining" by default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106752"&gt;emit a hint for bad call return types due to generic arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106566"&gt;emit a single error for contiguous sequences of unknown tokens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106872"&gt;emit only one nbsp error per file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105708"&gt;enable atomic cas for bpf targets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106778"&gt;exclude formatting commit from blame&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106776"&gt;feed a bunch of queries instead of tracking fields on TyCtxt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106791"&gt;fix ICE formatting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106646"&gt;fix &lt;code&gt;aarch64-unknown-linux-gnu_ilp32&lt;/code&gt; target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106563"&gt;fix &lt;code&gt;unused_braces&lt;/code&gt; on generic const expr macro call&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106175"&gt;fix bad import suggestion with nested &lt;code&gt;use&lt;/code&gt; tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106653"&gt;fix help docs for -Zallow-features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106689"&gt;fix invalid files array re-creation in rustdoc-gui tester&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106167"&gt;fix invalid syntax and incomplete suggestion in impl Trait parameter type suggestions for E0311&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106489"&gt;fix linker detection for linker (drivers) with a version postfix (e.g. clang-12 instead of clang)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106072"&gt;fix misleading "add dyn keyword before derive macro" suggestion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106427"&gt;improve fluent error messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106524"&gt;label &lt;code&gt;struct/enum constructor&lt;/code&gt; instead of &lt;code&gt;fn item&lt;/code&gt;, mention that it should be called on type mismatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106675"&gt;mark ZST as FFI-safe if all its fields are PhantomData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106170"&gt;move autoderef to &lt;code&gt;rustc_hir_analysis&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106835"&gt;new trait solver: rebase impl substs for gats correctly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106687"&gt;cargo: nightly Fix CVE-2022-46176: Missing SSH host key validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106703"&gt;note predicate span on &lt;code&gt;ImplDerivedObligation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106909"&gt;only suggest adding type param if path being resolved was a type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106309"&gt;prefer non-&lt;code&gt;[type error]&lt;/code&gt; candidates during selection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106641"&gt;provide help on closures capturing self causing borrow checker errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106537"&gt;recover from where clauses placed before tuple struct bodies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106664"&gt;remove unnecessary lseek syscall when using &lt;code&gt;std::fs::read&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106608"&gt;render missing generics suggestion verbosely&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106705"&gt;report fulfillment errors in new trait solver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106662"&gt;specialize impl of &lt;code&gt;ToString&lt;/code&gt; on &lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103800"&gt;stabilize &lt;code&gt;::{core,std}::pin::pin!&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105795"&gt;stabilize &lt;code&gt;abi_efiapi&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106323"&gt;stabilize &lt;code&gt;f16c_target_feature&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106661"&gt;stop probing for statx unless necessary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106896"&gt;suggest &lt;code&gt;is_empty&lt;/code&gt; for collections when casting to &lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106579"&gt;suggest making private tuple struct field public&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106859"&gt;suggestion for type mismatch when we need a u8 but the programmer wrote a char literal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106360"&gt;tweak E0277 &lt;code&gt;&amp;amp;&lt;/code&gt;-removal suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106788"&gt;tweak E0599 and &lt;code&gt;elaborate_predicates&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105806"&gt;support eager subdiagnostics again&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105526"&gt;libcore: make result of &lt;code&gt;iter::from_generator&lt;/code&gt; &lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106762"&gt;add &lt;code&gt;AtomicPtr::as_mut_ptr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105851"&gt;leak amplification for &lt;code&gt;peek_mut()&lt;/code&gt; to ensure BinaryHeap's invariant is always met&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106701"&gt;fix &lt;code&gt;mpsc::SyncSender&lt;/code&gt; spinning behavior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2686"&gt;futures: fix panic when &lt;code&gt;Unfold&lt;/code&gt; sink return an error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2664"&gt;futures: fix &lt;code&gt;FuturesOrdered&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11550"&gt;cargo: &lt;code&gt;cargo metadata&lt;/code&gt; supports artifact dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11562"&gt;cargo: support &lt;code&gt;codegen-backend&lt;/code&gt; and &lt;code&gt;rustflags&lt;/code&gt; in profiles in config file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10038"&gt;clippy: &lt;code&gt;cast_possible_truncation&lt;/code&gt; Suggest &lt;code&gt;TryFrom&lt;/code&gt; when truncation possible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10189"&gt;clippy: &lt;code&gt;expl_impl_clone_on_copy&lt;/code&gt;: ignore packed structs with type/const params&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10187"&gt;clippy: &lt;code&gt;needless_return&lt;/code&gt;: remove all semicolons on suggestion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10166"&gt;clippy: &lt;code&gt;unused_self&lt;/code&gt;: don't trigger if the method body contains &lt;code&gt;todo!()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10184"&gt;clippy: allow implementing &lt;code&gt;Hash&lt;/code&gt; with derived &lt;code&gt;PartialEq&lt;/code&gt; (&lt;code&gt;derive_hash_xor_eq&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10194"&gt;clippy: move &lt;code&gt;unchecked_duration_subtraction&lt;/code&gt; to pedantic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13947"&gt;rust-analyzer: add basic tooltips to adjustment hints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13935"&gt;rust-analyzer: assist: desugar doc-comment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13862"&gt;rust-analyzer: comment out disabled code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13919"&gt;rust-analyzer: derive 'Hash'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13934"&gt;rust-analyzer: make &lt;code&gt;unlinked_file&lt;/code&gt; diagnostic quickfixes work for inline modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13940"&gt;rust-analyzer: fix panicking Option unwraping in match arm analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13897"&gt;rust-analyzer: fix ty should query impls in nearest block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13945"&gt;rust-analyzer: check orpat in missing match&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13961"&gt;rust-analyzer: don't generate &lt;code&gt;PartialEq&lt;/code&gt;/&lt;code&gt;PartialOrd&lt;/code&gt; methods body when types don't match&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13948"&gt;rust-analyzer: make inlay hint location links work for more types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13936"&gt;rust-analyzer: interior-mutable types should be &lt;code&gt;static&lt;/code&gt; rather than &lt;code&gt;const&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13946"&gt;rust-analyzer: remove hover inlay tooltips, replace them with location links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13937"&gt;rust-analyzer: remove recursive &lt;code&gt;Display&lt;/code&gt; implementations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13917"&gt;rust-analyzer: split out hir-def attribute handling parts into hir-expand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13963"&gt;rust-analyzer: unconditionally enable location links in inlay hints again&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nearly all flagged regressions are likely noise, except one rollup with minor
impact on diesel that we will follow up on. We had a broad (albeit small) win
from &lt;a href="https://github.com/rust-lang/rust/pull/106294"&gt;#106294&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@pnkfelix&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=0442fbabe24ec43636a80ad1f40a0ad92a2e38df&amp;amp;end=1f72129ffe5e8c495113f9a2d4e1730f7fad3209&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;0442fbab..1f72129f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;(instructions:u)&lt;/th&gt;
&lt;th align="center"&gt;mean&lt;/th&gt;
&lt;th align="center"&gt;range&lt;/th&gt;
&lt;th align="center"&gt;count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;0.4%&lt;/td&gt;
&lt;td align="center"&gt;[0.2%, 1.7%]&lt;/td&gt;
&lt;td align="center"&gt;39&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;0.5%&lt;/td&gt;
&lt;td align="center"&gt;[0.2%, 1.8%]&lt;/td&gt;
&lt;td align="center"&gt;23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;-0.4%&lt;/td&gt;
&lt;td align="center"&gt;[-0.6%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-0.4%&lt;/td&gt;
&lt;td align="center"&gt;[-0.6%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;All ❌✅ (primary)&lt;/td&gt;
&lt;td align="center"&gt;0.3%&lt;/td&gt;
&lt;td align="center"&gt;[-0.6%, 1.7%]&lt;/td&gt;
&lt;td align="center"&gt;46&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;4 Regressions, 3 Improvements, 3 Mixed; 4 of them in rollups
50 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-01-18.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/pull/105548"&gt;use implied bounds from impl header when comparing trait and impl methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/102842"&gt;rustdoc: change trait bound formatting"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/106425"&gt;Make ExitStatus implement Default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/106823"&gt;Allow fmt::Arguments::as_str() to return more Some(_).&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3371"&gt;RFC: &lt;code&gt;CARGO_TARGET_DIRECTORIES&lt;/code&gt;, parent of all target directories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3370"&gt;RFC: (Re)standardise error code documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="call-for-testing"&gt;&lt;a class="toclink" href="#call-for-testing"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2023-01-18 - 2023-02-15 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-18 | Virtual (San Francisco, CA, US; São Paulo, BR; New York, NY US) | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/"&gt;Microsoft Reactor São Paulo&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224518/"&gt;Microsoft Reactor New York&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224523/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224525/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224523/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/events/290224522/"&gt;&lt;strong&gt;Sao Paulo Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-18 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/tqvhxsyfccbxb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-19 | Virtual (Redmond, WA, US; San Francisco, CA, US; New York, NY, US; Stockholm, SE) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/"&gt;Microsoft Reactor Stockholm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290085767/"&gt;&lt;strong&gt;Crack code interview problems in Rust - Ep. 2&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290085766/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290085770/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/events/290085769/"&gt;&lt;strong&gt;Stockholm Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-19 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/qtvtvsyfccbzb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-23 | Virtual (Durham, NC, US) | &lt;a href="https://www.meetup.com/triangle-rust/"&gt;Triangle Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rust/events/290712105/"&gt;&lt;strong&gt;Online Code and Chat&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-23 | Virtual (Linz, AT) | &lt;a href="https://www.meetup.com/rust-linz/"&gt;Rust Linz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-linz/events/290995162/"&gt;&lt;strong&gt;Rust Meetup Linz - 29th Edition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-23 | Virtual (New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224532/"&gt;&lt;strong&gt;Primeros pasos con Rust - Condiciones con expresiones if/else en Rust&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224533/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-24 | Virtual (Redmond, WA, US; New York, NY, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224536/"&gt;&lt;strong&gt;Primeros pasos con Rust - Uso de bucles para iterar por datos en Rust&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224538/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224535/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-25 | Virtual (Redmond, WA, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224544/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224540/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/290122935/"&gt;&lt;strong&gt;Rust Lightning Talks!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Virtual (Redmond, WA, US; San Francisco, CA, US; New York, NY, US; Stockholm, SE) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/"&gt;Microsoft Reactor Stockholm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290086420/"&gt;&lt;strong&gt;Crack code interview problems in Rust - Ep. 3&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290086421/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290086422/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/events/290086418/"&gt;&lt;strong&gt;Stockholm Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-30 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224559/"&gt;&lt;strong&gt;Primeros pasos con Rust - Control de errores en Rust&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224558/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224561/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-31 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/290697014/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-31 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsyfccbpc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-31 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224861/"&gt;&lt;strong&gt;Primeros pasos con Rust - Compresión de cómo Rust administra la memoria&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224860/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224859/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsyfcdbcb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224570/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224566/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224570/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224568/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcdbcb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-06 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224572/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224576/"&gt;&lt;strong&gt;Primeros pasos con Rust - Implementación de tipos y rasgos genéricos&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224572/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224573/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-07 | Virtual (Beijing, CN) | &lt;a href="https://www.meetup.com/wasm-rust-meetup/"&gt;WebAssembly and Rust Meetup (Rustlang)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/wasm-rust-meetup/events/290609896/"&gt;&lt;strong&gt;Monthly WasmEdge Community Meeting, a CNCF sandbox WebAssembly runtime&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-07 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/lsjbbtyfcdbkb/"&gt;&lt;strong&gt;Buffalo Rust User Group, First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-07 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224578/"&gt;&lt;strong&gt;Primeros pasos con Rust - Módulos, paquetes y contenedores de terceros&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224577/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224579/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-08 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Rector New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224584/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224583/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224585/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-13 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Rector New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224610/"&gt;&lt;strong&gt;Primeros pasos con Rust - Escritura de pruebas automatizadas&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224608/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224609/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-14 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/zdrzpsyfcdbsb/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-14 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Rector New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224616/"&gt;&lt;strong&gt;Primeros pasos con Rust - Creamos un programa de ToDos en la línea de comandos&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224613/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224617/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-14 | Virtual (Saarbrücken, DE) | &lt;a href="https://www.meetup.com/rust-saar/"&gt;Rust-Saar&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-saar/events/290040138/"&gt;&lt;strong&gt;Meetup: 26u16&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-15 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Rector New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224624/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224624/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224621/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-15 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/tqvhxsyfcdbtb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;&lt;a class="toclink" href="#asia"&gt;Asia&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-15 | Tokyo, JP | &lt;a href="https://www.meetup.com/tokyo-rust-meetup"&gt;Tokyo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/tokyo-rust-meetup/events/290667325/"&gt;&lt;strong&gt;Property-Based Testing in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Kyoto, JP | &lt;a href="https://www.meetup.com/kansai-rust"&gt;Kansai Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/kansai-rust/events/291020672"&gt;&lt;strong&gt;Rust talk: How to implement Iterator on tuples... kind of&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-20 | Stuttgart, DE | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/zmppzsyfccbbc/"&gt;&lt;strong&gt;OnSite Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-25 | Paris, FR | &lt;a href="https://www.meetup.com/rust-paris/"&gt;Rust Paris&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-paris/events/290100223/"&gt;&lt;strong&gt;Rust Paris meetup #55&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Copenhagen, DE | &lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/"&gt;Copenhagen Rust Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/events/290037532/"&gt;&lt;strong&gt;Rust Hack Night #32&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-02 | Hamburg, DE | &lt;a href="https://www.meetup.com/rust-meetup-hamburg/"&gt;Rust Meetup Hamburg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-meetup-hamburg/events/290824576/"&gt;&lt;strong&gt;Rust Hack &amp;amp; Learn February 2023&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-02 | Lyon, FR | &lt;a href="https://mobilizon.fr/events/b8577678-d072-4d9a-9562-974715f1dfbb"&gt;Rust Lyon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mobilizon.fr/events/b8577678-d072-4d9a-9562-974715f1dfbb"&gt;&lt;strong&gt;Rust Lyon meetup #01&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-20 | New York, NY, US | &lt;a href="https://www.meetup.com/blockchaincenter/"&gt;Blockchain Center&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/blockchaincenter/events/291016830/"&gt;&lt;strong&gt;Rust Tuesdays: Near Workspaces&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/dsbpxsyfccbjc/"&gt;&lt;strong&gt;Building a Rust Playground with WASM and Lane and Food!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/zpd1qo/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Common arguments against Rust's safety guarantees:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The library you're binding to can have a segfault in it.&lt;/li&gt;
&lt;li&gt;RAM can physically fail, causing dangling pointers.&lt;/li&gt;
&lt;li&gt;The computer the Rust program is running on can be hit by a meteorite.&lt;/li&gt;
&lt;li&gt;Alan Turing can come back from the dead and tell everyone that he actually made up computer science and none of it is real, thus invalidating every program ever made, including all Rust programs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://www.phoronix.com/forums/forum/phoronix/latest-phoronix-articles/1367544-google-to-allow-rust-code-in-the-chromium-browser?p=1367778#post1367778"&gt;Ironmask on the phoronix forums&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1355"&gt;Stephan Sokolow&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/10fvmlt/this_week_in_rust_478/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 18 Jan 2023 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2023-01-18:/blog/2023/01/18/this-week-in-rust-478/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 477</title><link>https://this-week-in-rust.org/blog/2023/01/11/this-week-in-rust-477/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on Twitter or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3 id="official"&gt;&lt;a class="toclink" href="#official"&gt;Official&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2023/01/10/Rust-1.66.1.html"&gt;Announcing Rust 1.66.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2023/01/10/cve-2022-46176.html"&gt;Security advisory for Cargo (CVE-2022-46176)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2023/01/09/android-ndk-update-r25.html"&gt;Updating the Android NDK in Rust 1.68&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="foundation"&gt;&lt;a class="toclink" href="#foundation"&gt;Foundation&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/community-grants-program-awards-announcement-introducing-our-latest-project-grantees/"&gt;Introducing Our Newest Project Grantees&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;&lt;a class="toclink" href="#newsletters"&gt;Newsletters&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-osdev.com/this-month/2022-12/"&gt;This Month in Rust OSDev: December 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustnigeria.curated.co/issues/13"&gt;Rust Nigeria newsletter Issue 13&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tokio.rs/blog/2023-01-03-announcing-turmoil"&gt;Announcing turmoil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2023/01/09/changelog-163.html"&gt;rust-analyzer changelog #163&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.antoyo.xyz/rustc_codegen_gcc-progress-report-19"&gt;rustc_codegen_gcc: Progress Report #19&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fyrox.rs/blog/post/feature-highlights-0-29/"&gt;Fyrox 0.29 Feature Highlights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kurtlawrence.info/blog/how-u-doin-a-progress-reporting-abstraction"&gt;Release of &lt;code&gt;how-u-doin&lt;/code&gt;; a progress reporting abstraction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bonsaidb.io/blog/introducing-okaywal/"&gt;Introducing OkayWAL: A write-ahead log for Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marabos.nl/atomics/"&gt;Rust Atomics and Locks by Mara Bos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jack.wrenn.fyi/blog/2022-retrospective/"&gt;Oh the Crates You'll Go! A 2022 Retrospective&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wcgw.dev/posts/2023/rusty-java-intro/"&gt;Rust for Java developers, an introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io/2023/01/04/on-random-numbers.html"&gt;On Random Numbers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jfrog.com/blog/watch-out-for-dos-when-using-rusts-popular-hyper-package/"&gt;Potential DoS Vulnerability in Rust Hyper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://quick-lint-js.com/blog/cpp-vs-rust-build-times/"&gt;Is coding in Rust as bad as in C++?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://brevzin.github.io/c++/2023/01/02/rust-cpp-format/"&gt;Rust vs C++ Formatting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reltech.substack.com/p/my-impressions-of-rust-after-a-year"&gt;My impressions of Rust after a year of working with it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/matt-butcher/"&gt;Fermyon with Matt Butcher&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.thecodedmessage.com/posts/default-params/"&gt;Rust and Default Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gendignoux.com/blog/2023/01/05/rust-arm-simd-android.html"&gt;Testing SIMD instructions on ARM with Rust on Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dstaley.com/posts/running-zola-on-wasm/"&gt;Running Zola on WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jernesto.com/articles/who_needs_haskell.html"&gt;Who needs Haskell? Straight to Rust Hell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/sharing-data-among-tasks-in-rust-embassy-synchronization-primitives"&gt;Sharing Data Among Tasks in Rust Embassy: Synchronization Primitives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jacobkiers.net/post/rust-cross-compilation-on-drone/"&gt;Cross compiling Rust with Drone CI and Gitea&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/schnellru"&gt;schnellru&lt;/a&gt;, which contains a fast and flexible LRU map.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1146"&gt;Squirrel&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;&lt;a class="toclink" href="#call-for-participation"&gt;Call for Participation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/call-for-contributors-to-the-rust-playground-for-upcoming-features/87110"&gt;Rust Playground - Call for contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meilisearch/meilisearch/issues/3007"&gt;meilisearch - When the &lt;code&gt;lat&lt;/code&gt; and &lt;code&gt;lng&lt;/code&gt; are strings the wrong error message is returned&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meilisearch/meilisearch/issues/3006"&gt;meilisearch - Bad latitude / Bad longitude should share a common message between the invalid sort and invalid filte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meilisearch/meilisearch/issues/3005"&gt;meilisearch - When both &lt;code&gt;lat&lt;/code&gt; and &lt;code&gt;lng&lt;/code&gt; are missing it doesn't return the right error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meilisearch/meilisearch/issues/3003"&gt;meilisearch - We must return an error for when _geo is not an object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sfackler/rust-postgres/issues/890"&gt;diesel - A pure rust postgres diesel connection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blackbeam/rust-mysql-simple/discussions/320"&gt;diesel - A pure rust mysql diesel connection implementation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;443 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-01-02..2023-01-09"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105712"&gt;playStation Vita support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106274"&gt;add JSON output to -Zdump-mono-stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106542"&gt;add default and latest stable edition to --edition in rustc (attempt 2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106385"&gt;split &lt;code&gt;-Zchalk&lt;/code&gt; flag into &lt;code&gt;-Ztrait-solver=(classic|chalk|next)&lt;/code&gt; flag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101792"&gt;only specify &lt;code&gt;--target&lt;/code&gt; by default for &lt;code&gt;-Zgcc-ld=lld&lt;/code&gt; on wasm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106371"&gt;do not add &lt;code&gt;noalias&lt;/code&gt; in return position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106392"&gt;&lt;code&gt;has_overflow&lt;/code&gt; only if value is &lt;em&gt;not&lt;/em&gt; within limit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105846"&gt;account for return-position &lt;code&gt;impl Trait&lt;/code&gt; in trait in &lt;code&gt;opt_suggest_box_span&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106283"&gt;add help diag. for &lt;code&gt;const = Enum&lt;/code&gt; missing braces around &lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106449"&gt;add retry mechanism for rustdoc GUI tests to reduce flakyness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105733"&gt;add type flags support for &lt;code&gt;Ty&lt;/code&gt; and &lt;code&gt;Const&lt;/code&gt; late-bound variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106340"&gt;always permit &lt;code&gt;ConstProp&lt;/code&gt; to exploit arithmetic identities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106501"&gt;correct detection of elided lifetimes in impl-trait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106045"&gt;default OOM handler: use non-unwinding panic, to match std handler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106519"&gt;detect bindings assigned blocks without tail expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106509"&gt;detect closures assigned to binding in block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106606"&gt;do not emit structured suggestion for turbofish with wrong span&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106581"&gt;do not emit wrong E0308 suggestion for closure mismatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105409"&gt;don't deduce a signature that makes a closure cyclic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106400"&gt;point at expressions where inference refines an unexpected type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105859"&gt;point out span where we could introduce higher-ranked lifetime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106364"&gt;reenable limited top-down MIR inlining&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105655"&gt;remove invalid case for mutable borrow suggestion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106363"&gt;structured suggestion for &lt;code&gt;&amp;amp;mut dyn Iterator&lt;/code&gt; when possible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106200"&gt;suggest &lt;code&gt;impl Fn*&lt;/code&gt; and &lt;code&gt;impl Future&lt;/code&gt; in &lt;code&gt;-&amp;gt; _&lt;/code&gt; return suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106410"&gt;suggest &lt;code&gt;mut self: &amp;amp;mut Self&lt;/code&gt; for &lt;code&gt;?Sized&lt;/code&gt; impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105805"&gt;suggest adding named lifetime when the return contains value borrowed from more than one lifetimes of function inputs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106497"&gt;suggest using clone when we have &amp;amp;T and T implemented Clone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106600"&gt;suppress type errors that come from private fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105292"&gt;inference: change a &lt;code&gt;commit_if_ok&lt;/code&gt; call to probe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2748"&gt;miri: ignore symbol shim clash when symbol is provided by &lt;code&gt;compiler_builtins&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2752"&gt;miri: make &lt;code&gt;env::current_exe&lt;/code&gt; work on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105609"&gt;only include metadata for non-dynamic libraries in rustc-dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106451"&gt;merge borrowck permission checks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101947"&gt;don't normalize in AstConv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105323"&gt;perform &lt;code&gt;SimplifyLocals&lt;/code&gt; before &lt;code&gt;ConstProp&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106468"&gt;use &lt;code&gt;FxIndexSet&lt;/code&gt; when updating obligation causes in &lt;code&gt;adjust_fulfillment_errors_for_expr_obligation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106416"&gt;shrink &lt;code&gt;ParseResult&lt;/code&gt; in the hot path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103104"&gt;stabilize &lt;code&gt;main_separator_str&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/95644"&gt;&lt;code&gt;Split*::as_str&lt;/code&gt; refactor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/90291"&gt;loosen the bound on the &lt;code&gt;Debug&lt;/code&gt; implementation of &lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/104163"&gt;customize &lt;code&gt;Debug&lt;/code&gt; impl for &lt;code&gt;OnceWith&lt;/code&gt; &amp;amp; &lt;code&gt;RepeatWith&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/95985"&gt;futures: add &lt;code&gt;PhantomData&lt;/code&gt; marker to Context to make Context !Send and !Sync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2683"&gt;futures: set to &lt;code&gt;None&lt;/code&gt; only if necessary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/1358"&gt;arch: stabilize cmpxchg16b instrinsic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11533"&gt;cargo: cargo by default saves credentials to &lt;code&gt;.cargo/credentials.toml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11541"&gt;cargo: fix panic on target dependency errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106366"&gt;rustdoc: fix rustdoc ICE on bad typedef with mismatching types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10142"&gt;clippy: &lt;code&gt;drop_ref&lt;/code&gt;: don't lint idiomatic in match arm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10112"&gt;clippy: &lt;code&gt;arithmetic_side_effects&lt;/code&gt;: Consider negative numbers and add more tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10143"&gt;clippy: don't lint &lt;code&gt;field_reassign&lt;/code&gt; when field in closure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10161"&gt;clippy: expand derivable-impls to cover enums with a default unit variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10162"&gt;clippy: fix false positive in &lt;code&gt;single_element_loop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10141"&gt;clippy: fix &lt;code&gt;empty_structs_with_brackets&lt;/code&gt; suggestion errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10159"&gt;clippy: make the &lt;code&gt;iter_kv_map&lt;/code&gt; lint handle &lt;code&gt;ref&lt;/code&gt;/&lt;code&gt;mut&lt;/code&gt; annotations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10107"&gt;clippy: suggest using &lt;code&gt;Path&lt;/code&gt; for comparing extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10153"&gt;clippy: trim paths in &lt;code&gt;box_default&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/rust-lang/rust-clippy/pull/10160"&gt;&lt;code&gt;default_trait_access&lt;/code&gt;/&lt;code&gt;clone_on_copy&lt;/code&gt; suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13458"&gt;rust-analyzer: add wrapping/checked/saturating assist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13894"&gt;rust-analyzer: apply fallback before final obligation resolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13893"&gt;rust-analyzer: complete record enum variants without parens when snippets are disabled&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13684"&gt;rust-analyzer: &lt;code&gt;extract_expressions_from_format_string&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13825"&gt;rust-analyzer: add &lt;code&gt;unqualify_method_call&lt;/code&gt; assist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13810"&gt;rust-analyzer: add action to expand a declarative macro once, inline. Fixes #13598&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13744"&gt;rust-analyzer: add the ability to limit the number of threads launched by &lt;code&gt;main_loop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13848"&gt;rust-analyzer: colorize &lt;code&gt;cargo check&lt;/code&gt; diagnostics in VSCode via text decorations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13763"&gt;rust-analyzer: add generic &lt;code&gt;TypeBoundList&lt;/code&gt; in generated derivable impl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13843"&gt;rust-analyzer: generate async delegate methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13891"&gt;rust-analyzer: keep whitespace in extract function handler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13887"&gt;rust-analyzer: only set machine-applicable rustc diagnostics as preferred&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13890"&gt;rust-analyzer: unescape inline module names in module resolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13816"&gt;rust-analyzer: postfix adjustment hints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13885"&gt;rust-analyzer: skip lifetime elision on fn pointers and fn trait types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13886"&gt;rust-analyzer: use ZWNJ to prevent VSCode from forming ligatures between hints and code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13853"&gt;rust-analyzer: use diagnostic code as link to full message&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A very quiet week, with few changes in either direction, and none of significant magnitude.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@simulacrum&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=b435960c4cfd3975651c7051be56d7f5d6c201ab&amp;amp;end=0442fbabe24ec43636a80ad1f40a0ad92a2e38df&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;b435960..0442fba&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1 Regressions, 1 Improvements, 3 Mixed; 1 of them in rollups
48 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-01-10.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3308"&gt;Add &lt;code&gt;core::mem::offset_of!&lt;/code&gt; RFC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3346"&gt;Create an Operational Semantics Team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2832"&gt;RFC: Move &lt;code&gt;std::net::IpAddr&lt;/code&gt; types into &lt;code&gt;core::net&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/103418"&gt;Add &lt;code&gt;SEMICOLON_IN_EXPRESSIONS_FROM_MACROS&lt;/code&gt; to future-incompat report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/63063"&gt;Tracking issue for RFC 2515, "Permit impl Trait in type aliases"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/105102"&gt;Check ADT fields for copy implementations considering regions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/104087"&gt;Stabilise inline_const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/105587"&gt;Partial stabilization of &lt;code&gt;once_cell&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/103406"&gt;Loosen &lt;code&gt;From&amp;lt;&amp;amp;[T]&amp;gt; for Box&amp;lt;[T]&amp;gt;&lt;/code&gt; bound to &lt;code&gt;T: Clone&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/105851"&gt;Leak amplification for peek_mut() to ensure BinaryHeap's invariant is always met&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/105796"&gt;rustdoc: simplify JS search routine by not messing with lev distance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/106316"&gt;Only include stable lints in &lt;code&gt;rustdoc::all&lt;/code&gt; group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3368"&gt;The &lt;code&gt;#[diagnostic]&lt;/code&gt; attribute namespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3367"&gt;RFC: Multi-Type Return Position Impl Trait (MTRPIT)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3365"&gt;RFC: re-export stdlib macros from submodules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3362"&gt;Command improvements for ergonomics and error handling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="call-for-testing"&gt;&lt;a class="toclink" href="#call-for-testing"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2023-01-11 - 2023-02-08 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-11 | Virtual (Boulder, CO, US) | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/290277662/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-12 | Virtual (San Francisco, CA, US; Stockholm, SE; New York, NY US) | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/"&gt;Microsoft Reactor Stockholm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290071417/"&gt;&lt;strong&gt;Crack code interview problems in Rust - Ep. 1&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/events/290071415/"&gt;&lt;strong&gt;Stockholm Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290071420/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-12 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/hlvbvsyfccbqb/"&gt;&lt;strong&gt;Rust Nürnberg online&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-14 | Virtual | &lt;a href="https://gamedev.rs/"&gt;Rust GameDev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?q=https%3A%2F%2Fdiscord.gg%2FyNtPTb2&amp;amp;sa=D&amp;amp;ust=1666661760000000&amp;amp;usg=AOvVaw13uHY9m-8bJJwgeP58VS8l"&gt;&lt;strong&gt;Rust GameDev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-16 | Virtual (San Francisco, CA, US; São Paulo, BR; New York, NY, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/"&gt;Microsoft Reactor São Paulo&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224512/"&gt;&lt;strong&gt;Primeros pasos con Rust - Qué es y Configuración el entorno de desarrollo&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/events/290224516/"&gt;&lt;strong&gt;São Paulo Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224515/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-17 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/289581080/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-17 | Virtual (San Francisco, CA, US; São Paulo, BR; New York, NY, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/"&gt;Microsoft Reactor São Paulo&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224518/"&gt;Microsoft Reactor New York&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224517/"&gt;&lt;strong&gt;Primeros pasos con Rust - Creación del primer programa de Rust&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/events/290224521/"&gt;&lt;strong&gt;*São Paulo Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224518/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-17 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/289015967/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-18 | Virtual (San Francisco, CA, US; São Paulo, BR; New York, NY US) | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/"&gt;Microsoft Reactor São Paulo&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224518/"&gt;Microsoft Reactor New York&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224523/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224525/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224523/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/events/290224522/"&gt;&lt;strong&gt;Sao Paulo Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-18 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/tqvhxsyfccbxb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-19 | Virtual (Redmond, WA, US; San Francisco, CA, US; New York, NY, US; Stockholm, SE) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/"&gt;Microsoft Reactor Stockholm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290085767/"&gt;&lt;strong&gt;Crack code interview problems in Rust - Ep. 2&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290085766/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290085770/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/events/290085769/"&gt;&lt;strong&gt;Stockholm Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-19 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/qtvtvsyfccbzb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-23 | Virtual (Durham, NC, US) | &lt;a href="https://www.meetup.com/triangle-rust/"&gt;Triangle Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rust/events/290712105/"&gt;&lt;strong&gt;Online Code and Chat&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-23 | Virtual (New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224532/"&gt;&lt;strong&gt;Primeros pasos con Rust - Condiciones con expresiones if/else en Rust&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224533/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-24 | Virtual (Redmond, WA, US; New York, NY, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224536/"&gt;&lt;strong&gt;Primeros pasos con Rust - Uso de bucles para iterar por datos en Rust&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224538/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224535/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-25 | Virtual (Redmond, WA, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224544/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224540/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/290122935/"&gt;&lt;strong&gt;Rust Lightning Talks!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Virtual (Redmond, WA, US; San Francisco, CA, US; New York, NY, US; Stockholm, SE) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/"&gt;Microsoft Reactor Stockholm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290086420/"&gt;&lt;strong&gt;Crack code interview problems in Rust - Ep. 3&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290086421/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290086422/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/events/290086418/"&gt;&lt;strong&gt;Stockholm Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-30 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224559/"&gt;&lt;strong&gt;Primeros pasos con Rust - Control de errores en Rust&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224558/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224561/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-31 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/290697014/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-31 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsyfccbpc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-31 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224861/"&gt;&lt;strong&gt;Primeros pasos con Rust - Compresión de cómo Rust administra la memoria&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224860/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224859/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsyfcdbcb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224570/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224566/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224570/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224568/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcdbcb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-06| Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224572/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224576/"&gt;&lt;strong&gt;Primeros pasos con Rust - Implementación de tipos y rasgos genéricos&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224572/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224573/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-07 | Virtual (Beijing, CN) | &lt;a href="https://www.meetup.com/wasm-rust-meetup/"&gt;WebAssembly and Rust Meetup (Rustlang)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/wasm-rust-meetup/events/290609896/"&gt;&lt;strong&gt;Monthly WasmEdge Community Meeting, a CNCF sandbox WebAssembly runtime&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-07 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/lsjbbtyfcdbkb/"&gt;&lt;strong&gt;Buffalo Rust User Group, First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-07 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224578/"&gt;&lt;strong&gt;Primeros pasos con Rust - Módulos, paquetes y contenedores de terceros&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224577/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224579/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-08 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Rector New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224584/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224583/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224585/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;&lt;a class="toclink" href="#asia"&gt;Asia&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-15 | Tokyo, JP | &lt;a href="https://www.meetup.com/tokyo-rust-meetup"&gt;Tokyo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/tokyo-rust-meetup/events/290667325/"&gt;&lt;strong&gt;Property-Based Testing in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-12 | Enschede, NL | &lt;a href="https://www.meetup.com/dutch-rust-meetup/"&gt;Dutch Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dutch-rust-meetup/events/289021643/"&gt;&lt;strong&gt;Rust Meetup - Subject TBA&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-20 | Stuttgart, DE | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/zmppzsyfccbbc/"&gt;&lt;strong&gt;OnSite Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-25 | Paris, FR | &lt;a href="https://www.meetup.com/rust-paris/"&gt;Rust Paris&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-paris/events/290100223/"&gt;&lt;strong&gt;Rust Paris meetup #55&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Copenhagen, DE | &lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/"&gt;Copenhagen Rust Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/events/290037532/"&gt;&lt;strong&gt;Rust Hack Night #32&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-02 | Hamburg, DE | &lt;a href="https://www.meetup.com/rust-meetup-hamburg/"&gt;Rust Meetup Hamburg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-meetup-hamburg/events/290824576/"&gt;&lt;strong&gt;Rust Hack &amp;amp; Learn February 2023&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-02 | Lyon, FR | &lt;a href="https://mobilizon.fr/events/b8577678-d072-4d9a-9562-974715f1dfbb"&gt;Rust Lyon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mobilizon.fr/events/b8577678-d072-4d9a-9562-974715f1dfbb"&gt;&lt;strong&gt;Rust Lyon meetup #01&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-11 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/290597764/"&gt;&lt;strong&gt;Rust Lunch&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-17 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/rwvwzsyfccbwb/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Copenhagen, DK | &lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/"&gt;Copenhagen Rust group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/events/290037532/"&gt;&lt;strong&gt;Rust Hack Night #32&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/dsbpxsyfccbjc/"&gt;&lt;strong&gt;Building a Rust Playground with WASM and Lane and Food!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/zpd1qo/official_rrust_whos_hiring_thread_for_jobseekers"&gt;Who's Hiring thread on r/rust&lt;/a&gt;)&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Now macros are fine, I mean we use them for implementing internals and you know if you have something that [...] needs to be implemented for lots and lots of different concrete types, then macros are a fine choice for that, but exposing that to users is something to be very careful about.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://youtu.be/Phk0C-kLlho?t=542"&gt;Raph Levien&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;llogiq is a tad sad there were no suggestions, but still likes the quote he ended up with!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/109mcyv/this_week_in_rust_477"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 11 Jan 2023 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2023-01-11:/blog/2023/01/11/this-week-in-rust-477/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 476</title><link>https://this-week-in-rust.org/blog/2023/01/04/this-week-in-rust-476/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on Twitter or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3 id="foundation"&gt;&lt;a class="toclink" href="#foundation"&gt;Foundation&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/a-q4-recap-2022-reflection-from-rebecca-rumbul-rust-foundation-executive-director-ceo/"&gt;A Q4 Recap &amp;amp; 2022 Reflection from Rebecca Rumbul&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2023/01/02/changelog-162.html"&gt;rust-analyzer changelog #162&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://moalyousef.github.io/blog/Fltkrs2022.html"&gt;fltk-rs in 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shuttle-hq/shuttle/releases/tag/v0.8.0"&gt;shuttle - Release v0.8.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fyrox.rs/blog/post/twif9/"&gt;This Week in Fyrox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Byron/gitoxide/discussions/681"&gt;gitoxide - The year in retrospective, and what's to come&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aerorust.org/blog/aerorust-3-years-birthday"&gt;The AeroRust community - 3 years birthday (and the roadmap for 2023)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sea-ql.org/blog/2022-12-30-whats-new-in-seaquery-0.28.0/"&gt;SeaQuery 0.28.0 - A dynamic query builder for SeaORM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://databend.rs/blog/2022-12-31-databend-2022-recap"&gt;Databend 2022 Recap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.yoshuawuyts.com/state-machines-3/"&gt;State Machines III: Type States&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/rust-sections/rust-vim-code-completion-b6a36a177340"&gt;Rust — vim — code completion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io/2021/05/31/how-to-test.html"&gt;How to Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/embedded-rust-and-embassy-dma-controllers"&gt;Embedded Rust and Embassy: DMA Controllers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tuckersiemens.com/posts/parsing-tftp-in-rust/"&gt;Parsing TFTP in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adotinthevoid.github.io/posts/2022/12/rustdoc-json-in-2022/"&gt;Rustdoc JSON in 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.equationlabs.io/from-php-to-rust-migrating-a-rest-api-between-these-two-languages-part-i"&gt;From PHP to Rust: Migrating a REST API between these two languages. (Part I)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://guptanikhil.medium.com/react-rust-wasm-play-an-animated-3d-model-ab0dc3fbb903"&gt;React + Rust + Wasm: Play an Animated 3D Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.orhun.dev/open-source-grindset"&gt;Open Source Grindset Explained (with a Rust example)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://johns.codes/blog/build-a-db/part01"&gt;Building a Simple DB in Rust - Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@shyamsundarb/microservices-with-rust-and-wasm-using-fermyon-30245673cdbb"&gt;Microservices with Rust and WASM using Fermyon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rodrigodd.github.io/2022/12/31/bf_compiler-part4.html"&gt;Compiling Brainfuck code - Part 4: A Static Compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.softwheel.io/how-to-implement-circuit-breaker-in-rust/"&gt;Rusty Circuit Breaker 🦀&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.orhun.dev/zero-deps-random-in-rust"&gt;Zero-dependency random number generation in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;&lt;a class="toclink" href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/en/blog/80/rust-101-open-source-university-course"&gt;Rust 101: an open-source university course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=JIvKgSyvtxI"&gt;If Rust Compiles, It WORKS (Testing not needed 📚)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/playlist?list=PLrmY5pVcnuE-_CP7XZ_44HN-mDrLQV4nS"&gt;Introduction to Axum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=Phk0C-kLlho"&gt;Ergonomic APIs for hard problems - Raph Levien&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/GyulyVGC/sniffnet"&gt;Sniffnet&lt;/a&gt;, a cross-platform GUI application to analyze your network traffic.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1143"&gt;Gyuly Vgc&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;&lt;a class="toclink" href="#call-for-participation"&gt;Call for Participation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No calls for participation this week. Keep an eye out for more places to contribute next week!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;291 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-12-26..2023-01-02"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106232"&gt;CFI: monomorphize transparent ADTs before typeid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105347"&gt;account for &lt;code&gt;match&lt;/code&gt; expr in single line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105515"&gt;account for macros in const generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106190"&gt;account for multiple multiline spans with empty padding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105998"&gt;adjust message on non-unwinding panic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106210"&gt;allow trait method paths to satisfy &lt;code&gt;const Fn&lt;/code&gt; bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106066"&gt;always suggest as &lt;code&gt;MachineApplicable&lt;/code&gt; in &lt;code&gt;recover_intersection_pat&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106242"&gt;detect diff markers in the parser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106150"&gt;detect when method call on LHS might be shadowed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106310"&gt;dont use &lt;code&gt;--merge-base&lt;/code&gt; during bootstrap formatting subcommand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106201"&gt;emit fewer errors on invalid &lt;code&gt;#[repr(transparent)]&lt;/code&gt; on &lt;code&gt;enum&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84762"&gt;encode spans relative to the enclosing item -- enable on nightly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103020"&gt;error parsing lifetime following by Sized and message + between them&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106358"&gt;fix confusing diagnostic when attempting to implementing trait for tuple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105702"&gt;format only modified files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106223"&gt;on unsized locals with explicit types suggest &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106317"&gt;only deduplicate stack traces for good path bugs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106139"&gt;give the correct track-caller location with MIR inlining&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105484"&gt;implement allow-by-default &lt;code&gt;multiple_supertrait_upcastable&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106195"&gt;improve heuristics whether &lt;code&gt;format_args&lt;/code&gt; string is a source literal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106208"&gt;make trait/impl &lt;code&gt;where&lt;/code&gt; clause mismatch on region error a bit more actionable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106284"&gt;merge multiple mutable borrows of immutable binding errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106064"&gt;partially fix &lt;code&gt;explicit_outlives_requirements&lt;/code&gt; lint in macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105570"&gt;properly calculate best failure in macro matching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/104531"&gt;provide a better error and a suggestion for &lt;code&gt;Fn&lt;/code&gt; traits with lifetime params&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105965"&gt;provide local extern function arg names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106176"&gt;recover &lt;code&gt;fn&lt;/code&gt; keyword as &lt;code&gt;Fn&lt;/code&gt; trait in bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105817"&gt;remove unreasonable help message for auto trait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106199"&gt;silence knock-down errors on &lt;code&gt;[type error]&lt;/code&gt; bindings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106095"&gt;suggest &lt;code&gt;Pin::as_mut&lt;/code&gt; when encountering borrow error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106172"&gt;suggest &lt;code&gt;impl Iterator&lt;/code&gt; when possible for &lt;code&gt;_&lt;/code&gt; return type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105852"&gt;suggest rewriting a malformed hex literal if we expect a float&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106302"&gt;suppress errors due to TypeError not coercing with inference variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106202"&gt;trim more paths in obligation types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2741"&gt;miri: cargo-miri: use rustc to determine the output filename&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2742"&gt;miri: handle unknown targets more gracefully&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2743"&gt;miri: simplify path joining code a bit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2744"&gt;miri: support using a JSON target file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2746"&gt;miri: tweaks to retag diagnostic handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106275"&gt;use some more &lt;code&gt;const_eval_select&lt;/code&gt; in pointer methods for compile times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103718"&gt;more inference-friendly API for lazy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/97176"&gt;more verbose &lt;code&gt;Debug&lt;/code&gt; implementation of &lt;code&gt;std::process:Command&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105651"&gt;add &lt;code&gt;#[inline]&lt;/code&gt; markers to &lt;code&gt;once_cell&lt;/code&gt; methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105903"&gt;unify id-based thread parking implementations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/104493"&gt;&lt;code&gt;available_parallelism:&lt;/code&gt;gracefully handle zero value &lt;code&gt;cfs_period_us&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105426"&gt;catch panics/unwinding in destruction of thread-locals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10771"&gt;cargo: asymmetric tokens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11407"&gt;cargo: reasons for rebuilding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10110"&gt;clippy: fix false negative in &lt;code&gt;needless_return&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10060"&gt;clippy: fix &lt;code&gt;match_single_binding&lt;/code&gt; suggestion introducing an extra semicolon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10115"&gt;clippy: move &lt;code&gt;mutex_atomic&lt;/code&gt; to &lt;code&gt;restriction&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13861"&gt;rust-analyzer: derive &lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13832"&gt;rust-analyzer: enum variant discriminants hints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13875"&gt;rust-analyzer: diagnose private assoc item accesses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13870"&gt;rust-analyzer: diagnose private field accesses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13857"&gt;rust-analyzer: implement yeeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13867"&gt;rust-analyzer: fall back to inaccessible associated functions and constants if no visible resolutions are found&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13869"&gt;rust-analyzer: improve exit point highlighting for &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt; loops in tail position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13871"&gt;rust-analyzer: merge multiple intersecting ranges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13877"&gt;rust-analyzer: prefix prelude items whose name collides in current scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13856"&gt;rust-analyzer: type check unstable &lt;code&gt;try{}&lt;/code&gt; blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13854"&gt;rust-analyzer: support multi-character punct tokens in MBE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13882"&gt;rust-analyzer: write down adjustments introduced by binary operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Fairly busy week with some massive performance improvements at the expense of some significant albeit smaller regressions. The main wins came in a long-standing PR from @cjgillot to enable encoding spans in metadata relative to their enclosing item. This causes more work in full compilation which causes some regressions up to 5% but can lead to very large wins in incremental compilation scenarios (up to ~70%). For example, the clap crate compiles 68% faster after a small 1 line change than it did previously.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=b38a6d373cb254697411147c0e49cd2e84864258&amp;amp;end=b435960c4cfd3975651c7051be56d7f5d6c201ab&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;b38a6d..b43596&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;(instructions:u)&lt;/th&gt;
&lt;th align="center"&gt;mean&lt;/th&gt;
&lt;th align="center"&gt;range&lt;/th&gt;
&lt;th align="center"&gt;count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;1.6%&lt;/td&gt;
&lt;td align="center"&gt;[0.3%, 4.6%]&lt;/td&gt;
&lt;td align="center"&gt;97&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;1.8%&lt;/td&gt;
&lt;td align="center"&gt;[0.2%, 7.6%]&lt;/td&gt;
&lt;td align="center"&gt;60&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;-9.7%&lt;/td&gt;
&lt;td align="center"&gt;[-68.7%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;53&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-1.7%&lt;/td&gt;
&lt;td align="center"&gt;[-15.3%, -0.1%]&lt;/td&gt;
&lt;td align="center"&gt;62&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;All ❌✅ (primary)&lt;/td&gt;
&lt;td align="center"&gt;-2.4%&lt;/td&gt;
&lt;td align="center"&gt;[-68.7%, 4.6%]&lt;/td&gt;
&lt;td align="center"&gt;150&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;1 Regressions, 1 Improvements, 4 Mixed; 1 of them in rollups
47 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-01-03.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/106316"&gt;Only include stable lints in &lt;code&gt;rustdoc::all&lt;/code&gt; group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/104163"&gt;Don't derive Debug for &lt;code&gt;OnceWith&lt;/code&gt; &amp;amp; &lt;code&gt;RepeatWith&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/104081"&gt;PhantomData layout guarantees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/105128"&gt;Add O(1) &lt;code&gt;Vec -&amp;gt; VecDeque&lt;/code&gt; conversion guarantee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/103800"&gt;Stabilize &lt;code&gt;::{core,std}::pin::pin!&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/103104"&gt;Stabilize &lt;code&gt;main_separator_str&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/90291"&gt;Loosen the bound on the Debug implementation of Weak.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No New or Updated RFCs were created this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="call-for-testing"&gt;&lt;a class="toclink" href="#call-for-testing"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2023-01-04 - 2023-02-01 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-04 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsyfccbgb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-04 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfccbgb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-05 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/290122605/"&gt;&lt;strong&gt;Part 2: Exploring USB with Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-10 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/vndgwsyfccbnb/"&gt;&lt;strong&gt;Second Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-11 | Virtual (Boulder, CO, US) | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/290277662/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-12 | Virtual (San Francisco, CA, US; Stockholm, SE; New York, NY US) | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290071417/"&gt;&lt;strong&gt;Crack code interview problems in Rust - Ep. 1&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/events/290071415/"&gt;&lt;strong&gt;Stockholm Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290071420/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-12 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/hlvbvsyfccbqb/"&gt;&lt;strong&gt;Rust Nürnberg online&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-14 | Virtual | &lt;a href="https://gamedev.rs/"&gt;Rust GameDev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?q=https%3A%2F%2Fdiscord.gg%2FyNtPTb2&amp;amp;sa=D&amp;amp;ust=1666661760000000&amp;amp;usg=AOvVaw13uHY9m-8bJJwgeP58VS8l"&gt;&lt;strong&gt;Rust GameDev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-16 | Virtual (San Francisco, CA, US; São Paulo, BR; New York, NY, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/"&gt;Microsoft Reactor São Paulo&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Reactor New York&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224512/"&gt;&lt;strong&gt;Primeros pasos con Rust - Qué es y Configuración el entorno de desarrollo&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/events/290224516/"&gt;&lt;strong&gt;São Paulo Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224515/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-17 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/289581080/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-17 | Virtual (San Francisco, CA, US; São Paulo, BR, New York, NY, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/"&gt;Microsoft Reactor São Paulo&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224518/"&gt;Microsoft Reactor New York&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224517/"&gt;&lt;strong&gt;Primeros pasos con Rust - Creación del primer programa de Rust&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/events/290224521/"&gt;&lt;strong&gt;*São Paulo Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224518/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-17 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/289015967/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-18 | Virtual (San Francisco, CA, US; São Paulo, BR; New York, NY US) | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/"&gt;Microsoft Reactor São Paulo&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224518/"&gt;Microsoft Reactor New York&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/290224523/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/events/290224522/"&gt;&lt;strong&gt;Sao Paulo Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224525/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-18 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/tqvhxsyfccbxb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/290122935/"&gt;&lt;strong&gt;Rust Lightning Talks!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-31 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsyfccbpc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-01 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsyfcdbcb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;&lt;a class="toclink" href="#asia"&gt;Asia&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-15 | Tokyo, JP | &lt;a href="https://www.meetup.com/tokyo-rust-meetup"&gt;Tokyo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/tokyo-rust-meetup/events/290667325/"&gt;&lt;strong&gt;Property-Based Testing in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-12 | Enschede, NL | &lt;a href="https://www.meetup.com/dutch-rust-meetup/"&gt;Dutch Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dutch-rust-meetup/events/289021643/"&gt;&lt;strong&gt;Rust Meetup - Subject TBA&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-20 | Stuttgart, DE | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/zmppzsyfccbbc/"&gt;&lt;strong&gt;OnSite Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-25 | Paris, FR | &lt;a href="https://www.meetup.com/rust-paris/"&gt;Rust Paris&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-paris/events/290100223/"&gt;&lt;strong&gt;Rust Paris meetup #55&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-01-05 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/dsbpxsydcqbdc/"&gt;&lt;strong&gt;Lightning Talks 'n' Chill (a.k.a. Show &amp;amp; Tell), with Pizza!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-09 | Minneapolis, MN, US | &lt;a href="https://www.meetup.com/minneapolis-rust-meetup/"&gt;Minneapolis Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/minneapolis-rust-meetup/events/289768841/"&gt;&lt;strong&gt;Happy Hour and Beginner Embedded Rust Hacking Session (#2!)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-11 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/290597764/"&gt;&lt;strong&gt;Rust Lunch&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-17 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/rwvwzsyfccbwb/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Copenhagen, DK | &lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/"&gt;Copenhagen Rust group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/events/290037532/"&gt;&lt;strong&gt;Rust Hack Night #32&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-01-26 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/dsbpxsyfccbjc/"&gt;&lt;strong&gt;Building a Rust Playground with WASM and Lane and Food!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/zpd1qo/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;You haven’t “fooled” rustc, you are using unsafe code. Unsafe code means that all you can do is fool yourself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://users.rust-lang.org/t/aint-it-funny/86661/3"&gt;Frank Steffahn on rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1348"&gt;Quine Dot&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/103cr02/this_week_in_rust_476/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 04 Jan 2023 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2023-01-04:/blog/2023/01/04/this-week-in-rust-476/</guid><category>This Week in Rust</category></item></channel></rss>