<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>This Week in Rust - TWiR Contributors</title><link>https://this-week-in-rust.org/</link><description></description><lastBuildDate>Wed, 08 Mar 2023 00:00:00 -0500</lastBuildDate><item><title>This Week in Rust 485</title><link>https://this-week-in-rust.org/blog/2023/03/08/this-week-in-rust-485/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on Twitter or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3 id="foundation"&gt;&lt;a class="toclink" href="#foundation"&gt;Foundation&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/rustconf-2023-is-coming-submit-a-talk-today/"&gt;RustConf 2023 is Coming—Submit a Talk Today!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/member-spotlight-hightec/"&gt;Member Spotlight: HighTec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/best-practices-for-integrating-rust-and-qt-in-embedded-systems/"&gt;Best Practices for Integrating Rust and Qt in Embedded Systems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-nation-2023"&gt;&lt;a class="toclink" href="#rust-nation-2023"&gt;Rust Nation 2023&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=y4_a3ALa_20"&gt;Opening Address - Rebecca Rumbul&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dTktT8y8niw"&gt;The Rustacean Cycle: Learn, Teach, Deliver - Nell Shamrell-Harrington&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=u4Dd7dBxcEA"&gt;Fast, Flexible Iteration with Rust and Rhai - Jonathan Strong&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cWCZms92-1g"&gt;iOS, Android and Web applications that share a single Rust core - Stuart Harris&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7DOYtnCXucw"&gt;Tricks of the Trait: Enabling Ergonomic Extractors - Rob Ede&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4FymKv23J34"&gt;Let's Get Rusty In Here - Daniel Thompson-Yvetot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7pU3gOVAeVQ"&gt;Let’s write async rust from the ground up! - Conrad Ludgate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=udHjmno-tfA"&gt;What I learned by solving 50 Advent of Code challenges in Rust - Luciano Mammino&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4DLhTPsg8QQ"&gt;Spreading Rust to the rest of the company: Moving past the proof of concept - Tim McNamara&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Avp55U2JFcQ"&gt;A tale of binary translation - Amanieu D'Antras&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-O31eFqBmf4"&gt;Embracing Rust at fly.io: How Rust powers our networking layer - Senyo Simpson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ec8vvD1SG-s"&gt;Closing the Supply Chain Security Loop with Rust and Pyrsia - Steven Chin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Chl8IdMxr4Y"&gt;SurrealDB: from Golang to Rust — building the world’s fastest-growing db - Tobie Morgan Hitchcock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Z-2siR9Ki84"&gt;Moving beyond &lt;code&gt;Arc&amp;lt;Mutex&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; - Katharina Fey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=EFtassAEK5A"&gt;What does the Rust Foundation do? - Rust Foundation team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=t5q0M5VDlQM"&gt;Rust on RISC-V, a case study - Jorge Prendes and James Wainwright&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rwH57zNm-A8"&gt;Rust in Rhymes II - Andre Bogus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=r35cBkPRNMI"&gt;Living with Rust Long-Term - Jon Gjengset&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;&lt;a class="toclink" href="#newsletters"&gt;Newsletters&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rustmagazine.org/issue-2/"&gt;Rust Magazine Issue 2 has been released!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bevyengine.org/news/bevy-0-10/"&gt;Bevy 0.10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2023/03/06/changelog-171.html"&gt;rust-analyzer hangelog #171&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zellij.dev/news/stacked-panes-swap-layouts/"&gt;Zellij 0.35.1 released: bringing Stacked Panes to your Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/introducing-oxy/"&gt;Oxy is Cloudflare's Rust-based next generation proxy framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fornjot.app/blog/weekly-release/2023-w10/"&gt;Fornjot (code-first CAD in Rust) - Weekly Release - Progressed Extremely Well&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://databend.rs/blog/databend-release-v1.0"&gt;Databend 1.0 Release - The Future of Cloud Data Analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.orhun.dev/introducing-runst/"&gt;Introducing runst: Handle desktop notifications neatly on Linux!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pdhv.fr/"&gt;A Windows software written in RUST available in the Microsoft Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seanmonstar.com/post/710694914534539264/this-month-in-hyper-february-2023"&gt;This Month in hyper: February 2023&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jacko.io/safety_and_soundness.html"&gt;Safety and Soundness in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://predr.ag/blog/re-exporting-enum-with-type-alias-breaking-change-not-major/"&gt;Re-exporting an enum with a type alias is breaking, but not major&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smallcultfollowing.com/babysteps/blog/2023/03/03/trait-transformers-send-bounds-part-3/"&gt;Trait transformers (send bounds, part 3)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://briankung.dev/2023/02/17/professional-rustacean-3-months-in/"&gt;Professional Rustacean, 3 months in&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tzemanovic.gitlab.io/posts/rust-coding-style/"&gt;Rust coding style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.polybdenum.com/2023/03/05/fixing-the-next-10-000-aliasing-bugs.html"&gt;Fixing the Next 10,000 Aliasing Bugs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notgull.github.io/device-afd/"&gt;\Device\Afd, or, the Deal with the Devil that makes async Rust work on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(audio) &lt;a href="https://rustacean-station.org/episode/joshuan-nelson/"&gt;Rustdoc with Joshua Nelson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(audio) &lt;a href="https://rustacean-station.org/episode/serge-barral/"&gt;Asynchronix with Serge Barral&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(video) &lt;a href="https://www.youtube.com/watch?v=engduNoI6DE"&gt;strace feels like magic — let’s fix that (with Rust)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(video) &lt;a href="https://www.youtube.com/watch?v=c_5Jy_AVDaM"&gt;Let's make an htop-like in your browser (with Rust)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(video) &lt;a href="https://www.youtube.com/watch?v=luOgEhLE2sg"&gt;Build your entire tech stack in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.brandons.me/blog/bufread-and-when-to-use-it"&gt;Rust's BufRead, And When To Use It&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.shuttle.rs/blog/2023/03/01/getting-started-with-rust-and-gpt"&gt;Getting Started with Rust &amp;amp; GPT-3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.superperfundo.dev/articles/ray-tracer-part2"&gt;Build a Ray Tracer, pt. 2 - Enter The Matrix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://antoniosbarotsis.github.io/posts/python_package_written_in_rust/"&gt;Creating and publishing a Python package written in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://orlp.net/blog/worlds-smallest-hash-table/"&gt;The World's Smallest Hash Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fettblog.eu/refactoring-rust-introducing-traits/"&gt;Refactoring in Rust: Introducing Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/cyril-marpaud/rust_esp_quickstart/"&gt;Embedded Rust on ESP32C3 Board, a Hands-on Quickstart Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=i_ghB5AusDs"&gt;Matching Braces With a Stack, Beginner Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;&lt;a class="toclink" href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/11dxy7e/academy_software_foundation_rust_working_group/"&gt;Academy Software Foundation Rust Working Group Status and Survey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zackoverflow.dev/writing/unsafe-rust-vs-zig/"&gt;When Zig is safer and faster than Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/emanuele-em/man-in-the-middle-proxy"&gt;man-in-the-middle-proxy&lt;/a&gt;, a - surprise! - man in the middle proxy.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1163"&gt;Emanuele Em&lt;/a&gt; for the self-suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;&lt;a class="toclink" href="#call-for-participation"&gt;Call for Participation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4410"&gt;Ockam - Create traits to abstract the configuration files handled by the CLI state&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4419"&gt;Ockam - Create clap command to show the details of an existing TCP listener on a node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4380"&gt;Ockam - When running the credential store command, validate the credential before storing it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;376 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-02-27..2023-03-06"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107723"&gt;apply BOLT optimizations without rebuilding LLVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106673"&gt;add support for QNX Neutrino to standard library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108427"&gt;recover from for-else and while-else&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108669"&gt;allow checking whether a type allows being uninitialized&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108644"&gt;allow setting hashmap toml values in &lt;code&gt;./configure&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108557"&gt;point error span at Some constructor argument when trait resolution fails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108553"&gt;deny capturing late-bound non-lifetime param in anon const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108551"&gt;descriptive error when users try to combine RPITIT/AFIT with specialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108496"&gt;add warning on pre- and postfix decrement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108297"&gt;exit when there are unmatched delims to avoid noisy diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108575"&gt;erase &lt;strong&gt;all&lt;/strong&gt; regions when probing for associated types on ambiguity in astconv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108787"&gt;erase regions even when failing to normalize type in MIR opts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108744"&gt;don't ICE when encountering bound var in builtin copy/clone bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108298"&gt;fix ICE: check if snippet is &lt;code&gt;)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108667"&gt;fix another ICE in &lt;code&gt;point_at_expr_source_of_inferred_type&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108672"&gt;feed queries on impl side for RPITITs when using &lt;code&gt;lower_impl_trait_in_trait_to_assoc_ty&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108568"&gt;make &lt;code&gt;associated_item_def_ids&lt;/code&gt; for traits use an unstable option to also return associated types for RPITITs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107981"&gt;new solver: implement canonicalization and region constraints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108746"&gt;don't project to RPITIT that has no default value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107844"&gt;desugaring of drop and replace at MIR build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108692"&gt;don't call &lt;code&gt;temporary_scope&lt;/code&gt; twice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106774"&gt;stabilize &lt;code&gt;cmpxchg16b_target_feature&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108540"&gt;add &lt;code&gt;Atomic*::from_ptr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105871"&gt;add &lt;code&gt;Option::as_&lt;/code&gt;(&lt;code&gt;mut_&lt;/code&gt;)&lt;code&gt;slice&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108462"&gt;fix &lt;code&gt;VecDeque::append&lt;/code&gt; capacity overflow for ZSTs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108157"&gt;use &lt;code&gt;partial_cmp&lt;/code&gt; to implement tuple &lt;code&gt;lt&lt;/code&gt;/&lt;code&gt;le&lt;/code&gt;/&lt;code&gt;ge&lt;/code&gt;/&lt;code&gt;gt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/89518"&gt;add vectored positioned I/O on Unix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11805"&gt;cargo: breaking endless loop on cyclic features in added dependency in cargo-add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11790"&gt;cargo: fix &lt;code&gt;CARGO_CFG_&lt;/code&gt; vars for configs defined both with and without value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11785"&gt;cargo: fix help string for "--charset" option of "cargo tree"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11630"&gt;cargo: fix(toml): provide a way to show unused manifest keys for dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11448"&gt;cargo: gitoxide integration: fetch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11783"&gt;cargo: improve error for missing crate in --offline mode for sparse index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11791"&gt;cargo: make &lt;code&gt;sparse&lt;/code&gt; the default protocol for crates.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108626"&gt;rustdoc-json: switch from HashMap to FxHashMap to fix non-determinism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108723"&gt;rustdoc: function signature search with traits in &lt;code&gt;where&lt;/code&gt; clause&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108098"&gt;rustdoc: reduce allocations when generating tooltips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108143"&gt;rustdoc: search by macro when query ends with &lt;code&gt;!&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108531"&gt;rustdoc: show that repeated expression arrays can be made with constant values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10442"&gt;clippy: downgrade &lt;code&gt;let_underscore_untyped&lt;/code&gt; to restriction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10439"&gt;clippy: fix false positive for &lt;code&gt;let_unit_value&lt;/code&gt; when &lt;code&gt;await&lt;/code&gt; used&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10405"&gt;clippy: fix ICE in &lt;code&gt;multiple_unsafe_ops_per_block&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10423"&gt;clippy: fix &lt;code&gt;array-size-threshold&lt;/code&gt; config deserialization error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10403"&gt;clippy: fix various ICEs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10324"&gt;clippy: &lt;code&gt;missing_docs_in_private_items&lt;/code&gt; should cover only private items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14238"&gt;rust-analyzer: allow &lt;code&gt;generate_function&lt;/code&gt; to generate in different local crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14243"&gt;rust-analyzer: diagnose unresolved field, method call and call expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14240"&gt;rust-analyzer: diagnose value breaks in incorrect breakables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14266"&gt;rust-analyzer: make &lt;code&gt;replace_or_with_or_else&lt;/code&gt; assists more generally applicable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14260"&gt;rust-analyzer: adjust &lt;code&gt;replace_match_with_if_let&lt;/code&gt; applicability range&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14234"&gt;rust-analyzer: don't drop rustc crates in the rustc workspace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14176"&gt;rust-analyzer: fix associated item visibility in block-local impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14239"&gt;rust-analyzer: load the sysroot in all CLI commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14185"&gt;rust-analyzer: run doctests for structs with lifetime parameters from IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14247"&gt;rust-analyzer: generate correct completion edits for missing macro arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14222"&gt;rust-analyzer: implement pattern mismatch diagnostics (but keep them disabled)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14225"&gt;rust-analyzer: support removing nested &lt;code&gt;dbg!()&lt;/code&gt;s in &lt;code&gt;remove_dbg&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A really quiet week with almost all regressions being due to noise in benchmarks that show "bimodality" in codegen that can cause swings in performance from one change to the other. The only true performance change was a two-line change by @nnethercote to remove a redundant function call which led to a 0.3% improvement in performance across roughly 15 benchmarks.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=31f858d9a511f24fedb8ed997b28304fec809630&amp;amp;end=8f9e09ac3ef3fa85d23ad6a0c920d49987144b13&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;31f858d9..8f9e09ac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;(instructions:u)&lt;/th&gt;
&lt;th align="center"&gt;mean&lt;/th&gt;
&lt;th align="center"&gt;range&lt;/th&gt;
&lt;th align="center"&gt;count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;2.0%&lt;/td&gt;
&lt;td align="center"&gt;[1.2%, 2.8%]&lt;/td&gt;
&lt;td align="center"&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;-0.4%&lt;/td&gt;
&lt;td align="center"&gt;[-0.7%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-1.0%&lt;/td&gt;
&lt;td align="center"&gt;[-1.8%, -0.1%]&lt;/td&gt;
&lt;td align="center"&gt;31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;All ❌✅ (primary)&lt;/td&gt;
&lt;td align="center"&gt;-0.4%&lt;/td&gt;
&lt;td align="center"&gt;[-0.7%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;7 Regressions, 8 Improvements, 2 Mixed; 7 of them in rollups
35 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-03-07.md"&gt;Full report&lt;/a&gt; &lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rfcs/pull/2918"&gt;RFC - sigil-option-notation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/97594"&gt;Implement tuple&amp;lt;-&amp;gt;array convertions via &lt;code&gt;From&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/issues/81872"&gt;Tracking Issue for Mutex::unlock()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/issues/62358"&gt;Tracking issue for &lt;code&gt;Option::contains&lt;/code&gt; and &lt;code&gt;Result::contains&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/108471"&gt;Remove &lt;code&gt;box_syntax&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No New or Updated RFCs were created this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="call-for-testing"&gt;&lt;a class="toclink" href="#call-for-testing"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2023-03-08 - 2023-04-05 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-03-08 | Virtual (Boulder, CO, US) | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/zvxcsryfcfblb/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/hlvbvsyfcfbmb/"&gt;&lt;strong&gt;Rust Nürnberg online&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-11 | Virtual | &lt;a href="https://discord.gg/yNtPTb2"&gt;Rust GameDev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/yNtPTb2"&gt;&lt;strong&gt;Rust GameDev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-14 | Virtual (Italy) | &lt;a href="https://www.eventbrite.it/o/hinto-28025248045"&gt;Hinto&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.com/e/biglietti-webinar-online-introduzione-a-rust-558594419947?aff=ebdssbonlinesearch&amp;amp;keep_tld=1"&gt;&lt;strong&gt;Webinar online | Introduzione a Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-14 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;Berlin.rs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://berline.rs/2023/03/14/rust-hack-and-learn.html"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-14 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/dallas-rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/291809763/"&gt;&lt;strong&gt;Second Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-14 | Virtual (Redmond, WA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/291676352/"&gt;&lt;strong&gt;Crack code interview problems in Rust: S2 Ep1&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-14 | Virtual (Saarbrücken, DE) | &lt;a href="https://www.meetup.com/rust-saar/"&gt;Rust-Saar&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-saar/events/292076386/"&gt;&lt;strong&gt;Meetup: 27u16&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/291354288/"&gt;&lt;strong&gt;Injecting Rust Hooks into a 1999 game binary (unsafe)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/wqchctyfcfbtb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-16 | Virtual (Raleigh, NC, US) | &lt;a href="https://www.meetup.com/triangle-bitdevs/"&gt;Triangle BitDevs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-bitdevs/events/292032273/"&gt;&lt;strong&gt;Rust for Bitcoiners&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-16 | Virtual (Redmond, WA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/291681809/"&gt;&lt;strong&gt;Introduction to WebAssembly (WASM) with Rust and WASMEdge&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-16 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/rust-community-stuttgart"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/291847774/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-21 | Virtual (Redmond, WA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/291676961/"&gt;&lt;strong&gt;Crack code interview problems in Rust: S2 Ep2&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-21 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/vdhxgsyfcfbcc/"&gt;&lt;strong&gt;Rust+Tell Lightning Talks&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-22 | Virtual (Richmond, VA, US) | &lt;a href="https://www.meetup.com/rustaceans-rva/"&gt;Rustaceans RVA&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustaceans-rva/events/291963911/"&gt;&lt;strong&gt;Rustaceans RVA - March Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-28 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/dallas-rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsyfcfblc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-28 | Virtual (Redmond, WA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/291677113/"&gt;&lt;strong&gt;Crack code interview problems in Rust: S2 Ep3&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-29 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/291892487/"&gt;&lt;strong&gt;Writing your own rust 'book' with mdBook&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-04-04 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/lsjbbtyfcgbgb/"&gt;&lt;strong&gt;Buffalo Rust User Group, First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-04-05 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/291967741/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-04-05 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/rust-community-stuttgart"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/dvvtvsyfcgbhb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-03-09 | Basel, CH | &lt;a href="https://www.meetup.com/rust-basel/"&gt;Rust Basel&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-basel/events/291228934/"&gt;&lt;strong&gt;Rust Meetup #7&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Delft, NL | &lt;a href="https://www.meetup.com/rust-nederland/"&gt;Rust Nederland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291401965/"&gt;&lt;strong&gt;Regular track: Embedded Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291401778/"&gt;&lt;strong&gt;Student track: Embedded Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Lyon, FR | &lt;a href="https://www.meetup.com/fr-FR/rust-lyon/"&gt;Rust Lyon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/fr-FR/rust-lyon/events/291727241/"&gt;&lt;strong&gt;Rust Lyon Meetup #2&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Nürnberg, DE | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/291623203/"&gt;&lt;strong&gt;Walk around Embedded World Exhibition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Trondheim, NO | &lt;a href="https://www.meetup.com/rust-trondheim/"&gt;Rust Trondheim&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-trondheim/events/292085409/"&gt;&lt;strong&gt;Rust graphics with nannou&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-16 | Paris, FR | &lt;a href="https://www.meetup.com/ocaml-paris/events/"&gt;OCaml Users in Paris - OUPS&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/ocaml-paris/events/291637370/"&gt;&lt;strong&gt;OUPS Mars 2023: Creusot a prophetic verifier for Rust -- Xavier Denis&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-17 | Stuttgart, DE | &lt;a href="https://www.meetup.com/rust-community-stuttgart"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/zmppzsyfcfbwb/"&gt;&lt;strong&gt;OnSite Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-28 | Zurich, CH | &lt;a href="https://www.meetup.com/de-DE/rust-zurich/events/291449557/"&gt;Rust Zurich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/rust-zurich/events/291449557/"&gt;&lt;strong&gt;High performance concurrent data structures in Rust - March Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-29 | Paris, FR | &lt;a href="https://www.meetup.com/rust-paris/"&gt;Rust Paris&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-paris/events/291963747/"&gt;&lt;strong&gt;Rust Paris meetup #57&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-03-09 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/rrwbctyfcfbmb/"&gt;&lt;strong&gt;Trails, Triumphs, &amp;amp; Travails of Yet-Another-Database-Crate with PJ and Food!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/10nmtew/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;(…) as much as i dislike the &lt;a href="https://crates.io/crates/cargo-geiger"&gt;cargo-geiger&lt;/a&gt; concept, the name … kind of works&lt;/p&gt;
&lt;p&gt;&lt;code&gt;unsafe&lt;/code&gt; is a lot like uranium. it’s just one more metal ore you can process, refine, and machine. it doesn’t combust in atmosphere, it doesn’t corrode or make weird acids. unless you go out of your way to make it dangerous you don’t even have to worry about critical masses. you can work with it pretty normally most of the time&lt;/p&gt;
&lt;p&gt;but if you don’t know exactly what it is, what it does, and how to work with it, it will cause mysterious illnesses that only crop up long after you’ve stopped touching it&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://www.reddit.com/r/rust/comments/11eyu50/comment/jahdf3b/"&gt;Alexander Payne on /r/rust&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1377"&gt;Stephan Sokolow&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="REDDIT_LINK_HERE"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 08 Mar 2023 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2023-03-08:/blog/2023/03/08/this-week-in-rust-485/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 484</title><link>https://this-week-in-rust.org/blog/2023/03/01/this-week-in-rust-484/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on Twitter or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3 id="official"&gt;&lt;a class="toclink" href="#official"&gt;Official&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2023/02/23/keyword-generics-progress-report-feb-2023.html"&gt;Keyword Generics Progress Report: February 2023&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;&lt;a class="toclink" href="#newsletters"&gt;Newsletters&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gamedev.rs/news/042/"&gt;This Month in Rust GameDev #42 - January 2023&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2023/02/27/changelog-170.html"&gt;rust-analyzer Changelog #170&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2023/02/27/changelog-189.html"&gt;IntelliJ Rust Changelog #189&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Byron/gitoxide/discussions/757"&gt;gitoxide - [January]: The first &lt;code&gt;cargo&lt;/code&gt; integration review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dioxuslabs.com/blog/release-030/"&gt;Dioxus 0.3 - Templates, Hot Reloading, LiveView, and more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mabez.dev/blog/posts/esp-rust-24-02-2023/"&gt;Rust on Espressif chips - 2023 Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/119roow/announcing_transitive_041_for_better_transitivity/"&gt;Announcing transitive 0.4.1, for better transitivity between types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/1192ord/announcing_compact_str_version_07_a_small_string/"&gt;Announcing &lt;code&gt;compact_str&lt;/code&gt; version 0.7! A small string optimization for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ambient.run/post/introducing-ambient"&gt;Introducing Ambient 0.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fyrox.rs/blog/post/twif16/"&gt;This Week in Fyrox #16&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fornjot.app/blog/weekly-release/2023-w09/"&gt;Fornjot (code-first CAD in Rust) - Weekly Release - Still More To Do&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=LWef_2IaFDk"&gt;Cargo's New Sparse Index w/special guest Arlo Siemsen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://model-checking.github.io/kani-verifier-blog/2023/02/28/kani-internship-projects-2022-stubbing.html"&gt;Kani Internship Projects 2022: Function Stubbing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/magmide/magmide/discussions/28"&gt;Announcing Magmide Month!&lt;/a&gt; (proof language for/using Rust)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=pTMvh6VzDls"&gt;Rust and RAII Memory Management - Computerphile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://samsartor.com/guis-3/"&gt;All the Problems of Mutation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cherrykitten.dev/blog/rust-1-options-results/"&gt;Learning Rust Part 1: A kitten's guide to Options and Results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mmapped.blog/posts/15-when-rust-hurts.html"&gt;When Rust hurts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.travelneil.com/time-travel-debugging-in-rust.html"&gt;Time Travel Debugging in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.nindalf.com/posts/clippy/"&gt;What I learned from contributing to Rust's linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2NZlLK6NGmY&amp;amp;list=PLA3GOqJSZytqgPc76nqHc3QAr77bwj3p9"&gt;Rust Programming #1 - Getting started &amp;amp; basic concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/rust-nginx-module/"&gt;ROFL with a LOL: rewriting an NGINX module in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://werat.dev/blog/pretty-rust-backtraces-in-raw-terminal-mode/"&gt;Pretty Rust backtraces in raw terminal mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://betterprogramming.pub/a-little-bit-of-rust-d9f2afc09238"&gt;A Little Bit of Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/big-pineapple-intro/"&gt;How Rust and Wasm power Cloudflare's 1.1.1.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/stm32f4-embedded-rust-at-the-pac-systick-delay"&gt;STM32F4 Embedded Rust at the PAC: SysTick Delay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://grantshandy.github.io/posts/raycasting/"&gt;Write a First Person Game in 2KB With Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.judy.co.uk/blog/rust-traits-and-references/"&gt;Trait Implementations and References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hyperexponential.com/blog/rust-language-exercises-at-hx"&gt;Some exercises to accompany the Rust Book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=ek_HJX8sQqk"&gt;Compression from scratch: Huffman coding tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.spyglass.fyi/posts/2023/creating-a-launcher-in-tauri/"&gt;Create a launchbar app using Tauri &amp;amp; Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;&lt;a class="toclink" href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://eurorust.eu/"&gt;EuroRust 2023 announced for Oct. 12-13 in Brussels, BE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/en/blog/86/introducing-mailcrab"&gt;Introducing MailCrab!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matt.si/2023-02/rust-nation/"&gt;Rust Nation 2023 Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bytecodealliance.org/articles/wasi-threads"&gt;Announcing wasi-threads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wasmer.io/posts/WAI-is-the-answer"&gt;WAI is the Answer !!!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtube.com/watch?v=9uAy8skUVsc"&gt;Tutorial: Building a Blog in Rust - Static File Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=QeiAl35bAIQ"&gt;Embedded-exploration: Debugging Rust start-up code via JTAG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=dFkGNe4oaKk"&gt;Oxidise Your Life&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=_ccDqRTx-JU"&gt;Improve your Rust APIs with the type state pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lupyuen.github.io/articles/unicorn"&gt;(Possibly) Emulate PinePhone with Unicorn Emulator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Video] &lt;a href="https://www.youtube.com/watch?v=ykQbsTHqKFo"&gt;Generic Traits, Impls, and Slices in Rustlang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/jcaromiq/goku/"&gt;goku&lt;/a&gt;, a HTTP load tester.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1161"&gt;Joaquín Caro&lt;/a&gt; for the self-suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;&lt;a class="toclink" href="#call-for-participation"&gt;Call for Participation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/purton-tech/barricade/issues/1"&gt;barricade - Add support for OpenID Connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://beyermatthias.de/call-for-participation-config-rs-and-config-rs-ng"&gt;config-rs - CFP for the config-rs-ng experiment for a new implementation of the config-rs crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4308"&gt;Ockam - Remove the check_credential arguments from clap command ockam tcp-inlet create&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4367"&gt;Ockam - Implement clap command ockam tcp-listener delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4359"&gt;Ockam - Improve install.sh to install in path - like rustup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;381 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-02-20..2023-02-27"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108175"&gt;MIR-Validate StorageLive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108424"&gt;&lt;code&gt;rustc_infer&lt;/code&gt;: consolidate obligation elaboration de-duplication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108246"&gt;add an &lt;code&gt;InstCombine&lt;/code&gt; for redundant casts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107911"&gt;add check for invalid &lt;code&gt;#[macro_export]&lt;/code&gt; arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108375"&gt;add inlining attributes for query system functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108342"&gt;apply query response: actually define opaque types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108063"&gt;ban associated type bounds in bad positions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108208"&gt;correctly handle aggregates in DataflowConstProp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108324"&gt;diagnostics: if &lt;code&gt;AssocFn&lt;/code&gt; has self argument, describe as method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108449"&gt;do not lint ineffective unstable trait impl for unresolved trait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108176"&gt;don't delay &lt;code&gt;ReError&lt;/code&gt; bug during lexical region resolve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108319"&gt;don't project specializable RPITIT projection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108502"&gt;don't trigger error for ReError when other region is empty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108440"&gt;emit the enum discriminant separately for the Encodable macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108391"&gt;fix &lt;code&gt;is_terminal&lt;/code&gt;'s handling of long paths on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108241"&gt;fix handling of reexported macro in doc hidden items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108239"&gt;fix overlapping spans in removing extra arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105462"&gt;give the resolver access to &lt;code&gt;TyCtxt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107675"&gt;implement &lt;code&gt;-Zlink-directives=yes/no&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106541"&gt;implement const iterator using &lt;code&gt;rustc_do_not_const_check&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107890"&gt;lint against &lt;code&gt;Iterator::map&lt;/code&gt; receiving a callable that returns &lt;code&gt;()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108315"&gt;lint dead code in closures and generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108000"&gt;lint: don't suggest &lt;code&gt;MaybeUninit::assume_init&lt;/code&gt; for uninhabited types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108333"&gt;make object bound candidates sound in the new trait solver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108169"&gt;make query keys &lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108202"&gt;make sure &lt;code&gt;test_type_match&lt;/code&gt; doesn't ICE with late-bound types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108486"&gt;merge &lt;code&gt;diagnostic_items&lt;/code&gt; duplicate diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108434"&gt;migrate &lt;code&gt;rustc_hir_analysis&lt;/code&gt; to session diagnostic Part One&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107728"&gt;miri: basic dyn* support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/104265"&gt;move IpAddr, SocketAddr and V4+V6 related types to &lt;code&gt;core&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108388"&gt;parser: provide better suggestions and errors on closures with braces missing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91742"&gt;print a backtrace when query forcing fails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106918"&gt;rebuild BinaryHeap on unwind from retain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106430"&gt;remove dead unwinds before drop elaboration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108410"&gt;rustdoc: avoid including &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; tags in item table short desc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107941"&gt;treat &lt;code&gt;str&lt;/code&gt; as containing &lt;code&gt;[u8]&lt;/code&gt; for auto trait purposes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/104754"&gt;use &lt;code&gt;ThinVec&lt;/code&gt; more in the AST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108300"&gt;use a lock-free datastructure for &lt;code&gt;source_span&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2798"&gt;miri: get Miri working on ARM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/404"&gt;hashbrown: &lt;code&gt;raw_table&lt;/code&gt; + &lt;code&gt;raw_table_mut&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/407"&gt;hashbrown: fix last bug in &lt;code&gt;RawTable::clone_from_impl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc_codegen_gcc/pull/254"&gt;codegen_gcc: simd scatter gather&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11774"&gt;cargo: addition of support for -F as an alias for --features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11643"&gt;cargo: error message for transitive artifact dependencies with targets the package doesn't directly interact with&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11756"&gt;cargo: fix Cargo removing the sparse+ prefix from sparse URLs in .crates.toml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11750"&gt;cargo: reuse url encoding from &lt;code&gt;url&lt;/code&gt; crate, don't use separate &lt;code&gt;percent-encoding&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11410"&gt;cargo: suggest cargo add when installing library crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10197"&gt;clippy: add &lt;code&gt;impl_trait_in_params&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10369"&gt;clippy: add new lint &lt;code&gt;no_mangle_with_rust_abi&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10303"&gt;clippy: add configuration to lint missing docs of &lt;code&gt;pub(crate)&lt;/code&gt; items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10401"&gt;clippy: do not panic when analyzing the malformed origin of a format string&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10399"&gt;clippy: do not suggest to derive &lt;code&gt;Default&lt;/code&gt; on generics with implicit arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10375"&gt;clippy: do not suggest using Self in const generic parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10392"&gt;clippy: fix more false positives for &lt;code&gt;extra_unused_type_parameters&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10391"&gt;clippy: fix test function checker in &lt;code&gt;unwrap_used&lt;/code&gt;, &lt;code&gt;expect_used&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10380"&gt;clippy: ignore lifetimes from differing contexts in &lt;code&gt;needless_lifetimes&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10386"&gt;clippy: normalize projections types when checking &lt;code&gt;explicit_auto_deref&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14175"&gt;rust-analyzer: add openDocs command to context menu in VS Code extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14203"&gt;rust-analyzer: add check for extra path segments after a fully qualified one&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14208"&gt;rust-analyzer: add a case in which remainig is None in resolveing types when resolving hir path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14207"&gt;rust-analyzer: respect &lt;code&gt;$CARGO_HOME&lt;/code&gt; when looking up toolchains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/ena/pull/37"&gt;fix outdated doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-installer/pull/123"&gt;rust-installer: adjust xz compression settings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Some noisy benchmarks impeded performance review this week. There was a notable
improvement to a broad range of primary benchmarks, first from PR #108440, which
revised the encodable proc macro to handle the discriminant separately from its
fields, and second from PR #108375, which inlined a number of methods that had
only a single caller. Both of these PR's were authored by the same contributor;
many thanks Zoxc!&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@pnkfelix&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=3fee48c161a48b0c142d3998fff56faee96bd56c&amp;amp;end=31f858d9a511f24fedb8ed997b28304fec809630&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;3fee48c1..31f858d9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5 Regressions, 4 Improvements, 6 Mixed; 6 of them in rollups
39 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-02-28.md"&gt;Full report&lt;/a&gt; &lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2832"&gt;RFC: Move std::net::IpAddr types into core::net.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rfcs/pull/3218"&gt;Rename {Option, Result}::expect to unwrap_or_panic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rfcs/pull/3189"&gt;take on bool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/107200"&gt;io: soften ‘at most one write attempt’ requirement in io::Write::write&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/104363"&gt;Make &lt;code&gt;unused_allocation&lt;/code&gt; lint against &lt;code&gt;Box::new&lt;/code&gt; too&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/106505"&gt;Properly allow macro expanded format_args invocations to uses captures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/89065"&gt;Add &lt;code&gt;NonZero{I,U}{8,16,32,64,128,size}::{MIN,MAX}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/106844"&gt;allow negative numeric literals in concat!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/66893"&gt;Tracking issue for atomic_mut_ptr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/106921"&gt;Add documentation about the memory layout of &lt;code&gt;Cell&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/105021"&gt;Tracking issue for &lt;code&gt;PathBuf::as_mut_os_string&lt;/code&gt; and &lt;code&gt;Path::as_mut_os_str&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/108157"&gt;Use &lt;code&gt;partial_cmp&lt;/code&gt; to implement tuple &lt;code&gt;lt&lt;/code&gt;/&lt;code&gt;le&lt;/code&gt;/&lt;code&gt;ge&lt;/code&gt;/&lt;code&gt;gt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3397"&gt;Create RFC for bundling local images in rustdoc output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3396"&gt;Extern types v2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3394"&gt;format-dynamic-fill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3392"&gt;Add RFC on governance, establishing the Leadership Council&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3391"&gt;RFC: result_ffi_guarantees&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="call-for-testing"&gt;&lt;a class="toclink" href="#call-for-testing"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2023-03-01 - 2023-03-29 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-03-01 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsyfcfbcb/"&gt;&lt;strong&gt;Indy.rs - Michael Baykov on Category Theory &amp;amp; Argument Parsing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-02 | Virtual (Raleigh, NC, US) | &lt;a href="https://www.meetup.com/triangle-bitdevs/"&gt;Triangle BitDevs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-bitdevs/events/291710295/"&gt;&lt;strong&gt;Rust for Bitcoiners&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-02 | Virtual (Linz, AT) | &lt;a href="https://www.meetup.com/rust-linz/"&gt;Rust Linz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-linz/events/291483339/"&gt;&lt;strong&gt;Rust Meetup Linz - 30th Edition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-07 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/lsjbbtyfcfbkb/"&gt;&lt;strong&gt;Buffalo Rust User Group, First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-07 | Virtual (Santa Clara, CA, US) | &lt;a href="https://www.meetup.com/ucsc-extension-community/"&gt;UCSC Extension Community&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/ucsc-extension-community/events/290906954/"&gt;&lt;strong&gt;Programming with Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-08 | Virtual (Boulder, CO, US) | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/zvxcsryfcfblb/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-11 | Virtual | &lt;a href="https://discord.gg/yNtPTb2"&gt;Rust GameDev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/yNtPTb2"&gt;&lt;strong&gt;Rust GameDev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-14 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;Berlin.rs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://berline.rs/2023/03/14/rust-hack-and-learn.html"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-14 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/dallas-rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/291809763/"&gt;&lt;strong&gt;Second Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-14 | Virtual (Redmond, WA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/291676352/"&gt;&lt;strong&gt;Crack code interview problems in Rust: S2 Ep1&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/291354288/"&gt;&lt;strong&gt;Injecting Rust Hooks into a 1999 game binary (unsafe)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/wqchctyfcfbtb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-16 | Virtual (Redmond, WA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/291681809/"&gt;&lt;strong&gt;Introduction to WebAssembly (WASM) with Rust and WASMEdge&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-16 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/rust-community-stuttgart"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/291847774/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-21 | Virtual (Redmond, WA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/291676961/"&gt;&lt;strong&gt;Crack code interview problems in Rust: S2 Ep2&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-21 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/vdhxgsyfcfbcc/"&gt;&lt;strong&gt;Rust+Tell Lightning Talks&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-22 | Virtual (Richmond, VA, US) | &lt;a href="https://www.meetup.com/rustaceans-rva/"&gt;Rustaceans RVA&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustaceans-rva/events/291963911/"&gt;&lt;strong&gt;Rustaceans RVA - March Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-28 | Virtual (Redmond, WA, US) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/291677113/"&gt;&lt;strong&gt;Crack code interview problems in Rust: S2 Ep3&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-29 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/291892487/"&gt;&lt;strong&gt;Writing your own rust 'book' with mdBook&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;&lt;a class="toclink" href="#asia"&gt;Asia&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-03-04 | Kyoto, JP | &lt;a href="https://www.meetup.com/kansai-rust/"&gt;Kansai Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/kansai-rust/events/291614614/"&gt;&lt;strong&gt;Fn vs FnMut vs FnOnce&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-03-01 | Cologne, DE | &lt;a href="https://www.meetup.com/rustcologne/events"&gt;Rust Cologne&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustcologne/events/291774935/"&gt;&lt;strong&gt;Rust traits for Fn and profit&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-02 | Barcelona, ES | &lt;a href="https://bcnrust.github.io/"&gt;BcnRust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/es-ES/bcnrust/events/291754590/"&gt;&lt;strong&gt;9th BcnRust Meetup: Full Stack&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-02 | Wrocław, PL | &lt;a href="https://www.meetup.com/rust-wroclaw/"&gt;Rust Wrocław&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-wroclaw/events/291776357/"&gt;&lt;strong&gt;Rust Wrocław Meetup #32&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-07 | Bratislava, SK | &lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/"&gt;Bratislava Rust Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/events/291657555/"&gt;&lt;strong&gt;Rust Meetup by Sonalake&lt;/strong&gt;&lt;/a&gt;   &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Basel, CH | &lt;a href="https://www.meetup.com/rust-basel/"&gt;Rust Basel&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-basel/events/291228934/"&gt;&lt;strong&gt;Rust Meetup #7&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Delft, NL | &lt;a href="https://www.meetup.com/rust-nederland/"&gt;Rust Nederland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291401965/"&gt;&lt;strong&gt;Regular track: Embedded Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291401778/"&gt;&lt;strong&gt;Student track: Embedded Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Lyon, FR | &lt;a href="https://www.meetup.com/fr-FR/rust-lyon/"&gt;Rust Lyon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/fr-FR/rust-lyon/events/291727241/"&gt;&lt;strong&gt;Rust Lyon Meetup #2&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Nürnberg, DE | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/291623203/"&gt;&lt;strong&gt;Walk around Embedded World Exhibition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-17 | Stuttgart, DE | &lt;a href="https://www.meetup.com/rust-community-stuttgart"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/zmppzsyfcfbwb/"&gt;&lt;strong&gt;OnSite Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-28 | Zurich, CH | &lt;a href="https://www.meetup.com/de-DE/rust-zurich/events/291449557/"&gt;Rust Zurich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/rust-zurich/events/291449557/"&gt;&lt;strong&gt;High performance concurrent data structures in Rust - March Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-03-01 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/291619816/"&gt;&lt;strong&gt;Rust Lunch&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/rrwbctyfcfbmb/"&gt;&lt;strong&gt;Trails, Triumphs, &amp;amp; Travails of Yet-Another-Database-Crate with PJ and Food!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="oceania"&gt;&lt;a class="toclink" href="#oceania"&gt;Oceania&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-03-01 | Sydney, NSW, AU | &lt;a href="https://www.meetup.com/rust-sydney/"&gt;Rust Sydney&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-sydney/events/291265163/"&gt;&lt;strong&gt;🦀 Lightning Talks - We are back!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/10nmtew/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;You've probably come across unsafe. So "unsafe" is a keyword that sort of unlocks super powers and segfaults.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://fosdem.org/2023/schedule/event/rust_a_deep_dive_inside_the_rust_frontend_for_gcc/"&gt;Arthur Cohen during FOSDEM '23&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1375"&gt;blonk&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/11g1wkc/this_week_in_rust_484/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 01 Mar 2023 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2023-03-01:/blog/2023/03/01/this-week-in-rust-484/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 483</title><link>https://this-week-in-rust.org/blog/2023/02/22/this-week-in-rust-483/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on Twitter or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sessionize.com/rustconf-2023"&gt;RustConf 2023: Call for Proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="official"&gt;&lt;a class="toclink" href="#official"&gt;Official&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2023/02/14/lang-advisors.html"&gt;Language team advisors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2023/02/14/lang-team-membership-update.html"&gt;Welcome Tyler Mandry to the Rust language team!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2023/02/22/governance-reform-rfc.html"&gt;Governance Reform RFC Announcement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2023/02/20/changelog-169.html"&gt;rust-analyzer Changelog #169&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sysgo.com/press-releases/rust-now-available-for-real-time-operating-system-and-hypervisor-pikeos"&gt;Rust now available for Real-Time Operating System and Hypervisor PikeOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://relm4.org/blog/posts/announcing_relm4_v0.5"&gt;Announcing Relm4 v0.5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fornjot.app/blog/weekly-release/2023-w08/"&gt;Fornjot (code-first CAD in Rust) - Weekly Release - Accidental Side-Effect&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.warp.dev/blog/why-is-building-a-ui-in-rust-so-hard"&gt;Why is building a UI in Rust so hard?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://theincredibleholk.org/blog/2023/02/16/lightweight-predictable-async-send-bounds/"&gt;Lightweight, Predictable Async Send Bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smallcultfollowing.com/babysteps/blog/2023/02/13/return-type-notation-send-bounds-part-2/"&gt;Return type notation (send bounds, part 2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.shtsoft.eu/2022/12/22/effect-trait-dp.html"&gt;Faking Algebraic Effects and Handlers With Traits: A Rust Design Pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://epage.github.io/blog/2023/02/winnow-toml-edit-combine-nom/"&gt;winnow = toml_edit + combine + nom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.inovex.de/de/blog/rust-vs-go-vs-c-vs-kotlin/"&gt;Battle Of The Backends: Rust vs. Go vs. C# vs. Kotlin - inovex GmbH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://driftingin.space/posts/bull-case-for-rust-on-web"&gt;The Bull Case for Rust on the Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.propelauth.com/post/i-love-building-a-startup-in-rust-i-wouldnt-pick-it-again"&gt;I love building a startup in Rust. I wouldn't pick it again.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://manuel.bernhardt.io/posts/2022-11-04-rust-development-for-the-raspberry-pi-on-apple-silicon/"&gt;Rust development for the Raspberry PI on Apple Silicon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://joshmo.hashnode.dev/building-deploying-a-down-detector-telegram-bot-in-rust"&gt;Learn how to build and deploy a down detector Telegram bot in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://peace.mk/blog/compile-time-correctness-type-state/"&gt;Compile Time Correctness: Type State&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ardanlabs.com/blog/2023/02/build-a-casual-side-scroller-with-rust.html"&gt;Build a casual side scroller with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ybnesm.github.io/blah/articles/true-observer-pattern-rust/"&gt;True Observer Pattern with Unsubscribe mechanism using Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fettblog.eu/refactoring-rust-abstraction-newtype/"&gt;Refactoring in Rust: Abstraction with the Newtype Pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://surma.dev/things/rust-to-webassembly/"&gt;Rust to WebAssembly the hard way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/stm32f4-embedded-rust-at-the-pac-system-clock-configuration"&gt;STM32F4 Embedded Rust at the PAC: System Clock Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/quackquack/implement-base64-encoding-using-rust-part-1-base64-for-non-unicode-characters-4944"&gt;Implement base64 encoding using Rust - (Part 1) Base64 for non-unicode characters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/schultyy/how-to-build-a-simple-kafka-producerconsumer-application-in-rust-3pl4"&gt;Build a Apache Kafka Producer/Consumer Application in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/opendataanalytics/learning-rust-by-building-a-to-do-app-2okd"&gt;Learning Rust by Building a To-Do App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kurt2001/a-nibble-of-quadtrees-in-rust-4o7g"&gt;A Nibble of Quadtrees in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/cyrilmarpaud/embedded-rust-on-esp32c3-board-a-hands-on-quickstart-guide-28mf"&gt;Embedded Rust on ESP32C3 Board, a Hands-on Quickstart Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.riskpeep.com/2023/02/make-text-adventure-game-rust-10.html"&gt;How to make a Text Adventure game in Rust - X - More Attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://geeklaunch.io/blog/nothing-in-rust/"&gt;Nothing in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ES] &lt;a href="https://dev.to/retronauta/libro-the-rust-programming-language-ii-programming-a-guessing-game-8ni"&gt;Aprendiendo Rust 🦀️ II. Programming a guessing game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/YxG7PhZ3fb4"&gt;Speed up your Rust code with Rayon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/BWhe2UyJv1E"&gt;Making Custom Asset Types: Platformer In Bevy #4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rusty-ferris.pages.dev/blog/binary-tree-sum-of-values/"&gt;Implementing a Binary Tree in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://21-lessons.com/how-to-run-webassembly-from-your-rust-program/"&gt;Run WebAssembly from your Rust Program&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="research"&gt;&lt;a class="toclink" href="#research"&gt;Research&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2301.02308"&gt;The Usability of Advanced Type Systems: Rust as a Case Study&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;&lt;a class="toclink" href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/rust/2023/02/21/learn-rust-with-jetbrains-ides/"&gt;Learn Rust With JetBrains IDEs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://llogiq.github.io/2023/02/19/rhymes2.html"&gt;Rust in Rhymes II explainer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/lodestone/"&gt;Lodestone with Wilbur Zhang, Peter Jiang, and Kevin Huang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jetstack.io/blog/rust-nation-uk-2023/"&gt;Rust Nation UK 2023&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/Rustixir/darkbird"&gt;Darkbird&lt;/a&gt;, a high-concurrency real-time in-memory database.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1160"&gt;DanyalMh&lt;/a&gt; for the self-suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;&lt;a class="toclink" href="#call-for-participation"&gt;Call for Participation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/issues/2791"&gt;miri - Get Miri working on ARM again&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emanuele-em/man-in-the-middle-proxy/issues/9"&gt;man-in-the-middle-proxy - Add Custom headers requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4268"&gt;Ockam - Create clap command to delete a TCP Outlet on a node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4269"&gt;Ockam - Create clap command to delete a TCP Inlet on a node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4108"&gt;Ockam - Add a Github Action to avoid conflicts in TypeTag ids&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4307"&gt;Ockam - Remove the disable/enable_check_credential arguments from ockam tcp-outlet create&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4308"&gt;Ockam - Remove the disable/enable_check_credential arguments from ockam tcp-inlet create&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/4318"&gt;Ockam - Update ockam project addon configure influx-db clap command to ockam project addon configure influxdb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;396 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-02-13..2023-02-20"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108086"&gt;wasm: register the &lt;code&gt;relaxed-simd&lt;/code&gt; target feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107968"&gt;enable &lt;code&gt;#[thread_local]&lt;/code&gt; on armv6k-nintendo-3ds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106476"&gt;add sanitizer support for modern iOS platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99679"&gt;add &lt;code&gt;kernel-address&lt;/code&gt; sanitizer support for freestanding targets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108033"&gt;add an unstable &lt;code&gt;#[rustc_coinductive]&lt;/code&gt; attribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107985"&gt;added another error to be processed in fallback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107867"&gt;check that built-in callable types validate their output type is &lt;code&gt;Sized&lt;/code&gt; (in new solver)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107489"&gt;implement partial support for non-lifetime binders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108186"&gt;deny non-lifetime bound vars in &lt;code&gt;for&amp;lt;..&amp;gt; ||&lt;/code&gt; closure binders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107542"&gt;don't call &lt;code&gt;with_reveal_all_normalized&lt;/code&gt; in const-eval when &lt;code&gt;param_env&lt;/code&gt; has inference vars in it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108162"&gt;don't eagerly convert principal to string&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108031"&gt;don't recover lifetimes/labels containing emojis as character literals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108049"&gt;don't suggest &lt;code&gt;#[doc(hidden)]&lt;/code&gt; trait methods with matching return type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107921"&gt;make codegen choose whether to emit overflow checks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108203"&gt;fix RPITITs in default trait methods (by assuming projection predicates in param-env)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107766"&gt;fix json reexports of different items with same name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107902"&gt;improve the suggestion on future not awaited&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103695"&gt;unexpected trait bound not satisfied in HRTB and Associated Type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107772"&gt;make &lt;code&gt;dyn*&lt;/code&gt;'s value backend type a pointer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106347"&gt;more accurate spans for arg removal suggestion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107449"&gt;enable CopyProp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105274"&gt;enable instcombine for mutable reborrows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107833"&gt;factor query arena allocation out from query caches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108006"&gt;avoid accessing HIR when it can be avoided&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107329"&gt;optimize &lt;code&gt;LazyLock&lt;/code&gt; size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108020"&gt;optimize &lt;code&gt;mk_region&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108057"&gt;prevent some attributes from being merged with others on reexports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101841"&gt;remove save-analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105300"&gt;rework &lt;code&gt;min_choice&lt;/code&gt; algorithm of member constraints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103478"&gt;suggest fix for misplaced generic params on fn item&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107173"&gt;suggest the correct array length on mismatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107942"&gt;tighter spans for bad inherent &lt;code&gt;impl&lt;/code&gt; self types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105961"&gt;type-directed probing for inherent associated types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108007"&gt;use &lt;code&gt;is_str&lt;/code&gt; instead of string kind comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108047"&gt;use &lt;code&gt;target&lt;/code&gt; instead of &lt;code&gt;machine&lt;/code&gt; for mir interpreter integer handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107969"&gt;use covariance on type relations of field projection types if possible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108040"&gt;use derive attributes for uninteresting traversals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106372"&gt;use id-based thread parking on SOLID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108200"&gt;use restricted Damerau-Levenshtein distance for diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107940"&gt;use semantic equality for const param type equality assertion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108084"&gt;constify &lt;code&gt;RangeBounds&lt;/code&gt;, &lt;code&gt;RangeX::contains&lt;/code&gt; and &lt;code&gt;RangeX::is_empty&lt;/code&gt; (where applicable)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106241"&gt;implement more methods for &lt;code&gt;vec_deque::IntoIter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108235"&gt;use custom implementation of &lt;code&gt;read_buf&lt;/code&gt; in Read for &amp;amp;'a FileDesc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2710"&gt;futures: add &lt;code&gt;AbortHandle::is_aborted()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11740"&gt;cargo: enhance help texts of position args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106316"&gt;only include stable lints in &lt;code&gt;rustdoc::all&lt;/code&gt; group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107765"&gt;rustdoc: perform name resolver cleanups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108129"&gt;rustdoc: correctly handle links starting with whitespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/108209"&gt;rustdoc: cleanup doc link extraction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt/pull/5692"&gt;rustfmt: use correct span for struct generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-bindgen/pull/2415"&gt;bindgen: add support for enums with the wrapped static functions feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10356"&gt;clippy: add &lt;code&gt;let_underscore_untyped&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10342"&gt;clippy: add &lt;code&gt;question_mark_used&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10360"&gt;clippy: add the &lt;code&gt;transmute_int_to_non_zero&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10163"&gt;clippy: add &lt;code&gt;significant_drop_tightening&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10368"&gt;clippy: &lt;code&gt;significant_drop_tightening&lt;/code&gt;: evaluate the return expression of a block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10363"&gt;clippy: &lt;code&gt;significant_drop_tightening&lt;/code&gt;: ignore inexpensive statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10321"&gt;clippy: fix false positives for &lt;code&gt;extra_unused_type_parameters&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10361"&gt;clippy: stop &lt;code&gt;bytes_nth&lt;/code&gt; from suggesting code that does not compile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10357"&gt;clippy: stop &lt;code&gt;doc_markdown&lt;/code&gt; requiring backticks on links to external websites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10382"&gt;clippy: &lt;code&gt;box_default&lt;/code&gt;: don't omit the type of the removed trait object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10336"&gt;clippy: &lt;code&gt;manual_let_else&lt;/code&gt;: do not suggest semantically different replacements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10332"&gt;clippy: &lt;code&gt;manual_let_else&lt;/code&gt;: let/else is not divergent by default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10311"&gt;clippy: &lt;code&gt;never_loop&lt;/code&gt; Fix false positive with labeled blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10343"&gt;clippy: &lt;code&gt;uninlined_format_args&lt;/code&gt;: do not inline argument with generic parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10353"&gt;clippy: change &lt;code&gt;unusual_byte_groupings&lt;/code&gt; to only require byte groupings of equal size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10346"&gt;clippy: do not base &lt;code&gt;map_entry&lt;/code&gt; lint suggestion on expanded code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10345"&gt;clippy: fix &lt;code&gt;needless_return&lt;/code&gt; incorrect suggestion when returning if sequence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10338"&gt;clippy: ignore synthetic type parameters for &lt;code&gt;extra_unused_type_parameters&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10328"&gt;clippy: liberate late-bound regions rather than erasing them in &lt;code&gt;needless_pass_by_value&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14153"&gt;rust-analyzer: add v7 metadata support to rust-analyzer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14147"&gt;rust-analyzer: don't assume VSCode internal commands in the server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14141"&gt;rust-analyzer: support UTF-32 position encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14157"&gt;rust-analyzer: adjust binding mode inlay hints to render better with @ patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14160"&gt;rust-analyzer: bring back hovering call parens for return type info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14122"&gt;rust-analyzer: don't expand macros in the same expansion tree after overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14123"&gt;rust-analyzer: don't trigger postfix completion in &lt;code&gt;if&lt;/code&gt; block which has an &lt;code&gt;else&lt;/code&gt; block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14144"&gt;rust-analyzer: search raw identifiers without prefix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14149"&gt;rust-analyzer: trigger call info for more completions of signature having things&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Overall a fairly positive week, with few noise-related regressions or
improvements and many benchmarks showing significant improvements. The one
large regression is limited to documentation builds and has at least a partial
fix already planned.&lt;/p&gt;
&lt;p&gt;Other wins this week include an average &lt;a href="https://perf.rust-lang.org/?start=9bb6e60d1f1360234aae90c97964c0fa5524f141&amp;amp;end=3fee48c161a48b0c142d3998fff56faee96bd56c&amp;amp;absolute=false&amp;amp;stat=max-rss&amp;amp;kind=percentfromfirst"&gt;improvement&lt;/a&gt; of around 1% in
maximum memory usage of optimized builds, and a 2% average &lt;a href="https://perf.rust-lang.org/?start=9bb6e60d1f1360234aae90c97964c0fa5524f141&amp;amp;end=3fee48c161a48b0c142d3998fff56faee96bd56c&amp;amp;absolute=false&amp;amp;stat=size%3Alinked_artifact&amp;amp;kind=percentfromfirst"&gt;reduction&lt;/a&gt;
in compiled binary sizes. These are fairly significant wins for these metrics.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@simulacrum&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=9bb6e60d1f1360234aae90c97964c0fa5524f141&amp;amp;end=3fee48c161a48b0c142d3998fff56faee96bd56c&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;9bb6e60..3fee48c1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3 Regressions, 3 Improvements, 3 Mixed; 2 of them in rollups
45 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-02-21.md"&gt;Full report&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/108143"&gt;rustdoc: search by macro when query ends with &lt;code&gt;!&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/103682"&gt;Stabilize rustdoc &lt;code&gt;--test-run-directory&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/107941"&gt;Treat &lt;code&gt;str&lt;/code&gt; as containing &lt;code&gt;[u8]&lt;/code&gt; for auto trait purposes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3390"&gt;Stabilize may_dangle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3389"&gt;Add a &lt;code&gt;[lints]&lt;/code&gt; table to &lt;code&gt;Cargo.toml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="call-for-testing"&gt;&lt;a class="toclink" href="#call-for-testing"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2023-02-22 - 2023-03-22 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-23 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/291248593/"&gt;&lt;strong&gt;Tock, a Rust based Embedded Operating System&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-23 | Virtual (Kassel, DE) | &lt;a href="https://www.meetup.com/java-user-group-hessen-jugh/"&gt;Java User Group Hessen&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/java-user-group-hessen-jugh/events/290346591/"&gt;&lt;strong&gt;Eine Einführung in Rust (Stefan Baumgartner)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-23 | Virtual (México City, MX) | &lt;a href="https://www.meetup.com/rust-mx/"&gt;Rust MX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-mx/events/291456677/"&gt;&lt;strong&gt;Rust: ¿por qué es una opción adecuada para implantar Blockchain?&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-24 | Virtual (Tunis, TN) | &lt;a href="https://www.meetup.com/rust-tunisia/"&gt;Rust Meetup Tunisia&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-tunisia/events/291534817/"&gt;&lt;strong&gt;Rust Meetup Tunisia - Volume I, Number II&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;Open Tech School Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/290852327/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/291338734/"&gt;&lt;strong&gt;Rust Nation - What we learnt&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsyfcdblc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Virtual (Munich, DE) | &lt;a href="https://www.meetup.com/rust-munich/"&gt;Rust Munich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-munich/events/291437669/"&gt;&lt;strong&gt;Rust Munich 2023 / 1 - hybrid&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-01 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsyfcfbcb/"&gt;&lt;strong&gt;Indy.rs - Michael Baykov on Category Theory &amp;amp; Argument Parsing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-02 | Virtual (Linz, AT) | &lt;a href="https://www.meetup.com/rust-linz/"&gt;Rust Linz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-linz/events/291483339/"&gt;&lt;strong&gt;Rust Meetup Linz - 30th Edition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-07 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/lsjbbtyfcfbkb/"&gt;&lt;strong&gt;First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-08 | Virtual (Boulder, CO, US) | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/zvxcsryfcfblb/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-11 | Virtual | &lt;a href="https://discord.gg/yNtPTb2"&gt;Rust GameDev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/yNtPTb2"&gt;&lt;strong&gt;Rust GameDev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-14 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;Berlin.rs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://berline.rs/2023/03/14/rust-hack-and-learn.html"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/291354288/"&gt;&lt;strong&gt;Injecting Rust Hooks into a 1999 game binary (unsafe)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/wqchctyfcfbtb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-21 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/vdhxgsyfcfbcc/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;&lt;a class="toclink" href="#asia"&gt;Asia&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-03-04 | Kyoto, JP | &lt;a href="https://www.meetup.com/kansai-rust/"&gt;Kansai Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/kansai-rust/events/291614614/"&gt;&lt;strong&gt;Fn vs FnMut vs FnOnce&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-23 | Bordeaux, FR | &lt;a href="https://www.meetup.com/dedotalk/"&gt;DedoTalk&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dedotalk/events/291199962/"&gt;&lt;strong&gt;#1 DedoTalk 🎙️ : Rust pour un développeur Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-23 | Copenhagen, DK | &lt;a href="https://www.meetup.com/copenhagen-rust-community"&gt;Copenhagen Rust Community&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-community/events/291288154/"&gt;&lt;strong&gt;Rust metup #33&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-23 | Vienna, AT | &lt;a href="https://www.meetup.com/rust-vienna"&gt;Rust Vienna&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-vienna/events/291465732/"&gt;&lt;strong&gt;Rust Meetup Revived with an Exciting Exploration of Ownership!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Munich, DE + Virtual | &lt;a href="https://www.meetup.com/rust-munich/"&gt;Rust Munich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-munich/events/291437669/"&gt;&lt;strong&gt;Rust Munich 2023 / 1 - hybrid&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Nijmegen, NL | &lt;a href="https://www.meetup.com/rust-nederland/"&gt;Rust Nederland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291489123/"&gt;&lt;strong&gt;Regular track: Rust at RU&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291488539/"&gt;&lt;strong&gt;Student track: Rust at RU&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-01 | Cologne, DE | &lt;a href="https://www.meetup.com/rustcologne/events"&gt;Rust Cologne&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustcologne/events/291774935/"&gt;&lt;strong&gt;Rust traits for Fn and profit&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-02 | Barcelona, ES | &lt;a href="https://bcnrust.github.io/"&gt;BcnRust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/es-ES/bcnrust/events/291754590/"&gt;&lt;strong&gt;9th BcnRust Meetup: Full Stack&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-02 | Wrocław, PL | &lt;a href="https://www.meetup.com/rust-wroclaw/"&gt;Rust Wrocław&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-wroclaw/events/291776357/"&gt;&lt;strong&gt;Rust Wrocław Meetup #32&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-07 | Bratislava, SK | &lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/"&gt;Bratislava Rust Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/events/291657555/"&gt;&lt;strong&gt;Rust Meetup by Sonalake&lt;/strong&gt;&lt;/a&gt;   &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Basel, CH | &lt;a href="https://www.meetup.com/rust-basel/"&gt;Rust Basel&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-basel/events/291228934/"&gt;&lt;strong&gt;Rust Meetup #7&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Delft, NL | &lt;a href="https://www.meetup.com/rust-nederland/"&gt;Rust Nederland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291401965/"&gt;&lt;strong&gt;Regular track: Embedded Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291401778/"&gt;&lt;strong&gt;Student track: Embedded Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Lyon, FR | &lt;a href="https://www.meetup.com/fr-FR/rust-lyon/"&gt;Rust Lyon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/fr-FR/rust-lyon/events/291727241/"&gt;&lt;strong&gt;Rust Lyon Meetup #2&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Nürnberg, DE | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/291623203/"&gt;&lt;strong&gt;Walk around Embedded World Exhibition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-23 | Mountain View, CA, US | &lt;a href="https://www.meetup.com/rust-study-group/"&gt;Mountain View Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-study-group/events/291623636/"&gt;&lt;strong&gt;Rust Meetup at Hacker Dojo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-01 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/291619816/"&gt;&lt;strong&gt;Rust Lunch&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/rrwbctyfcfbmb/"&gt;&lt;strong&gt;Trails, Triumphs, &amp;amp; Travails of Yet-Another-Database-Crate with PJ and Food!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="oceania"&gt;&lt;a class="toclink" href="#oceania"&gt;Oceania&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-23 | Brisbane, QLD, AU | &lt;a href="https://www.meetup.com/rust-brisbane/"&gt;Rust Brisbane&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-brisbane/events/291377036/"&gt;&lt;strong&gt;February Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Canberra, ACT, AU | &lt;a href="https://www.meetup.com/rust-canberra/"&gt;Canberra Rust User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-canberra/events/291278417/"&gt;&lt;strong&gt;February Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-01 | Sydney, NSW, AU | &lt;a href="https://www.meetup.com/rust-sydney/"&gt;Rust Sydney&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-sydney/events/291265163/"&gt;&lt;strong&gt;🦀 Lightning Talks - We are back!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="south-america"&gt;&lt;a class="toclink" href="#south-america"&gt;South America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-22 | Montevideo, UY | &lt;a href="https://www.meetup.com/rust-uruguay/"&gt;Rust Meetup Uruguay&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-uruguay/events/291386143/"&gt;&lt;strong&gt;Hands on: Lifetimes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/10nmtew/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s &lt;em&gt;enjoyable&lt;/em&gt; to write Rust, which is maybe kind of weird to say, but it’s just the language is fantastic. It’s fun. You feel like a magician, and that never happens in other languages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://www.technologyreview.com/2023/02/14/1067869/rust-worlds-fastest-growing-programming-language/"&gt;Parker Timmerman cited in a TechnologyReview article&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1373"&gt;robin&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/119s0gv/this_week_in_rust_483/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 22 Feb 2023 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2023-02-22:/blog/2023/02/22/this-week-in-rust-483/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 482</title><link>https://this-week-in-rust.org/blog/2023/02/15/this-week-in-rust-482/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on Twitter or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3 id="newsletters"&gt;&lt;a class="toclink" href="#newsletters"&gt;Newsletters&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rustnigeria.curated.co/issues/14#start"&gt;Rust Nigeria #14&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.fornjot.app/blog/weekly-release/2023-w07/"&gt;Fornjot (code-first CAD in Rust) - Weekly Release - Really Shouldn't Be That Hard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gtk-rs.org/blog/2023/02/10/new-release.html"&gt;New release – gtk-rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2023/02/13/changelog-168.html"&gt;rust-analyzer changelog #168&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2023/02/13/changelog-188.html"&gt;IntelliJ Rust Changelog #188&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meilisearch/meilisearch/releases/tag/v1.0.0/"&gt;Meilisearch releases v1.0, the first completely stable version of its open-source search engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenoh.io/blog/2023-02-10-zenoh-flow/"&gt;Zenoh-Flow a Rust-based data-flow programming framework build on Zenoh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/greyblake/nutype"&gt;Nutype - the newtype with guarantees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lpalmieri.com/posts/pavex-progress-report-01/"&gt;pavex, a new Rust web framework - Progress report #1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.technologyreview.com/2023/02/14/1067869/rust-worlds-fastest-growing-programming-language/"&gt;How Rust went from a side project to the world’s most-loved programming language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/the-bottom-emoji-breaks-rust-analyzer"&gt;The bottom emoji breaks rust-analyzer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://surma.dev/things/rust-to-webassembly/index.html"&gt;Rust to WebAssembly the hard way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mattpo.pe/posts/from-erlang-to-lunatic/"&gt;From Erlang to Lunatic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/stm32f4-embedded-rust-at-the-pac-gpio-control"&gt;STM32F4 Embedded Rust at the PAC: GPIO Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://burn-rs.github.io/blog/a-case-for-rust-in-deep-learning"&gt;A Case for Rust in Deep Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/en/blog/85/trustzone-trials-tribulations"&gt;TrustZone, trials and tribulations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=-UEyf1li1A4"&gt;Rust Releases! 1.67.0 &amp;amp; 1.67.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hegdenu.net/posts/track-caller/"&gt;Everything you didn't need to know about &lt;code&gt;#[track_caller]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=YnmBotet6_M"&gt;Build and deploy a Wasm smart contract with Rust-based language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=Ph7xHhBfH0w"&gt;Write better parsers with nom_supreme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;&lt;a class="toclink" href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=zGS-HqcAvA4"&gt;From cargo to crates.io and back again&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://m.youtube.com/live/_qUcEOQJByU?feature=share"&gt;Functional correctness with refinement types for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/aurimas-blazulionis/"&gt;Rust ABI with Aurimas Blažulionis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/rust-1.65-1.66-1.67/"&gt;What's New in Rust 1.65, 1.66, and 1.67&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://opensourcesecuritypodcast.libsyn.com/episode-362-a-lesson-in-rust-from-carol-nichols"&gt;Open Source Security Podcast: A lesson in Rust from Carol Nichols&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/sysid/bkmr"&gt;bkmr&lt;/a&gt;, a fast CLI bookmark manager and launcher.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1159"&gt;sysid&lt;/a&gt; for the self-suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;&lt;a class="toclink" href="#call-for-participation"&gt;Call for Participation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitlab.gnome.org/World/warp/-/issues/39"&gt;warp - [Windows] locale and installer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emanuele-em/man-in-the-middle-proxy/issues/5"&gt;man-in-the-middle-proxy - custom certificate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emanuele-em/man-in-the-middle-proxy/issues/6"&gt;man-in-the-middle-proxy - Filter request by method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emanuele-em/man-in-the-middle-proxy/issues/7"&gt;man-in-the-middle-proxy - Request duplication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emanuele-em/man-in-the-middle-proxy/issues/8"&gt;man-in-the-middle-proxy - Delete single request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emanuele-em/man-in-the-middle-proxy/issues/9"&gt;man-in-the-middle-proxy - modify request with custom fields and headers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;387 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2023-02-06..2023-02-13"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102963"&gt;add &lt;code&gt;-Z instrument-xray&lt;/code&gt; flag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106938"&gt;add missing normalization for union fields types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107657"&gt;add only modified subcommand for compiletest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105019"&gt;add parentheses properly for borrowing suggestion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107863"&gt;allow multiple candidates with same response in new solver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107866"&gt;allow wasi-libc to initialize its environment variables lazily&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107789"&gt;avoid exposing type parameters and implementation details sourced from macro expansions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107815"&gt;disqualify &lt;code&gt;auto trait&lt;/code&gt; built-in impl in new solver if explicit &lt;code&gt;impl&lt;/code&gt; exists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107803"&gt;do not bring trait alias supertraits into scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107813"&gt;do not eagerly recover for bad &lt;code&gt;impl Trait&lt;/code&gt; types in macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105601"&gt;enable new rlib in non stable cases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101680"&gt;fix implied outlives bounds logic for projections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107671"&gt;fix suggestions rendering when the diff span is multiline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107507"&gt;implement &lt;code&gt;deferred_projection_equality&lt;/code&gt; for erica solver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107838"&gt;introduce &lt;code&gt;-Zterminal-urls&lt;/code&gt; to use OSC8 for error codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106180"&gt;make &amp;amp;mut !Unpin not dereferenceable, and &lt;code&gt;Box&amp;lt;!Unpin&amp;gt;&lt;/code&gt; not noalias&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107777"&gt;make &lt;code&gt;derive_const&lt;/code&gt; derive properly const-if-const impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107706"&gt;mark &lt;code&gt;'atomic_mut_ptr'&lt;/code&gt; methods const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85158"&gt;mir-Opt for copying enums with large discrepancies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107717"&gt;optimize &lt;code&gt;TyKind::eq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107529"&gt;optimize &lt;code&gt;query_cache_hit&lt;/code&gt; to reduce code size of the query hot path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107869"&gt;reduce interning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107167"&gt;simplify layout calculations in rawvec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107098"&gt;suggest function call on pattern type mismatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107043"&gt;support &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; as boolean flag params&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107662"&gt;turn projections into copies in &lt;code&gt;CopyProp&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107648"&gt;unused-lifetimes: don't warn about lifetimes originating from expanded code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107317"&gt;implement &lt;code&gt;AsFd&lt;/code&gt; and &lt;code&gt;AsRawFd&lt;/code&gt; for &lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/105641"&gt;implement cursors for BTreeMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107634"&gt;improve the &lt;code&gt;array::map&lt;/code&gt; codegen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107191"&gt;reverse Timsort scan direction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107894"&gt;speedup heapsort by 1.5x by making it branchless&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/107429"&gt;stabilize feature &lt;code&gt;cstr_from_bytes_until_nul&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106001"&gt;stop at the first &lt;code&gt;NULL&lt;/code&gt; argument when iterating &lt;code&gt;argv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11694"&gt;cargo: &lt;code&gt;-Zrustdoc-scrape-example&lt;/code&gt; must fail with bad build script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10952"&gt;cargo: add '-C' flag for changing current dir before build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11700"&gt;cargo: re-export &lt;code&gt;cargo_new::NewProjectKind&lt;/code&gt; as public&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10310"&gt;clippy: make &lt;code&gt;arithmetic_side_effects&lt;/code&gt; mind constant items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10330"&gt;clippy: &lt;code&gt;cast_possible_truncation&lt;/code&gt;: issue proper help message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10295"&gt;clippy: &lt;code&gt;suspicious_to_owned&lt;/code&gt;: use &lt;code&gt;span_suggestions&lt;/code&gt; to suggest both intents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10317"&gt;clippy: add &lt;code&gt;suspicious_command_arg_space&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10177"&gt;clippy: &lt;code&gt;almost_swapped&lt;/code&gt;: detect almost-swaps using &lt;code&gt;let&lt;/code&gt; statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/10293"&gt;clippy: negate suggestions when needed in &lt;code&gt;bool_assert_comparison&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13991"&gt;rust-analyzer: add braces assist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14095"&gt;rust-analyzer: add postfix completion for &lt;code&gt;unsafe&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13986"&gt;rust-analyzer: add setting for limiting number of completions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14127"&gt;rust-analyzer: build &lt;code&gt;i686-pc-windows-msvc&lt;/code&gt; binaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14138"&gt;rust-analyzer: don't include &lt;code&gt;r#&lt;/code&gt; prefix in filesystem changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14103"&gt;rust-analyzer: don't insert a semicolon when typing = if parse errors are encountered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14125"&gt;rust-analyzer: fix bind pat inlay hints rendering for constant patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14110"&gt;rust-analyzer: fix completions after functions with no bodies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14084"&gt;rust-analyzer: fix parsing of nested tuple field accesses in a cursed way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14140"&gt;rust-analyzer: fix proc-macro-server incorrectly stripping delimiters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14114"&gt;rust-analyzer: insert spaces when inlining macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14099"&gt;rust-analyzer: properly use location links for type hints of impl Future and its assoc type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13975"&gt;rust-analyzer: suppress extra indent after the end of field and function chains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/14098"&gt;rust-analyzer: support &lt;code&gt;DidChangeWorkspaceFolders&lt;/code&gt; notifications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Overall a good week for performance with 77 real world crates benchmarks showing an average of nearly 1% performance improvement. Unfortunately, the largest regressions are not yet fully understood and require additional investigation. Of particular interest were some large improvements in doc builds due to storing additional metadata. However, this change might cause some crates to compile slightly slower in incremental check builds, but this is still being investigated.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=e4dd9edb76a34ecbca539967f9662b8c0cc9c7fb&amp;amp;end=9bb6e60d1f1360234aae90c97964c0fa5524f141&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;e4dd9edb..9bb6e60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;(instructions:u)&lt;/th&gt;
&lt;th align="center"&gt;mean&lt;/th&gt;
&lt;th align="center"&gt;range&lt;/th&gt;
&lt;th align="center"&gt;count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;1.4%&lt;/td&gt;
&lt;td align="center"&gt;[0.4%, 11.0%]&lt;/td&gt;
&lt;td align="center"&gt;13&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;0.8%&lt;/td&gt;
&lt;td align="center"&gt;[0.2%, 1.6%]&lt;/td&gt;
&lt;td align="center"&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;-1.4%&lt;/td&gt;
&lt;td align="center"&gt;[-7.9%, -0.3%]&lt;/td&gt;
&lt;td align="center"&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-2.1%&lt;/td&gt;
&lt;td align="center"&gt;[-5.6%, -0.3%]&lt;/td&gt;
&lt;td align="center"&gt;73&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;All ❌✅ (primary)&lt;/td&gt;
&lt;td align="center"&gt;-0.9%&lt;/td&gt;
&lt;td align="center"&gt;[-7.9%, 11.0%]&lt;/td&gt;
&lt;td align="center"&gt;77&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;3 Regressions, 4 Improvements, 9 Mixed; 4 of them in rollups
46 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2023-02-14.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/89058"&gt;Drop support for FreeBSD 10 and 11 from std&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/106774"&gt;Stabilize cmpxchg16b_target_feature&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No New or Updated RFCs were created this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="call-for-testing"&gt;&lt;a class="toclink" href="#call-for-testing"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2023-02-15 - 2023-03-15 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-15 | Virtual | &lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mongodb.com/webinar/write-a-microservice-with-rust-and-mongodb"&gt;&lt;strong&gt;Write a Microservice With Rust and MongoDB&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-15 | Virtual (Redmond, WA, US; New York, NY, US; San Francisco, CA, US; São Paulo, BR) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/"&gt;Microsoft Rector New York&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/"&gt;Microsoft Reactor San Francisco&lt;/a&gt; and &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo"&gt;Microsoft Reactor São Paulo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224624/"&gt;&lt;strong&gt;Primeros pasos con Rust: QA y horas de comunidad&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/290224624/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/290224621/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-sao-paulo/events/290224623/"&gt;&lt;strong&gt;São Paulo Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-15 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/tqvhxsyfcdbtb/"&gt;&lt;strong&gt;Show &amp;amp; Tell: Rust state machines in a file processor&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-16 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/qtvtvsyfcdbvb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-21 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/vdhxgsyfcdbcc/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-23 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/291248593/"&gt;&lt;strong&gt;Tock, a Rust based Embedded Operating System&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-23 | Virtual (Kassel, DE) | &lt;a href="https://www.meetup.com/java-user-group-hessen-jugh/"&gt;Java User Group Hessen&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/java-user-group-hessen-jugh/events/290346591/"&gt;&lt;strong&gt;Eine Einführung in Rust (Stefan Baumgartner)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-23 | Virtual (México City, MX) | &lt;a href="https://www.meetup.com/rust-mx/"&gt;Rust MX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-mx/events/291456677/"&gt;&lt;strong&gt;Rust: ¿por qué es una opción adecuada para implantar Blockchain?&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-24 | Virtual (Tunis, TN) | &lt;a href="https://www.meetup.com/rust-tunisia/"&gt;Rust Meetup Tunisia&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-tunisia/events/291534817/"&gt;&lt;strong&gt;Rust Meetup Tunisia - Volume I, Number II&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;Open Tech School Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/290852327/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/291338734/"&gt;&lt;strong&gt;Rust Nation - What we learnt&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsyfcdblc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Virtual (Munich, DE) | &lt;a href="https://www.meetup.com/rust-munich/"&gt;Rust Munich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-munich/events/291437669/"&gt;&lt;strong&gt;Rust Munich 2023 / 1 - hybrid&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-01 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsyfcfbcb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-02 | Virtual (Linz, AT) | &lt;a href="https://www.meetup.com/rust-linz/"&gt;Rust Linz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-linz/events/291483339/"&gt;&lt;strong&gt;Rust Meetup Linz - 30th Edition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-07 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/lsjbbtyfcfbkb/"&gt;&lt;strong&gt;First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-08 | Virtual (Boulder, CO, US) | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/zvxcsryfcfblb/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-11 | Virtual | &lt;a href="https://discord.gg/yNtPTb2"&gt;Rust GameDev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/yNtPTb2"&gt;&lt;strong&gt;Rust GameDev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-14 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;Berlin.rs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://berline.rs/2023/03/14/rust-hack-and-learn.html"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/291354288/"&gt;&lt;strong&gt;Injecting Rust Hooks into a 1999 game binary (unsafe)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;&lt;a class="toclink" href="#asia"&gt;Asia&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-20 | Tel Aviv, IL | &lt;a href="https://www.meetup.com/rust-tlv/"&gt;Rust TLV&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-tlv/events/291182881/"&gt;&lt;strong&gt;February Edition - Redis and BioCatch talking Rust!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-04 | Kyoto, JP | &lt;a href="https://www.meetup.com/kansai-rust/"&gt;Kansai Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/kansai-rust/events/291614614/"&gt;&lt;strong&gt;Fn vs FnMut vs FnOnce&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-15 | London, UK | &lt;a href="https://www.meetup.com/rust-london-user-group/"&gt;Rust London User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-london-user-group/events/290903823/"&gt;&lt;strong&gt;Rust Nation Pre-Conference Reception with The Rust Foundation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-15 | Trondheim, NO | &lt;a href="https://www.meetup.com/rust-trondheim"&gt;Rust Trondheim&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-trondheim/events/290889889/"&gt;&lt;strong&gt;Rust New Year's Resolution Bug Hunt&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-16, 2023-02-17 | London, UK | &lt;a href="https://www.rustnationuk.com/"&gt;Rust Nation UK&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.rustnationuk.com/"&gt;&lt;strong&gt;Rust Nation '23&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-18 | London, UK | &lt;a href="https://www.meetup.com/rust-london-user-group/"&gt;Rust London User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-london-user-group/events/291297886/"&gt;&lt;strong&gt;Post-Conference Rust in Enterprise Brunch Hosted at Red Badger&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-21 | Paris, FR | &lt;a href="https://www.meetup.com/rust-paris/"&gt;Rust Paris&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-paris/events/291334081/"&gt;&lt;strong&gt;Rust Paris meetup #56&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-21 | Zurich, CH | &lt;a href="https://www.meetup.com/rust-zurich/"&gt;Rust Zurich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/rust-zurich/events/290915075/"&gt;&lt;strong&gt;Practical Cryptography - February Meetup (Registration opens 7 Feb 2023)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-23 | Bordeaux, FR | &lt;a href="https://www.meetup.com/dedotalk/"&gt;DedoTalk&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dedotalk/events/291199962/"&gt;&lt;strong&gt;#1 DedoTalk 🎙️ : Rust pour un développeur Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-23 | Copenhagen, DK | &lt;a href="https://www.meetup.com/copenhagen-rust-community"&gt;Copenhagen Rust Community&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-community/events/291288154/"&gt;&lt;strong&gt;Rust metup #33&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-23 | Vienna, AT | &lt;a href="https://www.meetup.com/rust-vienna"&gt;Rust Vienna&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-vienna/events/291465732/"&gt;&lt;strong&gt;Rust Meetup Revived with an Exciting Exploration of Ownership!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Munich, DE + Virtual | &lt;a href="https://www.meetup.com/rust-munich/"&gt;Rust Munich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-munich/events/291437669/"&gt;&lt;strong&gt;Rust Munich 2023 / 1 - hybrid&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Nijmegen, NL | &lt;a href="https://www.meetup.com/rust-nederland/"&gt;Rust Nederland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291489123/"&gt;&lt;strong&gt;Regular track: Rust at RU&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291488539/"&gt;&lt;strong&gt;Student track: Rust at RU&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Basel, CH | &lt;a href="https://www.meetup.com/rust-basel/"&gt;Rust Basel&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-basel/events/291228934/"&gt;&lt;strong&gt;Rust Meetup #7&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Delft, NL | &lt;a href="https://www.meetup.com/rust-nederland/"&gt;Rust Nederland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291401965/"&gt;&lt;strong&gt;Regular track: Embedded Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/291401778/"&gt;&lt;strong&gt;Student track: Embedded Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-15 | Nürnberg, DE | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/291623203/"&gt;&lt;strong&gt;Walk around Embedded World Exhibition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-21 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/rwvwzsyfcdbcc/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-23 | Mountain View, CA, US | &lt;a href="https://www.meetup.com/rust-study-group/"&gt;Mountain View Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-study-group/events/291623636/"&gt;&lt;strong&gt;Rust Study Group at Hacker Dojo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-01 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/291619816/"&gt;&lt;strong&gt;Rust Lunch&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-09 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/rrwbctyfcfbmb/"&gt;&lt;strong&gt;Upcoming Event&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="oceania"&gt;&lt;a class="toclink" href="#oceania"&gt;Oceania&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-23 | Brisbane, QLD, AU | &lt;a href="https://www.meetup.com/rust-brisbane/"&gt;Rust Brisbane&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-brisbane/events/291377036/"&gt;&lt;strong&gt;February Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-02-28 | Canberra, ACT, AU | &lt;a href="https://www.meetup.com/rust-canberra/"&gt;Canberra Rust User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-canberra/events/291278417/"&gt;&lt;strong&gt;February Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2023-03-01 | Sydney, NSW, AU | &lt;a href="https://www.meetup.com/rust-sydney/"&gt;Rust Sydney&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-sydney/events/291265163/"&gt;&lt;strong&gt;🦀 Lightning Talks - We are back!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="south-america"&gt;&lt;a class="toclink" href="#south-america"&gt;South America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2023-02-22 | Montevideo, UY | &lt;a href="https://www.meetup.com/rust-uruguay/"&gt;Rust Meetup Uruguay&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-uruguay/events/291386143/"&gt;&lt;strong&gt;Hands on: Lifetimes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/10nmtew/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;All the pro C/C++ arguments seem to come down to "Good drivers don’t need seat belts because they don’t get in accidents"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://www.reddit.com/r/rust/comments/10rnymj/comment/j6x90x5"&gt;otwkme on /r/rust&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/113dwhu/this_week_in_rust_482/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 15 Feb 2023 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2023-02-15:/blog/2023/02/15/this-week-in-rust-482/</guid><category>This Week in Rust</category></item></channel></rss>