<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>This Week in Rust</title><link>https://this-week-in-rust.org/</link><description></description><atom:link href="https://this-week-in-rust.org/feeds/twir-contributors.rss.xml" rel="self"></atom:link><lastBuildDate>Tue, 11 Aug 2020 00:00:00 -0400</lastBuildDate><item><title>This Week in Rust 351</title><link>https://this-week-in-rust.org/blog/2020/08/11/this-week-in-rust-351/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://rustacean-station.org/episode/027-twir-351/"&gt;this week's &lt;em&gt;This Week in Rust Podcast&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;p&gt;No official Rust announcements this week! :)&lt;/p&gt;
&lt;h3 id="tooling"&gt;Tooling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/08/10/changelog-37.html"&gt;Rust Analyzer Changelog #37&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2020/08/10/changelog-128.html"&gt;IntelliJ Rust Changelog #128&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-gamedev.github.io/posts/newsletter-012/"&gt;This Month in Rust GameDev #12 - July 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustinblockchain.org/newsletters/2020-08-05-are-we-smart-contract-yet/"&gt;Rust in Blockchain #14 - Are We Smart (Contract) Yet?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://evrone.com/steve-klabnik-interview"&gt;Steve Klabnik Interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.vmsplice.net/2020/08/why-qemu-should-move-from-c-to-rust.html?m=1"&gt;Why QEMU should move from C to Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://john-millikin.com/first-impressions-of-rust"&gt;First Impressions of Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pieohpah/how-to-stick-with-rust-1gpf"&gt;How to Stick with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/blorente/why-learning-rust-is-great-as-a-second-language-5583"&gt;Why learning Rust is great...As a second language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://robert.ocallahan.org/2020/08/what-is-minimal-set-of-optimizations.html"&gt;What Is The Minimal Set Of Optimizations Needed For Zero-Cost Abstraction?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://without.boats/blog/propane/"&gt;Propane: an experimental generator syntax for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ES] &lt;a href="https://blog.categulario.tk/por-que-me-gusta-tanto-rust.html"&gt;¿Por qué me gusta tanto Rust?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-standard-rust"&gt;Learn Standard Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hashrust.com/blog/moves-copies-and-clones-in-rust/"&gt;Moves, copies and clones in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dygalo.dev/blog/rust-for-a-pythonista-2/"&gt;Rust for a Pythonista #2: Building a Rust crate for CSS inlining&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/surviving-rust-async-interfaces"&gt;Surviving Rust async interfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.x5ff.xyz/blog/async-tests-tokio-rust/"&gt;Two Easy Ways to Test Async Functions in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.philipdaniels.com/blog/2020/self-cloning-for-multiple-threads-in-rust/"&gt;Cloning yourself - a refactoring for thread-spawning Rust types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notes.iveselov.info/programming/allocation-api-and-allocators"&gt;Allocation API, allocators and virtual memory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://willcrichton.net/notes/type-safe-printf/"&gt;Variables and memory management in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ES] &lt;a href="https://emanuelpeg.blogspot.com/2020/08/polimorfismo-con-traits-en-rust.html#.Xy7c6ukK2fc.reddit"&gt;Polimorfismo con traits en Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PT] &lt;a href="https://dev.to/pehdepano/aprendendo-rust-06-controles-de-fluxo-4mff"&gt;Aprendendo Rust: 06 - Controles de fluxo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PT] &lt;a href="https://rodolfoghi.github.io/posts/meia-hora-aprendendo-rust-parte1/"&gt;Meia hora aprendendo Rust - Parte 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=b4mS5UPHh20"&gt;Crust of Rust: Channels&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-more-rust"&gt;Learn More Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.lpalmieri.com/posts/2020-08-09-zero-to-production-3-how-to-bootstrap-a-new-rust-web-api-from-scratch/"&gt;Zero To Production #3: How To Bootstrap A Rust Web API From Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cvpartner.com/blog/using-rust-lambdas-in-production"&gt;Using Rust Lambdas in Production&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/incorporate-postgres-with-rust/"&gt;Incorporate Postgres with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://onatm.dev/2020/08/10/let-s-implement-a-bloom-filter/"&gt;Let's implement a Bloom Filter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/paulkernfeld/contiguous-data-in-rust"&gt;A Guide to Contiguous Data in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.possiblerust.com/guide/inbound-outbound-ffi"&gt;Inbound &amp;amp; Outbound FFI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.secondstate.io/articles/deno-webassembly-rust-wasi/"&gt;Tutorial: Deno Apps with WebAssembly, Rust, and WASI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sheshbabu.com/posts/rust-wasm-yew-single-page-application/"&gt;Single Page Applications using Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://willcrichton.net/notes/type-safe-printf/"&gt;Implementing a Type-safe printf in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://benkonz.github.io/building-a-brainfuck-compiler-with-rust-and-llvm/"&gt;Building a Brainf*ck Compiler with Rust and LLVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.com/article/20/8/capsule-networking"&gt;Modernize network function development with this Rust-based framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/delta_maniac/lets-build-a-redditbot-to-curate-playlist-links-1k4o"&gt;Let's build a RedditBot to curate playlist links - I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/delta_maniac/lets-build-a-redditbot-to-curate-playlist-links-ii-48kf"&gt;Let's build a RedditBot to curate playlist links - II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.aclysma.com/rust-on-ios-with-sdl2/"&gt;Rust on iOS with SDL2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/UgNrDb6hQQ0"&gt;Using Linux libc in Rust - with the file-locker Crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/BZqt187RWTw"&gt;Embedded Rust Mob Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/bzja9fQWzdA"&gt;Implementing TCP in Rust (part 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://vimeo.com/446618910"&gt;Define a function with parameters in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-updates"&gt;Project Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/knurling-rs/"&gt;Knurling-rs Announcement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.meilisearch.com/meili-fundraise/"&gt;Meili raises 1.5M€ for open source search in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/i55s5z/hors_instant_coding_answers_via_the_command_line/"&gt;hors - instant coding answers via the command line have released v0.6.4, with pretty colorized output by default&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.garrensmith.com/blogs/fortuna-rs-couchdb-view-server"&gt;Building a faster CouchDB View Server in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/blog/41/the-promise-of-rust-async-await-for-embedded"&gt;The promise of Rust async-await for embedded&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.camdenreslink.com/dev/implementing-the-dot-net-profiling-api-in-rust/"&gt;Implementing the .NET Profiling API in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yoric.github.io/post/rust-named-arguments/"&gt;Possibly one step towards named arguments in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/21st-century-embedded-tooling/"&gt;Embedded Rust tooling for the 21st century&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/i4ij47/rustc_1441_is_reproducible_in_debian/"&gt;rustc 1.44.1 is reproducible in Debian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/i44ahg/google_engineers_just_submitted_a_new_llvm/"&gt;Google engineers just submitted a new LLVM optimizer for consideration which gains an average of 2.33% perf.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/bevy"&gt;bevy&lt;/a&gt;, a very capable yet simple game engine.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/798"&gt;mmmmib&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/issues/8415"&gt;cargo: Deduplicate Cargo workspace
  information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotenv-linter/dotenv-linter/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;dotenv-linter: several good first issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruma/ruma/labels/help%20wanted"&gt;ruma: several help wanted issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorbase/tensorbase/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;tensorbase: several good first issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kanidm/kanidm/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;kanidm: several good first issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugs.libre-soc.org/show_bug.cgi?id=451"&gt;Libre-SOC's first SoC: Add PowerPC64 to Rust's new inline assembly implementation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;307 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-08-03..2020-08-10"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75280"&gt;add back unwinding support for Sony PSP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75227"&gt;fix ICE when using asm! on an unsupported architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/591"&gt;handle well known traits for more types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75318"&gt;resolve &lt;code&gt;char&lt;/code&gt; as a primitive even if there is a module in scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75130"&gt;forbid &lt;code&gt;#[track_caller]&lt;/code&gt; on main&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74953"&gt;remove restriction on type parameters preceding consts w/ feature const-generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74877"&gt;implement the &lt;code&gt;min_const_generics&lt;/code&gt; feature gate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75349"&gt;tweak confusable idents checking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1503"&gt;miri: accept some post-monomorphization errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1501"&gt;bubble up errors from &lt;code&gt;FileDescriptor::as_file_handle&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75271"&gt;simplify &lt;code&gt;array::IntoIter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75260"&gt;polymorphize: unevaluated constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75255"&gt;instance: polymorphize upvar closures/generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75253"&gt;clean up const-hacks in int endianess conversion functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75248"&gt;add &lt;code&gt;as_mut_ptr&lt;/code&gt; to &lt;code&gt;NonNull&amp;lt;[T]&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75250"&gt;make &lt;code&gt;MaybeUninit::as_&lt;/code&gt;(&lt;code&gt;mut_&lt;/code&gt;)&lt;code&gt;ptr&lt;/code&gt; const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75203"&gt;make &lt;code&gt;IntoIterator&lt;/code&gt; lifetime bounds of &lt;code&gt;&amp;amp;BTreeMap&lt;/code&gt; match with &lt;code&gt;&amp;amp;HashMap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75163"&gt;implement &lt;code&gt;into_keys&lt;/code&gt; and &lt;code&gt;into_values&lt;/code&gt; for associative maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75084"&gt;stabilize &lt;code&gt;Ident::new_raw&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75005"&gt;limit I/O vector count on Unix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74759"&gt;add &lt;code&gt;unsigned_abs&lt;/code&gt; to signed integers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75257"&gt;BTreeMap: better way to postpone root access in DrainFilter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/182"&gt;hashbrown: do not iterate to drop if empty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/185"&gt;hashbrown: relax bounds on HashSet constructors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/183"&gt;hashbrown: avoid closures to improve compile times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/881"&gt;stdarch: add more things that do adds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2187"&gt;futures: avoid writes without any data in write_all_vectored&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75124"&gt;clean up rustdoc's &lt;code&gt;main()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75237"&gt;rustdoc: display elided lifetime for non-reference type in doc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-08-11.md"&gt;2020-08-11&lt;/a&gt;.
  1 regression, 1 improvements, 1 of them on rollups. No outstanding nags from last week.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No Tracking Issues or PRs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2973"&gt;Proposal for POSIX error numbers in &lt;code&gt;std::os::unix&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2969"&gt;Standardize methods for leaking containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2968"&gt;Introduce '$self' macro metavar for hygienic macro items&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Saar/events/272044845/"&gt;August 11. Saarbrücken, DE - Rust-Saar Meetup &lt;code&gt;3u16&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/mzzfsrybclbpb/"&gt;August 11. Dallas, TX, US - Dallas Rust - Second Tuesday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/272060817/"&gt;August 13. San Diego, CA, US - San Diego Rust - August 2020 Tele-Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/vcgsvrybclbzb/"&gt;August 19. Vancouver, BC, CA - Vancouver Rust - Rust Study/Hack/Hang-out Night&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustconf.com/"&gt;August 20. RustConf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrybclbrb/"&gt;August 13. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/nppvrrybclbhc/"&gt;August 25. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Seoul-Meetup/events/qfkdvrybclbxb/"&gt;August 18. Seoul, KR - Rust Meetup - Rust last 6 months review (also available on Zoom)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.notion.so/Hiring-Senior-Rust-Engineer-e6c94ccc261f426c80a483c7fc642412"&gt;Senior Rust Engineer at equilibrium (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/derivadex/jobs/917157-software-developer"&gt;Software Developer at DerivaDEX (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apply.workable.com/casperlabs/j/85A300F063/"&gt;Rust Core Engineer at CasperLabs (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;You're not allowed to use references in structs until you think Rust is easy. They're the evil-hardmode of Rust that will ruin your day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/perpetual-n00b-struggling-with-ownership-again/46920/4"&gt;Kornel on rust-users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/918"&gt;Tom Phinney&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/i8iqb9/this_week_in_rust_351/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 11 Aug 2020 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2020-08-11:blog/2020/08/11/this-week-in-rust-351/</guid></item><item><title>This Week in Rust 350</title><link>https://this-week-in-rust.org/blog/2020/08/04/this-week-in-rust-350/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://rustacean-station.org/episode/026-twir-350/"&gt;this week's &lt;em&gt;This Week in Rust Podcast&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/07/30/Rust-1.45.1.html"&gt;Announcing Rust 1.45.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/08/03/Rust-1.45.2.html"&gt;Announcing Rust 1.45.2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tooling"&gt;Tooling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/i2wic3/rustanalyzer_changelog_36/"&gt;Rust Analyzer Changelog #36&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/clion/2020/08/intellij-rust-updates-for-the-2020-2-release/"&gt;IntelliJ Rust: Updates for the 2020.2 Release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://headcrab.rs/2020/07/31/july-update.html"&gt;Headcrab: July 2020 progress report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-osdev.com/this-month/2020-07/"&gt;This Month in Rust OSDev (July 2020)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cuchi.me/posts/go-vs-rust"&gt;Go vs Rust: Writing a CLI tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mozilla.org/nnethercote/2020/08/05/how-to-speed-up-the-rust-compiler-some-more-in-2020/"&gt;How to speed up the Rust compiler some more in 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pnehrer/a-curious-tale-of-rust-tls-and-postgres-in-the-cloud-434k"&gt;A Curious Tale of Rust TLS and Postgres in the Cloud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-standard-rust"&gt;Learn Standard Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/mindsets-and-expectations/"&gt;Learning Rust: Mindsets and Expectations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/introducing-the-rust-borrow-checker/"&gt;Understanding the Rust borrow checker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sheshbabu.com/posts/rust-error-handling/"&gt;Beginner's guide to Error Handling in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://frogtok.com/very-simple-guide-to-rust-hashmaps/"&gt;Rust Hashmaps Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tiemoko.com/blog/blue-team-rust/"&gt;Blue Team Rust: What is "Memory Safety", really?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/using-the-rust-compiler-as-your-integration-testing-framework/"&gt;How to use the Rust compiler as your integration testing framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/a-comprehensive-tutorial-to-rust-operators-for-beginners-11554b2c64d4"&gt;A Comprehensive Tutorial to Rust Operators for Beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/unsinged-signed-integers-and-casting-in-rust-9a847bfc398f"&gt;What You Should Know About Unsigned, Signed Integers and Casting in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hashrust.com/blog/memory-safety-in-rust-part-2/"&gt;Memory safety in Rust - part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lfn3.net/2020/08/03/a-gentle-intro-to-assembly-with-rust/"&gt;A gentle introduction to assembly with rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/prevent-breaking-code-changes-in-future-releases-using-non-exhaustive-enums-in-rust/"&gt;Prevent Breaking Code Changes in Future Releases using &lt;code&gt;non exhaustive&lt;/code&gt; enums in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://deislabs.io/posts/a-heaping-helping-of-stacks/"&gt;A Heaping Helping of Stacks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dygalo.dev/blog/rust-for-a-pythonista-1/"&gt;Rust for a Pythonista #1: Why and When?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PT] &lt;a href="https://dev.to/pehdepano/aprendendo-rust-05-funcoes-3j72"&gt;Aprendendo Rust: 05 - Funções&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[RU] &lt;a href="https://medium.com/nuances-of-programming/%D0%B8%D0%B7%D1%83%D1%87%D0%B0%D0%B5%D0%BC-rust-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-%D0%BF%D0%BE%D1%82%D0%BE%D0%BA%D0%B0%D0%BC%D0%B8-56b2a31d2846"&gt;Rust: работа с потоками&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://egghead.io/playlists/learning-rust-by-solving-the-rustlings-exercises-a722"&gt;Learning Rust by Working Through the Rustlings Exercises&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-more-rust"&gt;Learn More Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ebbflow.io/blog/vending-linux-1"&gt;Creating Linux Packages for Rust Projects (1/2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-embedded/rust-raspberrypi-OS-tutorials#operating-system-development-tutorials-in-rust-on-the-raspberry-pi"&gt;Operating System development tutorials in Rust on the Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gill.net.in/posts/reverse-engineering-a-usb-device-with-rust/"&gt;Reverse Engineering a USB Device with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/swlh/a-simple-crud-on-rust-with-rocket-rs-and-diesel-rs-e885672cb23d"&gt;A Simple Crud on Rust (With Rocket.rs and Diesel.rs)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seanchen1991.github.io/posts/rust-representer/"&gt;Some Learnings from Implementing a Normalizing Rust Representer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amitdev.github.io/posts/2020-07-27-countdown-rust/"&gt;Countdown problem in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/mindflavor/exploring-azure-cosmosdb-with-rust-part-1-1ki7"&gt;Exploring Azure CosmosDB with Rust - Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/szymongib/building-rust-web-api-with-warp-and-diesel-1d7c"&gt;Building Rust Web API with Warp and Diesel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/digitalfrontiers/microservices-in-rust-with-kafka-2b671295b24e"&gt;Microservices in Rust with Kafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.stephenmarz.com/2020/07/24/risc-v-os-using-rust-graphics/"&gt;Risc-V OS using Rust: Graphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/rAl-9HwD858"&gt;Rust Traits: Defining Behavior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yossarian.net/2020/08/02/Writing-and-publishing-a-python-module-in-rust"&gt;Writing and publishing a Python module in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=2JCblJf9hFg&amp;amp;list=PL7sG5SCUNyeYx8wnfMOUpsh7rM_g0w_cu"&gt;Hypercore Protocol in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=kURv5ZbkEss"&gt;Reasonable Coding 030 - HotStuff, a composable, no-nonsense document compiler (part 1)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-updates"&gt;Project Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ralfbiedert/cheats.rs/issues/100"&gt;Rust Language Cheat Sheet 2019 -&amp;gt; 2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://estada.ch/2020/7/30/video-recording-technology-at-rustfest/"&gt;Video recording technology at RustFest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://anchor.fm/the-virtual-world/episodes/Ep-7--The-State-of-Rust-2-with-Alex-Crichton-ehjpsq"&gt;The State of Rust 2 with Alex Chrichton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://anchor.fm/the-virtual-world/episodes/Ep-6--The-State-of-Rust-with-Steve-Klabnik-ehf8mk"&gt;The State of Rust with Steve Klabnik&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/playlist?list=PLf3u8NhoEikhTC5radGrmmqdkOK-xMDoZ"&gt;Rusty Days 2020 - all videos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://lib.rs/crates/partial-io"&gt;partial-io&lt;/a&gt;, a set of helpers to test partial, interrupted and would-block I/O operations.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/796"&gt;Kornel&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No issues were proposed for CfP&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;326 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-07-27..2020-08-03"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74105"&gt;suppress debuginfo on naked function arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65989"&gt;normalize all opaque types when converting &lt;code&gt;ParamEnv&lt;/code&gt; to &lt;code&gt;Reveal::All&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74708"&gt;ensure stack when type checking and building MIR for large if expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74983"&gt;replace a recursive algorithm with an iterative one&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74784"&gt;fix &lt;code&gt;#[track_caller]&lt;/code&gt; shims for trait objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74869"&gt;make closures and generators &lt;code&gt;must_use&lt;/code&gt; types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74762"&gt;&lt;code&gt;BTreeMap::drain_filter&lt;/code&gt; should not touch the root during iteration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74707"&gt;add &lt;code&gt;str::&lt;/code&gt;(&lt;code&gt;r&lt;/code&gt;)&lt;code&gt;split_once&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75015"&gt;add &lt;code&gt;Vec::spare_capacity_mut&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74373"&gt;add &lt;code&gt;slice::array_chunks&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/72488"&gt;stabilize &lt;code&gt;const_type_id&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74605"&gt;stabilize &lt;code&gt;Vec::leak&lt;/code&gt; as a method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74948"&gt;stabilize &lt;code&gt;Result::as_deref&lt;/code&gt; and &lt;code&gt;as_deref_mut&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74956"&gt;make &lt;code&gt;Option::unwrap&lt;/code&gt; unstably const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74930"&gt;make &lt;code&gt;mem::size_of_val&lt;/code&gt; and &lt;code&gt;mem::align_of_val&lt;/code&gt; unstably const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/backtrace-rs/pull/367"&gt;backtrace-rs: include source column numbers, where available&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-08-03.md"&gt;2020-08-03&lt;/a&gt;.
  8 regressions, 2 improvements, 1 of them on rollups. 1 outstanding nag from last week.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2945"&gt;RFC: 'C unwind' ABI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No Tracking Issues or PRs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2967"&gt;Procedural vtables and wide ptr metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2966"&gt;Edition 2021 and beyond&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/271875886/"&gt;August 5. Johannesburg, ZA - Johannesburg Rust Meetup - Monthly Joburg Rust Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Dublin/events/272162980/"&gt;August 5. Dublin, IE - Rust Dublin - August Remote Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/271511557/"&gt;August 5. Buffalo, NY, US - Buffalo Rust Meetup - Rust User Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/jhfstrybclbhb/"&gt;August 5. Indianapolis, IN, US - Indy Rust - Indy.rs with Social Distancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/Rust-Linz/events/271857182/"&gt;August 6. Linz, AT - Rust Meetup Linz - Kick Off&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/txcprrybclbjb/"&gt;August 6. Berlin, DE - Berline.rs - Rust Hack and Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gskksrybclbpb/"&gt;August 11. Seattle, WA, US - Seattle Rust Meetup - Monthly meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Saar/events/272044845/"&gt;August 11. Saarbrücken, DE - Rust-Saar Meetup &lt;code&gt;3u16&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/272060817/"&gt;August 13. San Diego, CA, US - San Diego Rust - August 2020 Tele-Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrybclbrb/"&gt;August 13. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Empowering&lt;/em&gt; is the perfect word to describe Rust in 2020. What used to be a rough adventure with many pitfalls has turned into something beautiful, something that can lift your spirit. At least, that’s what it did for me.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sharpend.io/giving-rust-another-shot-in-2020/"&gt;Mathias Lafeldt on his blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/915"&gt;Henrik Tougaard&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/i4a3e0/this_week_in_rust_350/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 04 Aug 2020 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2020-08-04:blog/2020/08/04/this-week-in-rust-350/</guid></item><item><title>This Week in Rust 349</title><link>https://this-week-in-rust.org/blog/2020/07/28/this-week-in-rust-349/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://rustacean-station.org/episode/024-twir-349/"&gt;this week's &lt;em&gt;This Week in Rust Podcast&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2020/07/27/opening-up-the-core-team-agenda.html"&gt;Opening up the Core Team agenda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2020/07/23/rust-ci-is-moving-to-github-actions.html"&gt;Rust's CI is Moving to GitHub Actions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tooling"&gt;Tooling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2020/07/27/changelog-127.html"&gt;IntelliJ Rust Changelog #127&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/07/27/changelog-35.html"&gt;Rust Analyzer Changelog #35&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://about.gitlab.com/blog/2020/07/21/rust-programming-language/"&gt;An Inside Look at the Rust Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://without.boats/blog/notes-on-a-smaller-rust/"&gt;Notes on A Smaller Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fpcomplete.com/insights/rust-at-fpco-2020/"&gt;Rust at FP Complete, 2020 Update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/dotxlem/why-the-rust-module-system-might-be-hard-to-understand-2l"&gt;Why the Rust Module System Might Be Hard to Understand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sharpend.io/giving-rust-another-shot-in-2020/"&gt;Giving Rust Another Shot in 2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn"&gt;Learn&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Dhghomon/easy_rust"&gt;Rust Explained using Easy English&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.graystorm.com/2020/07/20/a-few-advanced-variable-types-in-rust/"&gt;(A Few) Advanced Variable Types in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tokio.rs/tokio/tutorial"&gt;Tutorial for Tokio and async Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jamesmcm.github.io/blog/2020/07/25/intro-dod/#en"&gt;An introduction to Data-Oriented Design in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/learning-rust-by-converting-python-to-rust-259e735591c6"&gt;Learning Rust by Converting Python to Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.carlosgaldino.com/writing-a-file-system-from-scratch-in-rust.html"&gt;Writing a file system from scratch in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hashrust.com/blog/memory-safey-in-rust-part-1/"&gt;Memory safety in Rust - part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matthewkmayer.github.io/blag/public/post/rusty-von-humboldt/"&gt;Analyzing terabytes of GitHub Archive data with Rusoto and Serde&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pretzelhammer/rust-blog/blob/master/posts/sizedness-in-rust.md"&gt;Sizedness in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alex-dukhno.github.io/2020-07-26-This-July-in-my-Database-project-written-in-rust/"&gt;This July in my Database project written in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://badboi.dev/rust/2020/07/17/cell-refcell.html"&gt;Cell, RefCell, and Interior Mutability in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/yujiri8/cli-autocompletion-algorithm-in-rust-47jl"&gt;CLI Autocompletion Algorithm in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/johndriscoll/compressing-authority-1kph"&gt;Compressing Authority&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/sebnilsson/from-c-to-rust-code-basics-40cj"&gt;From C# to Rust: Code Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.nodraak.fr/2020/07/rust-wasm-2-hello-world/"&gt;Hello World with Rust and WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shahinrostami.com/posts/programming/rust-notebooks/chord-diagrams/"&gt;Interactive Chord Diagrams (Data Analysis with Rust)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/jculverhouse/some-number-of-ways-to-calculate-a-fibonacci-number-in-rust-d78"&gt;Some (Number) of Ways to Calculate a Fibonacci Number in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pnevyk.github.io/posts/query-system-in-rust/"&gt;Writing A Simple Query System in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vasilakisfil.social/blog/2020/05/09/rust-diesel-jsonb/"&gt;JSONB Data with Rust and Diesel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.possiblerust.com/guide/enum-or-trait-object"&gt;Enum or Trait Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://morestina.net/blog/1432/parallel-stream-processing-with-rayon"&gt;Parallel Stream Processing with Rayon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://m-decoster.github.io/2020/07/24/compile-time-cuda/"&gt;Compile Time CUDA Device Checking in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lights0123.com/blog/2020/07/25/async-await-for-avr-with-rust/"&gt;Async/Await for AVR with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ianjk.com/rust-gamejam/"&gt;Making a Game in 48 hours with Rust and WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PT] &lt;a href="https://dev.to/pehdepano/aprendendo-rust-04-comentarios-documentacao-e-tipos-de-variaveis-primitivas-1jb6"&gt;Aprendendo Rust: 04 - Comentários, documentação e tipos de variáveis primitivas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[UK] &lt;a href="https://dev.to/yaroslavpodorvanov/-3n3b"&gt;Пошук в глибину на прикладі задачі Ханойської вежі&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=M0Sx_M61ILU&amp;amp;feature=youtu.be"&gt;Utility AI (with Rust example) - How-To&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.twitch.tv/videos/691303613"&gt;Writing A Guide to Slice Data in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.twitch.tv/videos/691311447"&gt;Learning Rust GameDev Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=SMTVwISbQtE"&gt;Run any web container for free on Google CloudRun (example in rust/warp)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=20GNFE0462w"&gt;Technologieplauscherl: Memory Ownership in C# and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?time_continue=289&amp;amp;v=enxqU3bhCEs&amp;amp;feature=emb_logo"&gt;FLTK Rust Tutorial: Create a media player using the vlc crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/s19G6n0UjsM"&gt;Rust at Speed - Building A Fast Concurrent Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[FR] [video] &lt;a href="https://www.youtube.com/playlist?list=PLMWEEzYqZ0ekOG6_G4q_GXPpVHWrIH--x"&gt;Développement Web Rust &amp;amp; Rocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PT] [video] &lt;a href="https://www.twitch.tv/videos/688423082"&gt;Hoje sai o data tables em RUST&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-updates"&gt;Project Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://andygrove.io/2020/07/ballista-one-year-on/"&gt;Ballista Distributed Compute: One Year Later&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redox-os.org/news/redox-plus-nix-0/"&gt;Cross-compiling to Redox using Nix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redox-os.org/news/public-announcement-gdb/"&gt;Public Announcement: You Can Now Debug Programs Using GDB on Redox OS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/hviz2q/rocket_can_now_compile_on_stable_rust/"&gt;Rocket Can Now Compile on Stable Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ssi.gouv.fr/uploads/2020/06/anssi-guide-programming_rules_to_develop_secure_applications_with_rust-v1.0.pdf"&gt;ANSSI - Programming Rules to Develop Secure Applications with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/hz7dfp/rust_is_now_a_top_20_language_in_all_of_the_5/"&gt;Rust is now a top 20 language in all of the 5 most major language popularity listings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://linkerd.io/2020/07/23/under-the-hood-of-linkerds-state-of-the-art-rust-proxy-linkerd2-proxy/"&gt;Under the Hood of Linkerd's State of the Art Rust Proxy, Linkerd2-proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/the-innovation/performance-comparison-rust-vs-pyo3-vs-python-6480709be8d"&gt;Performance Comparison: Rust vs PyO3 vs Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wapl.es/rust/2020/07/25/optimising-with-cmp-and-ordering.html"&gt;Optimising Rust: Clockwise Triangles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/ubnt-intrepid/polyfuse"&gt;polyfuse&lt;/a&gt;, a library for writing FUSE file systems using async code.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/795"&gt;Ivan Kozik&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No issues were proposed for CfP&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;347 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-07-20..2020-07-27"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/73270"&gt;AVR: correctly set the pointer address space when constructing pointers to functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74687"&gt;detect turbofish missing surrounding angle brackets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/72121"&gt;serialize span hygiene data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74653"&gt;proc_macro: add API for tracked access to environment variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74676"&gt;correctly deal with unsorted generic parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74670"&gt;normalize bounds fully when checking defaulted types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74051"&gt;disallow non-static lifetimes in const generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74487"&gt;forbid generic parameters in anon consts inside of type defaults&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74715"&gt;add a system for creating diffs across multiple mir optimizations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74491"&gt;optimize away &lt;code&gt;BitAnd&lt;/code&gt; and &lt;code&gt;BitOr&lt;/code&gt; when possible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/73858"&gt;make more primitive integer methods const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/73197"&gt;impl Default for ranges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74677"&gt;remove needless unsafety from &lt;code&gt;BTreeMap::drain_filter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/181"&gt;hashbrown: refactor probing logic into an external iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustlings/pull/471"&gt;rustlings: add ability to run rustlings on repl.it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-07-28.md"&gt;2020-07-28&lt;/a&gt;.
  2 regressions, 1 improvement, none in rollups.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2873"&gt;Inline assembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2867"&gt;Add a new &lt;code&gt;#[instruction_set(...)]&lt;/code&gt; attribute for supporting per-function instruction set changes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2945"&gt;RFC: 'C unwind' ABI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/74605"&gt;Stabilize Vec::leak as a method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/74373"&gt;add &lt;code&gt;slice::array_chunks&lt;/code&gt; to std&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2963"&gt;RFC: Add JSON backend to Rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2964"&gt;RFC: Named arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2965"&gt;Establish a new error handling project group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rusty-days.org/"&gt;July 27 - August 2. Rusty Days Virtual Rust Conference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/271875886/"&gt;August 5. Johannesburg, ZA - Johannesburg Rust Meetup - Monthly Joburg Rust Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Dublin/events/272162980/"&gt;August 5. Dublin, IE - Rust Dublin - August Remote Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/271511557/"&gt;August 5. Buffalo, NY, US - Buffalo Rust Meetup - Rust User Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/jhfstrybclbhb/"&gt;August 5. Indianapolis, IN, US - Indy Rust - Indy.rs with Social Distancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/Rust-Linz/events/271857182/"&gt;August 6. Linz, AT - Rust Meetup Linz - Kick Off&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/txcprrybclbjb/"&gt;August 6. Berlin, DE - Berline.rs - Rust Hack and Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gskksrybclbpb/"&gt;August 11. Seattle, WA, US - Seattle Rust Meetup - Monthly meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/nppvrrybckblc/"&gt;July 28. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/266876693/"&gt;August 3. Auckland, NZ - Rust ALK - Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/jobs/415671/software-engineer-backend-m-f-d-rust-snapview-gmbh"&gt;Software Engineer Backend (m/f/d) Rust at Snapview GmbH ( München, DE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/document/d/1ZrvfGtgVGh63ezpiaerc95SFR64cGU4ftBJENczdvAs"&gt;Backend Engineer at Spruce (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4019a818-4a7b-46ef-9225-c53c7a7f238c"&gt;Backend Engineer - Rust at Kraken (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/246f7fd2-000a-4f61-8f53-b1cc783d51cb"&gt;Backend Engineer - Data Processing - Rust at Kraken (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4c864c8f-bde6-443d-b521-dd90df0e9105"&gt;Senior Backend Engineer - Rust at Kraken (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://solana.com/frontend-eng-jd.pdf"&gt;Front End Engineer at Solana&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;p&gt;Sadly, we had no quote suggestions this week.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/i094wo/this_week_in_rust_349/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 28 Jul 2020 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2020-07-28:blog/2020/07/28/this-week-in-rust-349/</guid></item><item><title>This Week in Rust 348</title><link>https://this-week-in-rust.org/blog/2020/07/21/this-week-in-rust-348/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://rustacean-station.org/episode/023-twir-348/"&gt;this week's &lt;em&gt;This Week in Rust Podcast&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/07/14/crates-io-security-advisory.html"&gt;crates.io security advisory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/07/16/Rust-1.45.0.html"&gt;Announcing Rust 1.45.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2020/07/17/traits-sprint-3.html"&gt;Traits working group 2020 sprint 3 summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://frogtok.com/useful-and-best-programming-languages-to-learn-in-2020/"&gt;Best Programming Languages to Learn in 2020(Rust Lang)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sokoban.iolivia.me/c01-00-intro.html"&gt;Learn how to make a Sokoban game in Rust!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sheshbabu.com/posts/rust-module-system/"&gt;Clear explanation of Rust’s module system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notes.iveselov.info/programming/checking-status-of-rust-features"&gt;Checking status of Rust features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/programming-servo/programming-servo-just-hanging-around-d8f660c33df2?source=friends_link&amp;amp;sk=6efbf13743aec335bd11834c2df71783"&gt;Programming Servo: just hanging around&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.minimax.dev/docs/ultimate/efficient-representation/"&gt;Efficient representation of Ultimate Tic Tac Toe using Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.graystorm.com/2020/07/16/next-algorithm-backtracking-into-the-n-queens-problem/"&gt;Next Algorithm: Backtracking into the n Queens Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redox-os.org/news/io_uring-3/"&gt;RSoC: improving drivers and kernel - part 3 (largely io_uring)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hassamuddin.com/blog/rust-mqtt/ping-pong/"&gt;Writing an asynchronous MQTT Broker in Rust - Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notes.iveselov.info/programming/rust-closures-combining-move-and-fn"&gt;Rust Closures: Returning &lt;code&gt;impl Fn&lt;/code&gt; for &lt;code&gt;move&lt;/code&gt; closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://not-matthias.github.io/kernel-driver-with-rust/"&gt;Writing a kernel driver with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mckeogh.tech/post/shallow-water/"&gt;Rewriting FORTRAN Software In Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://brokenco.de/2020/07/15/high-throughput-in-rust.html"&gt;Building and debugging a high-throughput daemon in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ralfj.de/blog/2020/07/15/unused-data.html"&gt;Why even unused data needs to be valid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/blog/2020/07/20/three-architectures-for-responsive-ide.html"&gt;Three Architectures for a Responsive IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ebbflow.io/blog/vending-win"&gt;Packaging &amp;amp; Vending Production Rust Software - Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/dotxlem/async-rust-but-less-intimidating-2c13"&gt;Async Rust, but less intimidating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/07/20/changelog-34.html"&gt;Rust Analyzer Changelog #34&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@Rustling_gopher/benchmarking-grpc-in-rust-go-184545e7688a"&gt;Benchmarking gRPC in Rust &amp;amp; Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/swlh/function-overloading-in-rust-d591aff64a03"&gt;Function Overloading in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/?utm_source=reddit&amp;amp;utm_medium=social&amp;amp;utm_campaign=constraint-solver-1-expression-trees"&gt;Geometric Constraint Solvers Part 1: Algebraic Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seanchen1991.github.io/posts/haskell-from-rust-i/"&gt;Haskell::From(Rust) I: Infix Notation and Currying&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/virtualkirill/how-to-write-a-queue-in-rust-12m9"&gt;How to Write a Queue in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://milchdealer.github.io/2020/07/19/Implementing-a-workflow-graph.html"&gt;Implementing a Workflow Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.eltonpinto.me/blog/posts/implementing_flatmap_in_rust/"&gt;Implementing &lt;code&gt;flat_map&lt;/code&gt; in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/clion/2020/07/intellij-rust-0-3-new-macro-expansion-engine/"&gt;IntelliJ Rust 0.3: New Macro Expansion Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://micouy.github.io/posts/low-level-pt-1/"&gt;Low Level Stuff pt. 1 - Booting to 'Hello Rust!'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nbsoftsolutions.com/blog/my-bet-on-rust-has-been-vindicated.html"&gt;My Bet on Rust has been Vindicated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vale.dev/blog/raii-next-steps"&gt;The Next Steps for Single Ownership and RAII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudhead.io/popol/"&gt;Popol: Minimal Non-Blocking I/O with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qvault.io/2020/07/17/rust-vs-go-in-backend-web-development/"&gt;Rust vs Go in Backend Web Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://without.boats/blog/shipping-const-generics/"&gt;Shipping Const Generics in 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io//2020/07/15/two-beautiful-programs.html"&gt;Two Beautiful Rust Programs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Japanese] &lt;a href="https://medium.com/nttlabs/quic-with-rust-9cf9b44596ad"&gt;TCPが遅すぎる？QUICを使おう！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Spanish] &lt;a href="https://dev.to/iddar/rust-para-embebidos-4agn"&gt;Rust para embebidos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Portuguese] &lt;a href="https://dev.to/pehdepano/aprendendo-rust-03-variaveis-57a8"&gt;Aprendendo Rust: 03 - Variáveis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Portuguese] [video] &lt;a href="https://www.twitch.tv/videos/681897847"&gt;Curso Rust 🦀 - Aula 4 - strings, match, sorteio, quizz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=YBG8QTO8fNI&amp;amp;feature=youtu.be"&gt;Boiled Down Crate 🦀: OnceCell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=79phqVpE7cU"&gt;Rust: What is Ownership and Borrowing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/aticu/pre"&gt;pre&lt;/a&gt;, a library for declaring and checking the assurance of precondition, useful for unsafe functions.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/792"&gt;Zicklag&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitlab.freedesktop.org/zeenix/zbus/-/issues"&gt;zbus is looking for contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/casey/just/issues/604"&gt;just: Add extensible recipe and justfile attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/libpnet/libpnet/issues/449"&gt;libpnet: Segfault in icmp send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/issues/29497"&gt;rust: fs::remove_dir_all rarely succeeds for large directories on window&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;394 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-07-13..2020-07-20"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74516"&gt;do not try fetching the ancestors of errored trait impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74534"&gt;only skip impls of foreign unstable traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74411"&gt;don't assign &lt;code&gt;()&lt;/code&gt; to &lt;code&gt;!&lt;/code&gt; MIR locals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74357"&gt;some &lt;code&gt;Symbol&lt;/code&gt; related improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74310"&gt;use &lt;code&gt;ArrayVec&lt;/code&gt; in &lt;code&gt;SparseBitSet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74214"&gt;change &lt;code&gt;SymbolName::name&lt;/code&gt; to a &lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74203"&gt;enforce the static symbol order&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74202"&gt;reduce the amount of interning and &lt;code&gt;layout_of&lt;/code&gt; calls in const eval&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74056"&gt;add &lt;code&gt;Arguments::as_str()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74021"&gt;&lt;code&gt;impl Index&amp;lt;RangeFrom&amp;gt; for CStr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/73986"&gt;add (unchecked) indexing methods to raw (and NonNull) slices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/73930"&gt;make some &lt;code&gt;Option&lt;/code&gt; methods const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/73490"&gt;use &lt;code&gt;step_unchecked&lt;/code&gt; more liberally in range iter impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70817"&gt;add &lt;code&gt;core::task::ready!&lt;/code&gt; macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/backtrace-rs/pull/360"&gt;backtrace: use noop backends on Miri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/874"&gt;stdarch: update and revamp wasm32 SIMD intrinsics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/869"&gt;stdarch: implement AVX512f floating point comparisons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/876"&gt;stdarch: constify all x86 &lt;code&gt;rustc_args_required_const&lt;/code&gt; intrinsics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74459"&gt;make &lt;code&gt;unreachable_unchecked&lt;/code&gt; a const fn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/8497"&gt;cargo: fix freshness checks for build scripts on renamed dirs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/crates.io/pull/2637"&gt;crates.io: generate API tokens with a secure RNG, store hashed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/71237"&gt;add Ayu theme to rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/5756"&gt;clippy: &lt;code&gt;unnecessary_sort_by&lt;/code&gt;: avoid linting if key borrows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-07-21.md"&gt;2020-07-21&lt;/a&gt;.
  A disastrous week. At least 7 regressions. 3 improvements. Lots of murkiness due to rollups.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2945"&gt;RFC: 'C unwind' ABI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/74328"&gt;Stabilize core::future::{pending,ready}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/73858"&gt;Make more primitive integer methods const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/73583"&gt;Derive common traits for panic::Location&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2962"&gt;Add &lt;code&gt;oneof&lt;/code&gt; configuration predicate to support exclusive features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2959"&gt;RFC: Promote aarch64-unknown-linux-gnu to a Tier-1 Rust target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2958"&gt;Add Drop::poll_drop_ready for asynchronous destructors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2957"&gt;Stabilize Cargo's new feature resolver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2956"&gt;Add the partial-closure-args RFC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/txcprrybckbfc/"&gt;July 23. Berlin, DE - Rust Hack and Learn&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://rusty-days.org/"&gt;July 27 - August 2. Rusty Days Virtual Rust Conference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpybckbkc/"&gt;July 27. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/nppvrrybckblc/"&gt;July 28. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/266876693/"&gt;August 3. Auckland, NZ - Rust ALK - Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/jobs/cap/view/1922843992/?pathWildcard=1922843992&amp;amp;trk=mcm"&gt;RUST Senior Software Engineer - Backend at LogDNA (Remote, US)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elektron.se/rust-engineer/"&gt;Rust Engineer at Elektron (Gothenburg, SE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.indeedjobs.com/jobs/4261e5785229cb748d43?from=snippet"&gt;Software Engineer - Systems and Analytics at Noibu (Ottawa, ON, CA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.indeedjobs.com/jobs/99f93d6ff0f763d6c0c8?from=snippet"&gt;Software Engineer - Data Collection at Noibu (Ottawa, ON, CA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://onesignal.com/careers/9a60a245-06d9-4e2a-82fb-da5e1e9d22d8"&gt;Senior Backend Engineer at OneSignal (San Mateo, CA, US)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/1password/0623888f-0125-41b9-9902-eae8cfeae0c3"&gt;Rust Developer at OnePassword (Remote, US or CA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/findora/88502a0d-a86d-4cd2-b0b7-8625a107b02b"&gt;Systems Engineer at Findora (Menlo Park, CA, US)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/findora/e89e2e02-622c-41da-a14d-c12d854a25b5"&gt;Senior Systems Engineer at Findora (Menlo Park, CA, US)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.esrlabs.com/careers/position/?jobPostingId=7156225"&gt;Rust Developer at ESR Labs (München, DE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[french] &lt;a href="https://twitter.com/p4bl0/status/1283723397478973440"&gt;Rust Instructor - University of Paris 8 (Paris, FR)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;unsafe&lt;/code&gt; Rust is all about flirting with UB but never giving in.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://rust-lang.zulipchat.com/#narrow/stream/136281-t-lang.2Fwg-unsafe-code-guidelines/topic/Language.20UB.20vs.20library.20UB/near/204212193"&gt;Ralf Jung on Zulip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/913"&gt;HeroicKatora&lt;/a&gt; for the suggestions!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/hvjf4i/this_week_in_rust_348/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 21 Jul 2020 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2020-07-21:blog/2020/07/21/this-week-in-rust-348/</guid></item></channel></rss>