<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>This Week in Rust</title><link href="https://this-week-in-rust.org/" rel="alternate"></link><link href="https://this-week-in-rust.org/feeds/twir-contributors.atom.xml" rel="self"></link><id>https://this-week-in-rust.org/</id><updated>2019-06-04T00:00:00-04:00</updated><entry><title>This Week in Rust 289</title><link href="https://this-week-in-rust.org/blog/2019/06/04/this-week-in-rust-289/" rel="alternate"></link><updated>2019-06-04T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-06-04:blog/2019/06/04/this-week-in-rust-289/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://os.phil-opp.com/status-update/2019-06-03/"&gt;Writing an OS in Rust: Updates in May 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-lang.github.io/unsafe-code-guidelines/"&gt;Unsafe Code Guidelines Reference now available online&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/actix-web/blob/master/CHANGES.md"&gt;Actix-web 1.0 released&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://astonbitecode.github.io/blog/post/j4rs_0.6.0/"&gt;j4rs - calling Java code from Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/06/03/governance-wg-announcement.html"&gt;The Governance WG is going public&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.gnome.org/~federico/blog/bzip2-in-rust-basic-infra.html"&gt;Bzip2 in Rust - basic infrastructure and CRC32 computation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amethyst.rs/posts/evoli-an-official-amethyst-showcase-game"&gt;Evoli - an official Amethyst showcase game&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://svartalf.info/posts/2019-05-31-poking-the-macos-io-kit-with-rust/"&gt;Poking the macOS IO Kit with Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/calebwin/emu"&gt;emu&lt;/a&gt;, a Rust-based language for programming GPUs. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/561"&gt;Caleb Winston&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6967#issuecomment-497764185"&gt;Cargo: Less duplication in activate&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;283 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-05-27..2019-06-03"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/57967"&gt;Introduce Rust symbol mangling scheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61389"&gt;Remove &lt;code&gt;GlobalArenas&lt;/code&gt; and use &lt;code&gt;Arena&lt;/code&gt; instead&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60967"&gt;Short circuit &lt;code&gt;Send&lt;/code&gt; and &lt;code&gt;Sync&lt;/code&gt; impls for &lt;code&gt;TokenTree&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61374"&gt;Explicitly suggest &lt;code&gt;type_ascription&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61331"&gt;Recover gracefully from argument with missing type or param name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61147"&gt;When encountering move error on an &lt;code&gt;Option&lt;/code&gt;, suggest using &lt;code&gt;as_ref&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61140"&gt;Reword malformed attribute input diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61100"&gt;Apply &lt;code&gt;#[must_use]&lt;/code&gt; lint to components of tuples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/748"&gt;miri: Tag static/const allocations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61384"&gt;Update LLVM to include fmin/fmax optimisations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61364"&gt;Stabilize &lt;code&gt;reverse_bits&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61363"&gt;Stabilize &lt;code&gt;iter_nth_back&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60850"&gt;Stabilize &lt;code&gt;RefCell::try_borrow_unguarded&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60766"&gt;&lt;code&gt;Weak::into_raw&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/58975"&gt;Implement &lt;code&gt;iter::Sum&lt;/code&gt; and &lt;code&gt;iter::Product&lt;/code&gt; for &lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60542"&gt;Add &lt;code&gt;Step::sub_usize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61157"&gt;&lt;code&gt;BufReader&lt;/code&gt;: In Seek impl, remove extra discard_buffer call&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60549"&gt;Do not print panic message on doctest failures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6980"&gt;cargo: Test the Resolver against the varisat Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2678"&gt;RFC 2678: Named custom cargo profiles&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/43038"&gt;Tracking issue for RFC 1789: Conversions from &lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;Cell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61398"&gt;Stabilize copy_within&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61268"&gt;Stabilize support for Profile-guided Optimization&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61229"&gt;Stabilize &lt;code&gt;#![feature(repr_align_enum)]&lt;/code&gt; in Rust 1.37.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61130"&gt;Add std::mem::take as suggested in #61129&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60932"&gt;Support ? Kleene macro operator in 2015&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2706"&gt;Get type of an arbitrary expression&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2707"&gt;Make &lt;code&gt;..&lt;/code&gt; a pattern syntactically&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2705"&gt;Amend RFC2603 to allow mangled identifiers to start with a digit&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/259480660/"&gt;Jun 10. Auckland, NZ - Rust AKL - WASM - the past, present and future&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Melbourne/events/261628621/"&gt;Jun 12. Melbourne, AU - Rust Melbourne meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wroclaw/events/261283360/"&gt;Jun  6. Wroclaw, PL - Rust Wroclaw Meetup #11&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzjbqb/"&gt;Jun 12. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-detroit/events/244855856/"&gt;Jun 11. Detroit, MI, US - Detroit Rust - June Detroit Rust at Bamboo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/nzfspqyzjbpb/"&gt;Jun 11. Redmond, WA, US - Seattle Rust Meetup - Monthly meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/BostonRust/events/260834642/"&gt;Jun 12. Boston, MA, US - Boston Rust Meetup at MassRobotics&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/261595821/"&gt;Jun 13. San Diego, CA, US - San Diego Rust May Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/261239650"&gt;Jun 13. Arlington, VA, US - Rust DC — Mid-month Rustful&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dbcfrpyzjbrb/"&gt;Jun 13. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzjbqb/"&gt;Jun 12. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Boulder-Denver/events/259124426/"&gt;Jun 18. Denver, CO, US - Rust Boulder/Denver - Rust Meetup for June&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-MX/events/261739565/"&gt;Jun 19. Mexico City, MX - Rust MX - Reunión junio: Hablemos de Fuchsia OS y WebAssembly&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://3dsig.com/positions/software-engineer/"&gt;Software Engineer at 3DSignals, Kfar Saba, IL&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;apparently I wrote Building Git to explain a complex problem to rust devs who could then help me build it in rust&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://twitter.com/mountain_ghosts/status/1134739348593827841"&gt;/dev/horse @ jsconf eu (mountain_ghosts) on twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/656"&gt;Dos Moonen&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href=""&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 288</title><link href="https://this-week-in-rust.org/blog/2019/05/28/this-week-in-rust-288/" rel="alternate"></link><updated>2019-05-28T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-05-28:blog/2019/05/28/this-week-in-rust-288/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;🎈🎉 &lt;a href="https://blog.rust-lang.org/2019/05/23/Rust-1.35.0.html"&gt;Announcing Rust 1.35.0&lt;/a&gt;. 🎉🎈&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boats.gitlab.io/blog/post/await-decision-ii/"&gt;Update on await syntax&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://thume.ca/2019/04/18/writing-a-compiler-in-rust/"&gt;Writing a compiler in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.myelin.ch/2019/05/24/mockiato-announcement.html"&gt;Announcing Mockiato - A strict, yet friendly mocking library for Rust 2018&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@polyglot_factotum/programming-servo-zen-and-the-art-of-removing-blocks-from-your-system-51c1b7d404e3"&gt;Programming Servo: Zen and the art of removing blocks from your system&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/csis-techblog/cross-compiling-and-statically-linking-against-rust-libraries-2c02ee2c01af"&gt;Cross compiling and statically linking against Rust libraries&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thenewwazoo.github.io/clone.html"&gt;Rebuffing the attack of the clones - a newbie's guide to &lt;code&gt;clone&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://newrustacean.com/show_notes/meta/_3/"&gt;New Rustacean Meta 3&lt;/a&gt; - A story and a dream (and the promise of Rust): the final episode of New Rustacean!&lt;/li&gt;
&lt;li&gt;&lt;a href="http://erebor.io"&gt;Erebor&lt;/a&gt;, a Rust consultancy startup by &lt;a href="https://github.com/alexreg"&gt;Alexander Regueiro&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/myelin-ai/mockiato"&gt;mockiato&lt;/a&gt;, a strict yet friendly mocking library for Rust 2018. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/550"&gt;Ruben Schmidmeister&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No issues were proposed for CfP&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;286 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-05-20..2019-05-27"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61189"&gt;Turn turbo 🐟 🍨 into an error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60803"&gt;Remove &lt;code&gt;ObsoleteInPlace&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60441"&gt;Make place projections concrete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60740"&gt;Simplify use of keyword symbols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61098"&gt;Fix overflowing literal lint in loops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60815"&gt;Use &lt;code&gt;Symbol&lt;/code&gt; even more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60827"&gt;Use &lt;code&gt;Symbol&lt;/code&gt; more in lint APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60903"&gt;Move gensym operations from &lt;code&gt;Symbol&lt;/code&gt; to &lt;code&gt;Ident&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60973"&gt;Avoid symbol interning in &lt;code&gt;file_metadata&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61035"&gt;Avoid more symbol interning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61077"&gt;Don't arena-allocate static symbols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60959"&gt;rustc: Improve type size assertions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60300"&gt;Allow null-pointer-optimized enums in FFI if their underlying representation is FFI safe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60840"&gt;Preserve local scopes in generator MIR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61134"&gt;Annotate each &lt;code&gt;reverse_bits&lt;/code&gt; with &lt;code&gt;#[must_use]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61114"&gt;Vec: Avoid creating slices to the elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61082"&gt;Fix dangling reference in &lt;code&gt;Vec::append&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/crates.io/pull/1749"&gt;crates.io: Further address performance regression in search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/56595"&gt;rustbuild: Add clippy and fix commands to x.py&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/43038"&gt;Tracking issue for RFC 1789: Conversions from &lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;Cell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/48763"&gt;Tracking issue for reversing the bit pattern in an integer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/54733"&gt;Stabilize rustdoc theme options&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/59489"&gt;Bors policy question: Auto-reassignment on r+&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60850"&gt;Stabilize RefCell::try_borrow_unguarded&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/61119"&gt;Stabilize &lt;code&gt;std::arch::wasm32::unreachable&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61130"&gt;Add std::mem::take as suggested in #61129&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2702"&gt;Add generalized arity tuples&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="africa"&gt;Africa&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/gpxrtqyzhbcb/"&gt;Jun  5. Johannesburg, ZA - Johannesburg Rust Meetup - informal discussions on topics related to the language&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/259480660/"&gt;Jun 10. Auckland, NZ - Rust AKL - WASM - the past, present and future&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.clermontech.org/workshops/workshop-3-rust.html"&gt;Jun  5. Clermont-Ferrand, FR - Clermont'ech: Rust Workshop&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wroclaw/events/261283360/"&gt;Jun  6. Wroclaw, PL - Rust Wroclaw Meetup #11&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzjbqb/"&gt;Jun 12. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/kkzkxqyzjbhb/"&gt;Jun  5. Atlanta, GA, US - Grab a beer with fellow Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/mffbtpyzjbhb/"&gt;Jun  5. Indianapolis, IN, US - Indy.rs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-detroit/events/244855856/"&gt;Jun 11. Detroit, MI, US - Detroit Rust - June Detroit Rust at Bamboo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/nzfspqyzjbpb/"&gt;May 14. Redmond, WA, US - Seattle Rust Meetup - Monthly meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/261595821/"&gt;Jun 13. San Diego, CA, US - San Diego Rust May Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/261239650"&gt;Jun 13. Arlington, VA, US - Rust DC — Mid-month Rustful&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dbcfrpyzjbrb/"&gt;Jun 13. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzjbqb/"&gt;Jun 12. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Boulder-Denver/events/259124426/"&gt;Jun 18. Denver, CO, US - Rust Boulder/Denver - Rust Meetup for June&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="south-america"&gt;South America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Sao-Paulo-Meetup/events/261123153/"&gt;Jun 1. Sao Paulo, BR - Rust SP - Encontro Junho 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://career8.successfactors.com/sfcareer/jobreqcareer?jobId=198894"&gt;DevOps Storage Engineer at Comcast, Pennsylvania, US&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://enhance.com/#jobs"&gt;Rust Developer at enhance, London, UK or remote&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://careers.kaspersky.com/job/Developer-%D0%BD%D0%B0-Rust-(QA-Team%2C-KasperskyOS)/561880800/?locale=en_EU"&gt;Rust Developer at Kaspersky Lab, Moscow, RU&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I used to think of programs as execution flowing and think about what the CPU is doing. As I moved to rust I started thinking a lot more about memory: how the data was laid out in memory, and how ownership of different parts of memory is given to different parts of the program at run time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://youtu.be/FYGS2q1bljE?t=280"&gt;Oliver Gould on "The Open Source Show: All About Rust&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/651"&gt;infogulch&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/budr02/this_week_in_rust_288/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 287</title><link href="https://this-week-in-rust.org/blog/2019/05/21/this-week-in-rust-287/" rel="alternate"></link><updated>2019-05-21T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-05-21:blog/2019/05/21/this-week-in-rust-287/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/05/15/4-Years-Of-Rust.html"&gt;4 years of Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/05/20/The-2019-Rust-Event-Lineup.html"&gt;The 2019 Rust event lineup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boats.gitlab.io/blog/post/zero-cost-abstractions/"&gt;Understanding zero cost abstractions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.discordapp.com/using-rust-to-scale-elixir-for-11-million-concurrent-users-c6f19fc029d3"&gt;Using Rust to scale Elixir for 11 million concurrent users&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vorner.github.io/2019/05/19/rust-in-avast.html"&gt;Rust in Avast&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://internals.rust-lang.org/t/evaluating-pipelined-rustc-compilation/10199"&gt;Evaluating pipelined rustc compilation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dtolnay/case-studies"&gt;Analysis of various tricky Rust code&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://llogiq.github.io/2019/05/18/momo.html"&gt;Get back some compile time from monomorphization&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gankro.github.io/blah/initialize-me-maybe/"&gt;mem::uninitialized is deprecated&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.joshmcguigan.com/blog/shell-completions-pure-rust/"&gt;Shell completions in pure Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://karroffel.gitlab.io/post/2019-05-15-rust/"&gt;Creating C/C++ APIs in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@steadylearner/how-to-start-rust-chat-app-499a194d0820"&gt;How to start Rust chat app&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mozillagfx.wordpress.com/2019/05/21/graphics-team-ships-webrender-mvp/"&gt;WebRender MVP ships in Firefox&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/livevideo/rust-in-motion"&gt;Rust in Motion&lt;/a&gt; - a video series by Carol Nichols and Jake Goulding (requires purchase).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/rust-in-action"&gt;Rust in Action&lt;/a&gt; - a book by Tim McNamara (early access, requires purchase).&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week we have two crates: &lt;a href="https://github.com/nokia/memory-profiler"&gt;memory-profiler&lt;/a&gt;, does what it says on the box. &lt;a href="https://github.com/llogiq/momo"&gt;momo&lt;/a&gt; is a procedural macro that outlines generic conversions to reduce monomorphized code. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/549"&gt;ehsanmok&lt;/a&gt; and llogiq for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/rust-belt-rustbridges/28332"&gt;Running a Rust Belt RustBridge&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://internals.rust-lang.org/t/async-await-experience-reports/10200"&gt;Submit your experience for newly await syntax&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/www.rust-lang.org/issues/780"&gt;www.rust-lang.org: Frontend cleanup: Remove Skeleton&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;240 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-05-13..2019-05-20"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60763"&gt;Move token tree related lexer state to a separate struct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60960"&gt;Stop using gensyms in HIR lowering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60765"&gt;Fix more escaping ReScopes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60745"&gt;Perform constant propagation into terminators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60597"&gt;Do some simple constant propagation in the &lt;code&gt;ConstProp&lt;/code&gt; pass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60590"&gt;Test interaction of unions with non-zero/niche-filling optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60444"&gt;Forego caching for all participants in cycles, apart from root node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60370"&gt;Mark &lt;code&gt;core::alloc::Layout::from_size_align_unchecked&lt;/code&gt; const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60921"&gt;Remove the unstable and deprecated &lt;code&gt;mpsc_select&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60445"&gt;Stabilize core parts of &lt;code&gt;MaybeUninit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60678"&gt;Stabilize &lt;code&gt;vecdeque_rotate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60894"&gt;Add entry-like methods to &lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60130"&gt;Add implementations of &lt;code&gt;last&lt;/code&gt; in terms of &lt;code&gt;next_back&lt;/code&gt; on a bunch of &lt;code&gt;DoubleEndedIterators&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60760"&gt;Fix display of const generics in rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup.rs/pull/1850"&gt;rustup: Avoid blocking on &lt;code&gt;CloseHandle&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-guide/pull/318"&gt;rustc-guide: Add documentation about profile-guided optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/49799"&gt;lint: convert &lt;code&gt;incoherent_fundamental_impls&lt;/code&gt; into hard error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/4110"&gt;clippy: Prevent symbocalypse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/crates.io/pull/1746"&gt;crates.io: Fix performance regression on crate search&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2678"&gt;Named custom cargo profiles&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60850"&gt;Stabilize RefCell::try_borrow_unguarded&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/48763"&gt;Tracking issue for reversing the bit pattern in an integer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/45323"&gt;BufReader/Writer extension methods: is_empty, buffer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/59489"&gt;Bors policy question: Auto-reassignment on r+&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="africa"&gt;Africa&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/gpxrtqyzhbcb/"&gt;Jun  5. Johannesburg, ZA - Johannesburg Rust Meetup - informal discussions on topics related to the language&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;Asia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/381254712479005/"&gt;May 25. Taipei, TW - Rust Taiwan Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.connpass.com/event/129406/"&gt;May 27. Tokyo, JP - Tokyo Rust Meetup - Rust LT #5&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Native-Developers-in-UA/events/261508593/"&gt;May 23. Kharkiv, UA - PeerLab Kharkiv #Rust: Rust Success Stories&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Paris/events/260925527/"&gt;May 23. Paris, FR - Rust Paris meetup #45&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/spbrust/events/whmxrqyzhbjc/"&gt;May 26. St. Petersburg, RU - St. Petersburg Rust Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzhbmc/"&gt;May 29. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-in-Vilnius/events/260937510/"&gt;May 28. Vilnius, LT - Rust Vilnius - Rust Safety and Distributed Consensus&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wroclaw/events/261283360/"&gt;Jun  6. Wroclaw, PL - Rust Wroclaw Meetup #11&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpyzhbkc/"&gt;May 27. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmyzhblc/"&gt;May 28. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzhbmc/"&gt;May 29. Vancouver, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Chicago-Rust-Meetup/events/260918979"&gt;May 29. Chicago, IL, US - Chicago Rust Meetup - Unsafe Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/kkzkxqyzjbhb/"&gt;Jun  5. Atlanta, GA, US - Grab a beer with fellow Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/mffbtpyzjbhb/"&gt;Jun  5. Indianapolis, IN, US - Indy.rs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="south-america"&gt;South America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Sao-Paulo-Meetup/events/261123153/"&gt;Jun 1. Sao Paulo, BR - Rust SP - Encontro Junho 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4c864c8f-bde6-443d-b521-dd90df0e9105"&gt;Senior Software Engineer, Backend - Rust at Kraken, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Just the presence of well integrated Algebraic Data Types (ADTs) makes an incredible amount of difference. They are used to represent errors in a meaningful and easy to understand way (&lt;code&gt;Result&amp;lt;T&amp;gt;&lt;/code&gt;), are used to show that a function may or may not return a meaningful value without needing a garbage value (&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;), and the optional case can even be used to wrap a null pointer scenario in a safe way (&lt;code&gt;Option&amp;lt;Ref&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; being the closest to a literal translation I think).&lt;/p&gt;
&lt;p&gt;That’s just one small feature that permeates the language. Whatever the opposite of a death-of-a-thousand-cuts is, Rust has it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://news.ycombinator.com/item?id=19922344"&gt;tomcatfish on the orange website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/643"&gt;PrototypeNM1&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/brnwyh/this_week_in_rust_287/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 286</title><link href="https://this-week-in-rust.org/blog/2019/05/14/this-week-in-rust-286/" rel="alternate"></link><updated>2019-05-14T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-05-14:blog/2019/05/14/this-week-in-rust-286/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;🎈🎉 &lt;a href="https://blog.rust-lang.org/2019/05/14/Rust-1.34.2.html"&gt;Announcing Rust 1.34.2&lt;/a&gt;. 🎉🎈&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/05/13/Security-advisory.html"&gt;Security advisory for the standard library&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://internals.rust-lang.org/t/update-on-the-ci-investigation/10056"&gt;Update on the CI investigation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raphlinus.github.io/rust/graphics/gpu/2019/05/08/modern-2d.html"&gt;2D graphics on modern GPU&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blakesmith.me/2019/05/07/rust-patterns-enums-instead-of-booleans.html"&gt;Rust patterns: enums instead of booleans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.japaric.io/microamp/"&gt;Asymmetric multi-processing on microcontrollers with μAMP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ehsanmkermani.com/2019/05/13/state-of-machine-learning-in-rust/"&gt;State of machine learning in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/japaric/panic-never"&gt;panic-never&lt;/a&gt;, a crate to make every panic a link-time error. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/544"&gt;ehsanmok&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821/242"&gt;Help answer: What are the similarities and differences between C++'s concepts and Rust’s traits&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;190 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-05-06..2019-05-13"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60586"&gt;Implement built-in &lt;code&gt;.await&lt;/code&gt; syntax&lt;/a&gt; (Hooray!)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60675"&gt;Remove the old await! macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60733"&gt;Cleanup the .await HIR lowering with .stmt(..)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60588"&gt;Revert "Disable big-endian simd in swap_nonoverlapping_bytes"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60261"&gt;syntax: introduce unescape module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60700"&gt;syntax_pos: Optimize symbol interner pre-filling slightly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60679"&gt;Keep original literal tokens in AST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60659"&gt;Tweak &lt;code&gt;Symbol&lt;/code&gt; and &lt;code&gt;InternedString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60630"&gt;Use &lt;code&gt;Symbol&lt;/code&gt; more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup.rs/pull/1845"&gt;Better IO buffer when validating dist hashes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/59288"&gt;Remove &lt;code&gt;hir::ExprKind::If&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60246"&gt;Optimize HIR map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60694"&gt;Fix HIR printing of existential type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60244"&gt;Const-stabilize &lt;code&gt;NonNull::dangling&lt;/code&gt; and &lt;code&gt;NonNull::cast&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60234"&gt;std: Derive &lt;code&gt;Default&lt;/code&gt; for &lt;code&gt;io::Cursor&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6934"&gt;cargo: Stabilize offline mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6925"&gt;cargo: Always include &lt;code&gt;Cargo.toml&lt;/code&gt; when packaging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6883"&gt;Implement the Cargo half of pipelined compilation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup.rs/pull/1842"&gt;rustup: More progress bars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2603"&gt;RFC 2603: Symbol Mangling v2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2678"&gt;Named custom cargo profiles&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/56686"&gt;Tracking issue for VecDeque::rotate_{left|right} (feature vecdeque_rotate)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/58974"&gt;std: implement &lt;code&gt;Error&lt;/code&gt; for &lt;code&gt;Box&amp;lt;dyn Error&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60109"&gt;Stabilize ADX, TBM, and SSE4a target features&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60300"&gt;Allow null-pointer-optimized enums in FFI if their underlying representation is FFI safe&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60445"&gt;Stabilize core parts of MaybeUninit&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2700"&gt;Deprecate stdlib modules dedicated to numeric constants and move those constants to associated consts&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2699"&gt;Annotate unwind rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia"&gt;Asia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/mad-rs/events/261443876/"&gt;May 18. Chennai, IN - Rust Chennai - Monthly meetup - May&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/381254712479005/"&gt;May 25. Taipei, TW - Rust Taiwan Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.connpass.com/event/129406/"&gt;May 27. Tokyo, JP - Tokyo Rust Meetup - Rust LT #5&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Hack-Learn-Karlsruhe/events/261106439/"&gt;May 20. Karlsruhe, DE - Rust Hack &amp;amp; Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-NERF/events/261101152/"&gt;May 22. Erlangen, DE - Rust Franken Meetup #0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Meetup-Hamburg/events/260454690/"&gt;May 22. Hamburg, DE - Rust Hack &amp;amp; Learn May 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/FLOSS-Grenoble/events/261250845/"&gt;May 22. Grenoble, FR - FLOSS Grenoble - Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Paris/events/260925527/"&gt;May 23. Paris, FR - Rust Paris meetup #45&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzhbmc/"&gt;May 29. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-in-Vilnius/events/260937510/"&gt;May 28. Vilnius, LT - Rust Vilnius - Rust Safety and Distributed Consensus&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Ann-Arbor-Rust-Meetup/events/vsncvqyzhbdc/"&gt;May 22. Ann Arbor, US - Ann Arbor Rust Meetup - Monthly Gathering&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Desert-Rustaceans/events/mkwgvqyzhbdc/"&gt;May 22. Mesa, AZ, US - Desert Rust - Rust: Backend Web Frameworks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpyzhbkc/"&gt;May 27. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmyzhblc/"&gt;May 28. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzhbmc/"&gt;May 29. Vancouver, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Chicago-Rust-Meetup/events/260918979"&gt;May 29. Chicago, IL, US - Chicago Rust Meetup - Unsafe Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/jobs/cap/view/1162802661/"&gt;Lead Software Engineer at SE4, Tokyo, JP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sisu.ai/careers/?gh_jid=4057600002"&gt;Software Engineer - Backend at SISU, San Francisco, US&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tenx.workable.com/jobs/689264"&gt;Software Engineer at TenX, Singapore&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;The big gorilla 3D game framework. Apparently it actually works.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://wiki.alopex.li/AGuideToRustGraphicsLibraries2019"&gt;SimonHeath on Amethyst&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/640"&gt;Magnus Larsen&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/bowbaj/this_week_in_rust_286/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry></feed>