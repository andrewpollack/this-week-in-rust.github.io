<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>This Week in Rust</title><link href="https://this-week-in-rust.org/" rel="alternate"></link><link href="https://this-week-in-rust.org/feeds/twir-contributors.atom.xml" rel="self"></link><id>https://this-week-in-rust.org/</id><updated>2019-07-23T00:00:00-04:00</updated><entry><title>This Week in Rust 296</title><link href="https://this-week-in-rust.org/blog/2019/07/23/this-week-in-rust-296/" rel="alternate"></link><updated>2019-07-23T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-07-23:blog/2019/07/23/this-week-in-rust-296/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.c-span.org/video/?c4808083/rust-language-chosen"&gt;U.S. House Committee on Financial Services hearing: Why was the Rust language chosen&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc-blog.microsoft.com/2019/07/22/why-rust-for-safe-systems-programming/"&gt;Microsoft Security Response Center: Why Rust for safe systems programming&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/cezxjn/compiler_speed_has_improved_3040_across_the_board/"&gt;Compiler speed has improved 30-40% across the board year-to-date, with some projects seeing 45%+ improvements&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io/2019/07/16/perils-of-constructors.html"&gt;Perils of constructors&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boats.gitlab.io/blog/post/notes-on-a-smaller-rust/"&gt;Notes on a smaller Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://svartalf.info/posts/2019-07-17-announcing-heim-project/"&gt;Announcing heim project&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.codeship.com/gotham-from-start-to-heroku/"&gt;Gotham — from start to Heroku&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.steadylearner.com/blog/read/How-to-write-Full-Stack-Rust-code"&gt;How to write Full Stack Rust code&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/cefgec/howto_replace_memuninitialized_with_memmaybeuninit/"&gt;HOWTO: Replace mem::uninitialized with mem::MaybeUninit&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/cbvhq9/stream_combinators_implemented_using_for_await/"&gt;Stream combinators implemented using for await syntax&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/clion/whatsnew/#v2019-2-rust"&gt;CLion Rust plugin adds a new experimental macro expansion engine&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/iqlusioninc/abscissa"&gt;abscissa&lt;/a&gt;, a security-oriented Rust application framework.
Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/590"&gt;Tony Arcieri&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rustfest.eu/cfp-for-barcelona"&gt;RustFest Barcelona - Call for Proposals is open&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;230 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-07-15..2019-07-22"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/59706"&gt;The essence of lexer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61749"&gt;Implement RFC&lt;/a&gt; &lt;a href="https://rust-lang.github.io/rfcs/2203-const-repeat-expr.html"&gt;#2203&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62008"&gt;Add meta-variable checks in macro definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62713"&gt;Stabilize &lt;code&gt;&amp;lt;*mut _&amp;gt;::cast&lt;/code&gt; and &lt;code&gt;&amp;lt;*const _&amp;gt;::cast&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62710"&gt;Specific error for positional args after named args in &lt;code&gt;format!()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62694"&gt;rustc_typeck: Improve diagnostics for &lt;code&gt;-&amp;gt; _ fn&lt;/code&gt; return type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62685"&gt;Add info about undefined behavior to &lt;code&gt;as_ref&lt;/code&gt; suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62684"&gt;resolve: Improve candidate search for unresolved macro suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62673"&gt;miri validation: Better error messages for dangling references&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62666"&gt;Cancel unemitted diagnostics during error recovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62639"&gt;Make &lt;code&gt;VaListImpl&amp;lt;'f&amp;gt;&lt;/code&gt; invariant over &lt;code&gt;'f&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62596"&gt;Add &lt;code&gt;Option::expect_none(msg)&lt;/code&gt; and &lt;code&gt;unwrap_none()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/770"&gt;stdarch: Add ARM Neon vmvn_&lt;em&gt;/vmvnq_&lt;/em&gt; bitwise not intrinsics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7084"&gt;cargo: Add support for multiple --features options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7146"&gt;cargo: Optimize runtime of &lt;code&gt;#[cargo_test_macro]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2574"&gt;SIMD vectors in FFI&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/62672"&gt;Deprecate &lt;code&gt;try!&lt;/code&gt; macro&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61884"&gt;Stablize Euclidean Modulo (feature euclidean_division)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/60987"&gt;Tracking issue for unstable &lt;code&gt;--json-rendered&lt;/code&gt; flag&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2730"&gt;Fetching cargo registry tokens from external processes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2729"&gt;General floating point formatting in Debug with &lt;code&gt;{:g?}&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2728"&gt;Stabilize volatile copy and set functions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="africa"&gt;Africa&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/dgqmbryzlbkb/"&gt;Aug  7. Johannesburg, ZA - Johannesburg Rust Meetup - futures&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Seoul-Meetup/events/srxvzqyzkbfc/"&gt;Jun 25. Seoul, KR - Seoul Rust Meetup, Hapjeong&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.com/e/rust-meetup-tickets-65358532129"&gt;Aug 10. Singapore, SG - Rust Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/259480991/"&gt;Aug  5. Auckland, NZ - Rust AKL August - Rust usage in Firefox&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gettogether.community/events/1763/3-hack-and-learn-shackspace-stuttgart/"&gt;Jul 26. Stuttgart, DE - Rust Meetup Stuttgart - Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-NERF/events/263163435/"&gt;Aug  7. Erlangen, DE - Rust Franken Meetup #1&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzlbkb/"&gt;Aug  7. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmyzkbnc/"&gt;Jul 30. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/PDXRust/events/263383260/"&gt;Aug  7. Portland, OR, US - PDXRust - Trees = Boxes + Enums + Iterators&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzlbkb/"&gt;Aug  7. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/263267320/"&gt;Aug  8. San Diego, CA, US - San Diego Rust August Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dbcfrpyzlblb/"&gt;Aug  8. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/kkzkxqyzlbkb/"&gt;Aug  7. Atlanta, GA, US - Grab a beer with fellow Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/mffbtpyzlbkb/"&gt;Aug  7. Indianapolis, IN, US - Indy.rs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="south-america"&gt;South America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Sao-Paulo-Meetup/events/262488375"&gt;Jul 27. Sao Paulo, BR - Rust SP - Encontro Julho 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/neuralink/efb72bf6-5a55-434e-a0fd-9197f8485b55"&gt;Infrastructure Engineer at Neuralink, San Francisco, US&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/cf7hf1/red_sift_looking_for_a_rust_developerc/"&gt;Rust Developer at Red Sift, London, UK or remote&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tenx.workable.com/jobs/689264"&gt;Software Engineer at TenX, Singapore&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iota.bamboohr.com/jobs/view.php?id=90"&gt;Senior Software Engineer (Rust) at IOTA, Remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Roses are red,
Rust-lang is fine,
&lt;code&gt;cannot borrow \&lt;/code&gt;i` as mutable more than once at a time`&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://twitter.com/MyDeathMachine/status/1151957842934599680"&gt;Joseph Lyons on twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/666"&gt;Jelte Fennema&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/ch9f54/this_week_in_rust_296/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 295</title><link href="https://this-week-in-rust.org/blog/2019/07/16/this-week-in-rust-295/" rel="alternate"></link><updated>2019-07-16T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-07-16:blog/2019/07/16/this-week-in-rust-295/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://msrc-blog.microsoft.com/2019/07/16/a-proactive-approach-to-more-secure-code/"&gt;Microsoft Security Response Center endorses the use of Rust for safe systems programming&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mozilla.org/nnethercote/2019/07/17/how-to-speed-up-the-rust-compiler-in-2019/"&gt;How to speed up the Rust compiler in 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/cd522f/what_the_hardware_does_is_not_what_your_program/"&gt;"What the hardware does" is not what your program does: Uninitialized memory&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nora.codes/post/what-is-rusts-unsafe/"&gt;What is Rust's unsafe&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;&lt;a href="http://smallcultfollowing.com/babysteps/blog/2019/07/10/aic-unbounded-queues-and-lang-design/"&gt;AiC: Unbounded queues and lang design&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://willspeak.me/2019/07/10/lisp-in-two-days-with-rust.html"&gt;Creating a simple LISP in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustacean-station.org/episode/000-rust-1.36.0/"&gt;Announcing Rustacean Station and Rust 1.36&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hotforknowledge.com/2019/07/14/6-rust-the-new-c/"&gt;Rust as the new C. Part 1: building and combining native libs into C API&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amethyst.rs/posts/tools-for-2d-games"&gt;New tools for 2D game development&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.steadylearner.com/blog/read/Fullstack-Rust-with-Yew"&gt;Fullstack Rust with Yew&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gfx-rs.github.io/2019/07/13/javelin.html"&gt;gfx-rs Javelin project kick-off&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ly.lee/visual-programming-with-embedded-rust-yes-we-can-with-apache-mynewt-and-google-blockly-8b67ef7412d7"&gt;Visual programming in embedded Rust with Apache Mynewt and Google Blockly&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/cbvhq9/stream_combinators_implemented_using_for_await/"&gt;Stream combinators implemented using for await syntax&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/rust-summer-classes/"&gt;Ferrous Systems: Rust Summer Classes in Berlin&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rustfest.eu/barcelona-announcement"&gt;Tickets are now available RustFest Barcelona - 9-12 November 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/overloadable"&gt;overloadable&lt;/a&gt;, a crate to provides you with the capabilities to overload your functions in a similar style to C# or C++, including support for meta attributes, type parameters and constraints, and visibility modifiers
Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/585"&gt;Stevensonmt&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperium/hyper/milestone/5"&gt;std::future support merged to hyper master. There's now smaller tasks if you'd like to join in&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;235 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-07-08..2019-07-15"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62435"&gt;Use const generics for array impls [part 1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/llvm-project/pull/19"&gt;Update to LLVM 9&lt;/a&gt; (ongoing work)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62463"&gt;Update LLVM: apply patch necessary for ThinLTO on RISC-V&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62339"&gt;Use visitor for &lt;code&gt;#[structural_match]&lt;/code&gt; check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62221"&gt;Normalize projections appearing in &lt;code&gt;impl Trait&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62090"&gt;typeck: Merge opaque type inference logic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60266"&gt;Fact generation for liveness calculations in Polonius&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60458"&gt;Add key and value methods to DebugMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62577"&gt;Add an AtomicCell abstraction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62431"&gt;Add messages to &lt;code&gt;Option&lt;/code&gt;'s and &lt;code&gt;Result&lt;/code&gt;'s &lt;code&gt;must_use&lt;/code&gt; annotation for &lt;code&gt;is_*&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61224"&gt;Prevent Vec::drain_filter from double dropping on panic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61953"&gt;Add &lt;code&gt;impl&amp;lt;T&amp;gt; FromIterator&amp;lt;T&amp;gt; for Arc/Rc&amp;lt;[T]&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62278"&gt;Add Iterator::partition_in_place() and is_partitioned()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62481"&gt;Use &lt;code&gt;fold&lt;/code&gt; in &lt;code&gt;Iterator::last&lt;/code&gt; default implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-guide/pull/350"&gt;rustc guide: Add humor appendix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/62672"&gt;Deprecate &lt;code&gt;try!&lt;/code&gt; macro&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/62528"&gt;Add joining slices of slices with a slice separator, not just a single item&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61884"&gt;Stablize Euclidean Modulo (feature euclidean_division)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/60987"&gt;Tracking issue for unstable &lt;code&gt;--json-rendered&lt;/code&gt; flag&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/60419"&gt;Tracking issue for stable &lt;code&gt;-C emit-artifact-notifications&lt;/code&gt; rustc flag&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2725"&gt;Target feature runtime&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2722"&gt;Allow Overloading || and &amp;amp;&amp;amp;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="africa"&gt;Africa&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Nairobi/events/259650701/"&gt;Jul 20. Nairobi, KE - Rust Nairobi - HACK &amp;amp; LEARN: Exercism Edition&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/mad-rs/events/263158278"&gt;Jul 20. Chennai, IN - Rust Chennai - Monthly meetup - July&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wellington/events/262407494/"&gt;Jul 23. Wellington, NZ - Rust Wellington - Talk: 5 Essential Traits&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Seoul-Meetup/events/srxvzqyzkbfc/"&gt;Jun 25. Seoul, KR - Seoul Rust Meetup, Hapjeong&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.com/e/rust-meetup-tickets-65358532129"&gt;Aug 10. Singapore, SG - Rust Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzkbgc/"&gt;Jul 24. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-London-User-Group/events/262999277/"&gt;Jul 24. London, GB - Rust London User Group - LDN Talks July 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-language-milano/events/263140153"&gt;Jul 24. Milano, IT - Rust Language Milano - Rust Exercises&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-NERF/events/263163435/"&gt;Aug 07. Erlangen, DE - Rust Franken Meetup #1&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-MX/events/262960131/"&gt;Jul 24. Mexico City, MX - Rust MX - Reunión Julio: Rust y Big data&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpyzkbdc/"&gt;Jul 24. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Ann-Arbor-Rust-Meetup/events/zdfscryzkbgc/"&gt;Jul 24. Ann Arbor, MI, US - Ann Arbor Rust Meetup - Monthly Gathering&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzkbgc/"&gt;Jul 24. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmyzkbnc/"&gt;Jul 30. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="south-america"&gt;South America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Sao-Paulo-Meetup/events/262488375"&gt;Jul 27. Sao Paulo, BR - Rust SP - Encontro Julho 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://careers.mozilla.org/position/gh/1728803/"&gt;Graphics Engineer at Mozilla, Toronto, CA&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/bitski/jobs/366874-backend-engineer"&gt;Backend Engineer at Bitski, San Francisco, US&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust is 5 languages stacked on top of each other, except that instead of ending up like 5 children under a trenchcoat, they end up like the power rangers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://reddit.com/r/rust/comments/cb49lb/coworker_rust_doesnt_offer_anything_c_doesnt/etdddwt/"&gt;reuvenpo on /r/rust&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/666"&gt;Jelte Fennema&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/cec8jx/this_week_in_rust_295/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 294</title><link href="https://this-week-in-rust.org/blog/2019/07/09/this-week-in-rust-294/" rel="alternate"></link><updated>2019-07-09T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-07-09:blog/2019/07/09/this-week-in-rust-294/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;🎈🎉 &lt;a href="https://blog.rust-lang.org/2019/07/04/Rust-1.36.0.html"&gt;Announcing Rust 1.36.0&lt;/a&gt;. 🎉🎈&lt;/li&gt;
&lt;li&gt;&lt;a href="http://smallcultfollowing.com/babysteps/blog/2019/07/08/async-await-status-report-2/"&gt;Async-await status report #2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://os.phil-opp.com/status-update/2019-06-04/"&gt;Writing an OS in Rust: Updates in June 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/edmundsmith/855fcf0cb35dd467c29a9350481f0ecf"&gt;Method for emulating higher-kinded types in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nora.codes/tutorial/speedy-desktop-apps-with-gtk-and-rust/"&gt;Speedy desktop apps with GTK and Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/perlin-network/build-a-decentralized-chat-using-javascript-rust-webassembly-c775f8484b52"&gt;Build a decentralized chat using JavaScript &amp;amp; Rust (WebAssembly)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ly.lee/safer-simpler-embedded-rust-with-apache-mynewt-on-stm32-blue-pill-d8fcb41969ac"&gt;Safer, simpler embedded Rust with Apache Mynewt&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's CotW is not a crate but &lt;a href="https://rustexp.lpil.uk/"&gt;Rustexp&lt;/a&gt; site, a Rust regular expression editor &amp;amp; tester.
Thanks to &lt;a href="https://github.com/cmr/this-week-in-rust/issues/939"&gt;carols10cents&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jplatte/js_int/issues/7"&gt;js_int: wasm_bindgen support&lt;/a&gt;. js_int is JavaScript-interoperable integer types for Rust.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jplatte/js_int/issues/8"&gt;js_int: Add a feature that adds a kind method to ParseIntError&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jplatte/js_int/issues/10"&gt;js_int: Implement &lt;code&gt;std::iter::Sum&lt;/code&gt; for &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;UInt&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;237 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-07-01..2019-07-08"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61268"&gt;Stabilize support for Profile-guided Optimization&lt;/a&gt; (Hooray!)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62388"&gt;Break out of the correct number of scopes in loops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62383"&gt;Improve error span for async type inference error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61988"&gt;Remove &lt;code&gt;hir::ExprKind::While&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61775"&gt;Generalize impl trait to permit multiple lifetime bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62042"&gt;Support stability and deprecation checking for all macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62356"&gt;Implement &lt;code&gt;Option::contains&lt;/code&gt; and &lt;code&gt;Result::contains&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62316"&gt;implement &lt;code&gt;Iterator::last&lt;/code&gt; via &lt;code&gt;DoubleEndedIterator::next_back&lt;/code&gt; for some libcore types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62196"&gt;Add &lt;code&gt;Vec::leak&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62150"&gt;Implement &lt;code&gt;mem::&lt;/code&gt;{&lt;code&gt;zeroed&lt;/code&gt;, &lt;code&gt;uninitialized&lt;/code&gt;} in terms of &lt;code&gt;MaybeUninit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62064"&gt;&lt;code&gt;nth_back&lt;/code&gt; for &lt;code&gt;chunks_exact&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62473"&gt;Only call the closure parameter of &lt;code&gt;Iterator::is_sorted_by_key&lt;/code&gt; once per item&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/60602"&gt;Tracking issue for the &lt;code&gt;cast&lt;/code&gt; method of raw pointers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61879"&gt;Stabilize todo macro&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61953"&gt;Add &lt;code&gt;impl&amp;lt;T&amp;gt; FromIterator&amp;lt;T&amp;gt; for Arc/Rc&amp;lt;[T]&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2719"&gt;Private registry authentication&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wellington/events/262407494/"&gt;Jul 23. Wellington, NZ - Rust Wellington - Talk: 5 Essential Traits&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-munich/events/261925415/"&gt;Jun 17. Munich, DE - Rust Munich - Rust Mini Unconference V2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Mozilla-Torino/events/258593192"&gt;Jul 18. Turin, IT - Mozilla Torino - Gruppo di studio Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzkbgc/"&gt;Jul 24. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dbcfrpyzkbpb/"&gt;Jul 11. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/262650307/"&gt;Jul 11. San Diego, CA, US - San Diego Rust July Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-in-Blockchain-San-Francisco/events/262773260/"&gt;Jul 17. San Francisco, CA, US - Rust in Blockchain San Francisco - In Rust We Trust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/PDXRust/events/262623734/"&gt;Jul 17. Portland, OR, US - PDXRust - PDX Rust Hack Night (not the usual meetup)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-MX/events/262960131/"&gt;Jul 24. Mexico City, MX - Rust MX - Reunión Julio: Rust y Big data&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpyzkbdc/"&gt;Jun 24. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/bitski/jobs/366874-backend-engineer"&gt;Backend Engineer at Bitski, San Francisco, US&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Are we trying to steal the JVM’s “compile once run everywhere” concept?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;No, we just borrow it mutably.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://reddit.com/r/rust/comments/cap8sy/rust_136_stabilized_the_wasm32wasi_target/etahiix/?context=8&amp;amp;depth=9"&gt;minno &amp;amp; llogiq on /r/rust&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/664"&gt;Will Page&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/cb7u4q/this_week_in_rust_294/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 293</title><link href="https://this-week-in-rust.org/blog/2019/07/02/this-week-in-rust-293/" rel="alternate"></link><updated>2019-07-02T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-07-02:blog/2019/07/02/this-week-in-rust-293/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://os.phil-opp.com/heap-allocation/"&gt;Writing an OS in Rust: Heap allocation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.pnkfx.org/blog/2019/06/26/breaking-news-non-lexical-lifetimes-arrives-for-everyone/"&gt;Non-lexical lifetimes arrives for everyone&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/rust-analyzer-status-opencollective/"&gt;Status of rust-analyzer: Achievements and Open Collective&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jbp.io/2019/07/01/rustls-vs-openssl-performance.html"&gt;TLS performance: rustls versus OpenSSL&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.paulme.ng/posts/2019-06-30-optimizing-jieba-rs-to-be-33percents-faster-than-cppjieba.html"&gt;Optimizing jieba-rs to be 33% faster than cppjieba&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://brave.com/improved-ad-blocker-performance/"&gt;Brave improves its ad-blocker performance by 69x with new engine implementation in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nelari.us/post/raytracer_with_rust_and_zig/"&gt;Writing a small ray tracer in Rust and Zig&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.geemili.xyz/blog/rust-app-on-termux-with-nix/"&gt;Compiling Rust apps for Termux with nix-shell&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/luzero/building-crates-so-they-look-like-c-abi-libraries-1ibn"&gt;Building crates so they look like C(ABI) libraries&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/maplant/aljabar"&gt;aljabar&lt;/a&gt;, an extremely generic linear algebra libary. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/574"&gt;Vikrant&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tikv/tikv/issues/4960"&gt;TiKV: Replace Debug formatting with Display formatting in errors, panics and logs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/m4b/goblin/issues/120"&gt;Goblin: Crash on malformed ELF file&lt;/a&gt;. Goblin is an impish, cross-platform binary parsing crate, written in Rust.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;gfx-rs introduces the &lt;a href="https://github.com/gfx-rs/gfx/issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly"&gt;contributor-friendly&lt;/a&gt; label for issues that are appropriately inviting to new members:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gfx-rs/gfx/issues/2783"&gt;Should have a way of telling whether backend is supported&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gfx-rs/gfx/issues/2547"&gt;A comparative table of HAL features available per backend&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;(hal) &lt;a href="https://github.com/gfx-rs/gfx/issues/2862"&gt;Consider removing typed command buffers, pools and queues&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;(metal) &lt;a href="https://github.com/gfx-rs/gfx/issues/2860"&gt;Try Kudzu instead of storage-map&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;(dx12) &lt;a href="https://github.com/gfx-rs/gfx/issues/2589"&gt;Support VertexIndex and InstanceIndex semantics&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;(dx12) &lt;a href="https://github.com/gfx-rs/gfx/issues/2877"&gt;Pipeline caches&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;196 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-06-24..2019-07-01"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/59722"&gt;Clean up query cache code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62094"&gt;Don't ICE on mutable zst slices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62075"&gt;syntax: Remove &lt;code&gt;ast::Guard&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62241"&gt;Always parse &lt;code&gt;async unsafe fn&lt;/code&gt; + properly ban in 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62102"&gt;Call out explicitly that general read needs to be called with an initialized buffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62055"&gt;Fix error counting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62012"&gt;Use ecx for const-prop local storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61572"&gt;Fix HIR visit order&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62228"&gt;Extend the &lt;code&gt;#[must_use]&lt;/code&gt; lint to boxed types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62235"&gt;Extend the &lt;code&gt;#[must_use]&lt;/code&gt; lint to arrays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61872"&gt;Clean up MIR drop generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62063"&gt;Use a more efficient iteration order for backward dataflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62062"&gt;Use a more efficient iteration order for forward dataflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62164"&gt;save-analysis: Use buffered writes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62043"&gt;Remove &lt;code&gt;FnBox&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62224"&gt;rustdoc: Remove unused derives and variants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61459"&gt;rustdoc: Prevent panic when sysroot cannot be computed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/backtrace-rs/pull/217"&gt;backtrace: More improvements to gimli support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup.rs/pull/1906"&gt;rustup: Switch to &lt;code&gt;std::fs::read_to_string&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2359"&gt;RFC 2359: Finalize syntax for slice patterns with subslices&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2707"&gt;RFC 2707: Make &lt;code&gt;..&lt;/code&gt; a pattern syntactically&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2515"&gt;Permit impl Trait in type aliases&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2696"&gt;Add key and value methods to DebugMap&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61879"&gt;Stabilize todo macro&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61953"&gt;Add &lt;code&gt;impl&amp;lt;T&amp;gt; FromIterator&amp;lt;T&amp;gt; for Arc/Rc&amp;lt;[T]&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust.connpass.com/event/133657/"&gt;Jul  7. Tokyo, JP - Tokyo Rust Meetup - Rust LT #6&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSeyDIRlKFE0h4gJ8cxL6tz_3G4p7k4okZZBNhGbuitlOqBJOg/viewform"&gt;Jul 10. Petaling Jaya, MY - Rust Meetup July 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustgbg/events/262786615/"&gt;Jul  9. Göteborg, SE - Rust Gbg — July 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzkbnb/"&gt;Jul 10. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Mozilla-Torino/events/258593192"&gt;Jul 18. Turin, IT - Mozilla Torino - Gruppo di studio Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gfnncryzkbmb/"&gt;Jul  9. Redmond, WA, US - Seattle Rust Meetup - Monthly meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzkbnb/"&gt;Jul 10. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dbcfrpyzkbpb/"&gt;Jul 11. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/262650307/"&gt;Jul 11. San Diego, CA, US - San Diego Rust July Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-in-Blockchain-San-Francisco/events/262773260/"&gt;Jul 17. San Francisco, CA, US - Rust in Blockchain San Francisco - In Rust We Trust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Python and Go pick up your trash for you. C lets you litter everywhere, but throws a fit when it steps on your banana peel. Rust slaps you and demands that you clean up after yourself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="http://www.nicolas-hahn.com/python/go/rust/programming/2019/07/01/program-in-python-go-rust/"&gt;Nicholas Hahn on his blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/662"&gt;UtherII&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/c8t9d7/this_week_in_rust_293/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry></feed>