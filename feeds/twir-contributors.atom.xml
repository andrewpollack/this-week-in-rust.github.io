<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>This Week in Rust - TWiR Contributors</title><link href="https://this-week-in-rust.org/" rel="alternate"></link><link href="https://this-week-in-rust.org/feeds/twir-contributors.atom.xml" rel="self"></link><id>https://this-week-in-rust.org/</id><updated>2024-08-28T00:00:00-04:00</updated><entry><title>This Week in Rust 562</title><link href="https://this-week-in-rust.org/blog/2024/08/28/this-week-in-rust-562/" rel="alternate"></link><published>2024-08-28T00:00:00-04:00</published><updated>2024-08-28T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2024-08-28:/blog/2024/08/28/this-week-in-rust-562/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://x.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on X (formerly Twitter) or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://x.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on X (formerly Twitter) or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt; and archives can be viewed at &lt;a href="https://this-week-in-rust.org/"&gt;this-week-in-rust.org&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Want TWIR in your inbox? &lt;a href="https://this-week-in-rust.us11.list-manage.com/subscribe?u=fd84c1c757e02889a9b08d289&amp;amp;id=0ed8b72485"&gt;Subscribe here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3 id="official"&gt;&lt;a class="toclink" href="#official"&gt;Official&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2024/08/26/council-survey.html"&gt;2024 Leadership Council Survey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2024/08/22/embedded-wg-micro-survey.html"&gt;Embedded Working Group Community Micro Survey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="foundation"&gt;&lt;a class="toclink" href="#foundation"&gt;Foundation&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/what-s-in-store-at-rustconf-2024/"&gt;What's in Store at RustConf 2024&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-cliff.org/blog/2.5.0"&gt;git-cliff 2.5.0 is released!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/ferrocene-24-08-0/"&gt;Ferrocene 24.08.0 now available!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/wildcard-rules/"&gt;Go wild: Wildcard support in Rules and a new open-source wildcard crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notgull.net/announcing-dozer/"&gt;Why am I writing a Rust compiler in C?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/en/blog/134/current-zlib-rs-performance"&gt;Current zlib-rs performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elastio.github.io/bon/blog/bon-builder-generator-v2-release"&gt;Bon builder generator 2.0 release 🎉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.meilisearch.com/meilisearch-1-10/"&gt;Meilisearch 1.10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://davidlattimore.github.io/posts/2024/08/27/rust-dylib-rabbit-holes.html"&gt;Rust dylib rabbit holes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://purplesyringa.moe/blog/i-sped-up-serde-json-strings-by-20-percent/"&gt;I sped up serde_json strings by 20%&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.influxdata.com/blog/faster-queries-with-stringview-part-one-influxdb/"&gt;Using StringView / German Style Strings to Make Queries Faster: Part 1 - Reading Parquet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.shuttle.rs/blog/2024/08/23/rust-as-my-first-language"&gt;Rust as My First Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.guillaume-gomez.fr/articles/2024-08-17+Doctests+-+How+were+they+improved%3F"&gt;Doctests - How were they improved?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lucumr.pocoo.org/2024/8/27/minijinja/"&gt;MiniJinja: Learnings from Building a Template Engine in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwn.net/Articles/982868/"&gt;Standards for use of unsafe Rust in the kernel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://corrode.dev/blog/cpp-rust-interop/"&gt;Rust vs C++: A Real-World Perspective (interview with Tyler Weaver)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://howdytx.technology/unix-history-the-dc-calculator/"&gt;A Piece of UNIX History in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/rust-is-bad-for-servers"&gt;Why Amazon, Cloduflare and Discord are building servers in Rust but you should probably not&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.snoyman.com/blog/2024/08/let-the-api-protect-you/"&gt;Let the API protect you&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jrfernandez.com/packaging-rust-program-for-fedora"&gt;Packaging a Rust Program for Fedora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.erikhorton.com/2024/08/25/building-a-bevy-plugin-for-rolling-dice.html"&gt;Building a Bevy Plugin for Rolling Dice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=mNOLaw-_Buc"&gt;Implementing a Lox interpreter in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=eQuSA9kSLAY"&gt;Command line tools: Implementing wc in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=bolScvh4x7I"&gt;Explore Linux TTY, process, signals w/ Rust - Part 1/3 (background info)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="research"&gt;&lt;a class="toclink" href="#research"&gt;Research&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ieeexplore.ieee.org/abstract/document/10635971"&gt;On the Impact of Memory Safety on Fast Network I/O&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;&lt;a class="toclink" href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://thenewstack.io/can-darpas-tractor-pull-c-to-rust-for-memory-safe-overhaul/"&gt;Can DARPA’s TRACTOR Pull C to Rust for Memory-Safe Overhaul?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hashblog.thepolyglotprogrammer.com/crafting-a-blockchain-in-go-and-rust-a-comparative-journey-private-keys-public-keys-and-signatures-part-1"&gt;Crafting a Blockchain in Go and Rust: A Comparative Journey — Private keys, Public Keys and Signatures [Part 1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=WL0jY51PQR8"&gt;A Multiplatform Mobile Navigation SDK with Rust at the Core&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/c410-f3r/wtx"&gt;wtx&lt;/a&gt;, a batteries-included web application framework.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1333"&gt;Caio&lt;/a&gt; for the self-suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="calls-for-testing"&gt;&lt;a class="toclink" href="#calls-for-testing"&gt;Calls for Testing&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No calls for testing were issued this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust"&gt;&lt;a class="toclink" href="#rust"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/call-for-testing"&gt;Rust&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No calls for testing were issued this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rustup"&gt;&lt;a class="toclink" href="#rustup"&gt;&lt;a href="https://github.com/rust-lang/rustup/labels/call-for-testing"&gt;Rustup&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No calls for testing were issued this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="call-for-participation-projects-and-speakers"&gt;&lt;a class="toclink" href="#call-for-participation-projects-and-speakers"&gt;Call for Participation; projects and speakers&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="cfp-projects"&gt;&lt;a class="toclink" href="#cfp-projects"&gt;CFP - Projects&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No Calls for participation were submitted this week.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://github.com/rust-lang/this-week-in-rust?tab=readme-ov-file#call-for-participation-guidelines"&gt;here&lt;/a&gt; or through a &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;PR to TWiR&lt;/a&gt; or by reaching out on &lt;a href="https://x.com/ThisWeekInRust"&gt;X (formerly Twitter)&lt;/a&gt; or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;Mastodon&lt;/a&gt;!&lt;/p&gt;
&lt;h3 id="cfp-events"&gt;&lt;a class="toclink" href="#cfp-events"&gt;CFP - Events&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you a new or experienced speaker looking for a place to share something cool? This section highlights events that are being planned and are accepting submissions to join their event as a speaker.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No Calls for papers or presentations were submitted this week.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you are an event organizer hoping to expand the reach of your event, please submit a link to the website through a &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;PR to TWiR&lt;/a&gt; or by reaching out on &lt;a href="https://x.com/ThisWeekInRust"&gt;X (formerly Twitter)&lt;/a&gt; or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;Mastodon&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;429 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2024-08-20..2024-08-27"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129490"&gt;add Trusty OS as tier 3 target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129179"&gt;CFI: erase regions when projecting ADT to its transparent non-1zst field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129373"&gt;add missing module flags for CFI and KCFI sanitizers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129487"&gt;&lt;code&gt;repr_transparent_external_private_fields&lt;/code&gt;: special-case some std types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128735"&gt;add a special case for &lt;code&gt;CStr&lt;/code&gt;/&lt;code&gt;CString&lt;/code&gt; in the &lt;code&gt;improper_ctypes&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129332"&gt;avoid extra &lt;code&gt;cast()&lt;/code&gt;s after &lt;code&gt;CStr::as_ptr()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129508"&gt;const checking: properly compute the set of transient locals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129309"&gt;ctfe: make CompileTimeInterpCx type alias public&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128467"&gt;detect &lt;code&gt;*&lt;/code&gt; operator on &lt;code&gt;!Sized&lt;/code&gt; expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129250"&gt;do not ICE on non-ADT rcvr type when looking for crate version collision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129270"&gt;don't consider locals to shadow inner items' generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129239"&gt;don't generate functions with the &lt;code&gt;rustc_intrinsic_must_be_overridden&lt;/code&gt; attribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129417"&gt;don't trigger refinement lint if predicates reference errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129414"&gt;fix extern crates not being hidden with &lt;code&gt;doc(hidden)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129408"&gt;fix handling of macro arguments within the &lt;code&gt;dropping_copy_types&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/126985"&gt;implement &lt;code&gt;-Z embed-source&lt;/code&gt; (DWARFv5 source code embedding extension)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128941"&gt;improve diagnostic-related lints: &lt;code&gt;untranslatable_diagnostic&lt;/code&gt; &amp;amp; &lt;code&gt;diagnostic_outside_of_impl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129505"&gt;interpret: immTy: tighten sanity checks in offset logic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128662"&gt;lint on tail expr drop order change in Edition 2024&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129353"&gt;llvm-wrapper: adapt for LLVM 20 API changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129339"&gt;make &lt;code&gt;ArgAbi::make_indirect_force&lt;/code&gt; more specific&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129199"&gt;make &lt;code&gt;writes_through_immutable_pointer&lt;/code&gt; a hard error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128935"&gt;more work on &lt;code&gt;zstd&lt;/code&gt; compression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129597"&gt;mv &lt;code&gt;build_reduced_graph_for_external_crate_res&lt;/code&gt; into Resolver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129588"&gt;pal/hermit: correctly round up microseconds in &lt;code&gt;Thread::sleep&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129501"&gt;panicking: improve hint for Miri's &lt;code&gt;RUST_BACKTRACE&lt;/code&gt; behavior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129070"&gt;point at explicit &lt;code&gt;'static&lt;/code&gt; obligations on a trait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129395"&gt;pretty-print own args of existential projections (dyn-Trait w/ GAT constraints)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129429"&gt;print the generic parameter along with the variance in dumps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129500"&gt;remove invalid &lt;code&gt;TyCompat&lt;/code&gt; relation for effects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129364"&gt;safe transmute: gracefully bubble-up layout errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128932"&gt;skip updating when external binding is existed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129374"&gt;use &lt;code&gt;assert_unsafe_precondition!&lt;/code&gt; in &lt;code&gt;AsciiChar::digit_unchecked&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129386"&gt;use a LocalDefId in ResolvedArg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127279"&gt;use old ctx if has same expand environment during decode span&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129288"&gt;use subtyping for &lt;code&gt;UnsafeFnPointer&lt;/code&gt; coercion, too&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3827"&gt;miri: &lt;code&gt;provenance_gc&lt;/code&gt;: fix comment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3748"&gt;miri: &lt;code&gt;readdir_r&lt;/code&gt; shim: assume FreeBSD v12+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3835"&gt;miri: avoid extra copy by using &lt;code&gt;retain_mut&lt;/code&gt; and moving the deletion into the closure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3847"&gt;miri: disable tree traversal optimization that is wrong due to lazy nodes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3836"&gt;miri: epoll: add a EINVAL case&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3829"&gt;miri: epoll: handle edge case for &lt;code&gt;epoll_ctl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3834"&gt;miri: fix a misleading comment in &lt;code&gt;tests/pass/tree_borrows/tree-borrows.rs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3840"&gt;miri: fix calling pipe, pipe2, socketpair with a pointer-to-array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3752"&gt;miri: implement SHA256 SIMD intrinsics on x86&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3833"&gt;miri: make Tree Borrows Provenance GC no longer produce stack overflows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128942"&gt;miri weak memory emulation: put previous value into initial store buffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127672"&gt;stabilize opaque type precise capturing (RFC 3617)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128596"&gt;stabilize &lt;code&gt;const_fn_floating_point_arithmetic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129294"&gt;stabilize &lt;code&gt;iter::repeat_n&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129276"&gt;stabilize feature &lt;code&gt;char_indices_offset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127945"&gt;implement &lt;code&gt;debug_more_non_exhaustive&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129091"&gt;add &lt;code&gt;Box::as_ptr&lt;/code&gt; and &lt;code&gt;Box::as_mut_ptr&lt;/code&gt; methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129382"&gt;add &lt;code&gt;const_cell_into_inner&lt;/code&gt; to &lt;code&gt;OnceCell&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129536"&gt;add &lt;code&gt;f16&lt;/code&gt; and &lt;code&gt;f128&lt;/code&gt; inline ASM support for &lt;code&gt;aarch64&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/126556"&gt;add a precondition check for &lt;code&gt;Layout::from_size_align_unchecked&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129377"&gt;add implementations for &lt;code&gt;unbounded_shl&lt;/code&gt;/&lt;code&gt;unbounded_shr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129321"&gt;change neutral element of &lt;code&gt;&amp;lt;fNN&lt;/code&gt; as &lt;code&gt;iter::Sum&amp;gt;&lt;/code&gt; to &lt;code&gt;neg_zero&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129416"&gt;library: move unstable API of &lt;code&gt;new_uninit&lt;/code&gt; to new features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129232"&gt;fix &lt;code&gt;thread::sleep&lt;/code&gt; Duration-handling for ESP-IDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127623"&gt;fix: &lt;code&gt;fs::remove_dir_all&lt;/code&gt;: treat internal ENOENT as success&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129449"&gt;put &lt;code&gt;Pin::as_deref_mut&lt;/code&gt; in impl &lt;code&gt;Pin&amp;lt;Ptr&amp;gt;&lt;/code&gt; / rearrange Pin methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129323"&gt;implement &lt;code&gt;ptr::fn_addr_eq&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/534"&gt;hashbrown: deprecate the raw entry API in favor of &lt;code&gt;HashTable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/535"&gt;hashbrown: rework the Entry API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14428"&gt;cargo: mdman: Normalize newlines when rendering options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14445"&gt;cargo resolve: Dont show locking workspace members&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14408"&gt;cargo: be more permissive while packaging unpublishable crates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14305"&gt;cargo: add &lt;code&gt;matches_prerelease&lt;/code&gt; semantic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14432"&gt;cargo: -Cmetadata includes whether extra rustflags is same as host&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14425"&gt;cargo: doctest respects Cargo's color options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14412"&gt;cargo: limiting pre-release match semantics to use only on &lt;code&gt;OptVersionReq::Req&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14453"&gt;cargo: log details of failure if no errors were seen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14436"&gt;cargo: more helpful missing feature error message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129426"&gt;rustdoc-search: use tighter json for names and parents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129284"&gt;rustdoc: animate the &lt;code&gt;:target&lt;/code&gt; highlight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129430"&gt;rustdoc: show exact case-sensitive matches first&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129560"&gt;rustdoc: Generate source link on impl associated types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13290"&gt;clippy: &lt;code&gt;declare_interior_mutable_const&lt;/code&gt;: Ignore pointer types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/12993"&gt;clippy: add new &lt;code&gt;too_long_first_doc_paragraph&lt;/code&gt; first paragraph lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13294"&gt;clippy: add new lint: &lt;code&gt;used_underscore_items&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13300"&gt;clippy: check &lt;code&gt;std::panic::panic_any&lt;/code&gt; in panic lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13285"&gt;clippy: diverging subexpression lint should not fire on &lt;code&gt;todo!()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13311"&gt;clippy: fix &lt;code&gt;manual_range_patterns&lt;/code&gt; case with one element at OR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13241"&gt;clippy: fix confusing message in &lt;code&gt;double_must_use&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13299"&gt;clippy: fix suggestion &lt;code&gt;unnecessary_lazy_eval&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13113"&gt;clippy: ignore underscore-prefixed args for &lt;code&gt;needless_pass_by_value&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13091"&gt;clippy: rewrite &lt;code&gt;empty_line_after_doc_comments&lt;/code&gt; and &lt;code&gt;empty_line_after_outer_attr&lt;/code&gt;, move them from &lt;code&gt;nursery&lt;/code&gt; to &lt;code&gt;suspicious&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13244"&gt;clippy: start removing &lt;code&gt;snippet_opt&lt;/code&gt; in favor of &lt;code&gt;get_source_text&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17757"&gt;rust-analyzer: add new assist &lt;code&gt;toggle_macro_delimiter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17857"&gt;rust-analyzer: allow declaring cfg groups in rust-project.json, to help sharing common cfgs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17913"&gt;rust-analyzer: add workspace level config to ratoml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17963"&gt;rust-analyzer: always show error lifetime arguments as &lt;code&gt;'_&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17955"&gt;rust-analyzer: don't enable the search fast path for short associated functions when a search scope is set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17973"&gt;rust-analyzer: expand proc-macros in workspace root, not package root&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17970"&gt;rust-analyzer: fix "Unwrap block" assist with block modifiers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17962"&gt;rust-analyzer: fix Return Type Syntax to include &lt;code&gt;..&lt;/code&gt; (i.e. &lt;code&gt;method(..)&lt;/code&gt; and not &lt;code&gt;method()&lt;/code&gt;) as specified in the RFC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17956"&gt;rust-analyzer: fix metadata retrying eating original errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17958"&gt;rust-analyzer: fix trait method completions not acknowledging &lt;code&gt;Deref&lt;/code&gt; impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17943"&gt;rust-analyzer: improve proc-macro panic message and workspace loading failure diagnostic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17912"&gt;rust-analyzer: run flycheck without &lt;code&gt;rev_deps&lt;/code&gt; when target is specified&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17949"&gt;rust-analyzer: rust-analyzer should watch build files from rust-project.json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17948"&gt;rust-analyzer: wrong &lt;code&gt;Self: Sized&lt;/code&gt; predicate for trait assoc items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17939"&gt;rust-analyzer: wrong &lt;code&gt;Sized&lt;/code&gt; predicate for &lt;code&gt;generic_predicates_for_param&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17942"&gt;rust-analyzer: implement floating point casts in const eval&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17927"&gt;rust-analyzer: perf: speed up search for short associated functions, especially very common identifiers such as &lt;code&gt;new&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17930"&gt;rust-analyzer: remove the ability to configure the user config path&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;!-- Perf results go here --&gt;

&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs_1"&gt;&lt;a class="toclink" href="#rfcs_1"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3674"&gt;crates.io: Remove dev-dependencies from the index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3662"&gt;Mergeable rustdoc cross-crate info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3637"&gt;Guard Patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;h5 id="rust_1"&gt;&lt;a class="toclink" href="#rust_1"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Rust&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/128183"&gt;Proposal: stabilize &lt;code&gt;const_refs_to_static&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/129021"&gt;Check WF of source type's signature on fn pointer cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/120736"&gt;rustdoc: add header map to the table of contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/127474"&gt;doc: Make block of inline Deref methods foldable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="cargo"&gt;&lt;a class="toclink" href="#cargo"&gt;&lt;a href="https://github.com/rust-lang/cargo/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Cargo&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Cargo Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="language-team"&gt;&lt;a class="toclink" href="#language-team"&gt;&lt;a href="https://github.com/rust-lang/lang-team/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc+"&gt;Language Team&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Language Team Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="language-reference"&gt;&lt;a class="toclink" href="#language-reference"&gt;&lt;a href="https://github.com/rust-lang/reference/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Language Reference&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Language Reference RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="unsafe-code-guidelines"&gt;&lt;a class="toclink" href="#unsafe-code-guidelines"&gt;&lt;a href="https://github.com/rust-lang/unsafe-code-guidelines/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Unsafe Code Guidelines&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Unsafe Code Guideline Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3683"&gt;&lt;code&gt;#[derive(Default)]&lt;/code&gt; on enum variants with fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3681"&gt;[RFC] Default field values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3680"&gt;Simplify lightweight clones, including into closures and async blocks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2024-08-28 - 2024-09-25 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-28 | Virtual (Tel Aviv, IL) | &lt;a href="https://www.meetup.com/code-mavens/"&gt;Code Mavens&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/code-mavens/events/302151487/"&gt;&lt;strong&gt;Command Line Tools: Implementing wc in Rust (English, Virtual)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://meet.jit.si/RustHackAndLearnBerlin"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/rust-berlin/events/298633267/"&gt;&lt;strong&gt;Mirror: Rust Hack n Learn Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Virtual (Tel Aviv, IL) | &lt;a href="https://www.meetup.com/code-mavens/"&gt;Code Mavens&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/code-mavens/events/302391142/"&gt;&lt;strong&gt;Rust Source Code Reading: The thousands crate (English)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-03 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/302007365/"&gt;&lt;strong&gt;Buffalo Rust User Group&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-04 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/300328029/"&gt;&lt;strong&gt;Indy.rs - Typestate Pattern in Rust: With a Strict Builder Example&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | Virtual | &lt;a href="https://lu.ma/user/usr-dkk9KnFvsvZEb7k"&gt;LambdaClass&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lu.ma/uh1qpox0"&gt;&lt;strong&gt;Meetup Rust Septiembre [Spanish]&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | Virtual (Charlottesville, NC, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/298897957/"&gt;&lt;strong&gt;Crafting Interpreters in Rust Collaboratively&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/300820268/"&gt;&lt;strong&gt;Rust Nürnberg online&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-10 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/dallasrust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallasrust/events/299346981/"&gt;&lt;strong&gt;Second Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-10 - 2024-09-13 | Hybrid: Virtual and In-Person (Montreal, QC, CA) | &lt;a href="https://rustconf.com/"&gt;Rust Conf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/events/rustconf-2024/"&gt;&lt;strong&gt;Rust Conf 2024&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-12 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://meet.jit.si/RustHackAndLearnBerlin"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/rust-berlin/events/298633268/"&gt;&lt;strong&gt;Mirror: Rust Hack n Learn Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-12 | Virtual (Rotterdam, NL) | &lt;a href="https://www.meetup.com/bevy-game-development/"&gt;Bevy Game Development&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bevy-game-development/events/302841892/"&gt;&lt;strong&gt;Bevy Meetup #6&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-16 | Virtual | &lt;a href="https://www.meetup.com/women-in-rust/"&gt;Women in Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/women-in-rust/events/302827971/"&gt;&lt;strong&gt;👋 Community Catch Up&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-17 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/299346969/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-18 | Virtual and In-Person (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/298631736/"&gt;&lt;strong&gt;Cells&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-18 - 2024-09-20 | Hybrid - Virtual and In-Person (Vienna, AT) | &lt;a href="https://lpc.events"&gt;Linux Plumbers Conference&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lpc.events/event/18/sessions/186/"&gt;&lt;strong&gt;Rust Microconference in LPC 2024&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-19 | Virtual (Charlottesville, NC, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/298897973/"&gt;&lt;strong&gt;Crafting Interpreters in Rust Collaboratively&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-19 | Virtual and In-Person (Seattle, WA, US) | &lt;a href="https://www.meetup.com/seattle-rust-user-group/events/"&gt;Seattle Rust User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/join-srug/events/303067835/"&gt;&lt;strong&gt;September Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-24 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/dallasrust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallasrust/events/301585670/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="africa"&gt;&lt;a class="toclink" href="#africa"&gt;Africa&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-09-06 | Kampala, UG | &lt;a href="https://www.eventbrite.com/o/rust-circle-kampala-65249289033/"&gt;Rust Circle Kampala&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.com/e/rust-circle-meetup-tickets-628763176587/"&gt;&lt;strong&gt;Rust Circle Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;&lt;a class="toclink" href="#asia"&gt;Asia&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-09-09 | Ramat Gan, IL | &lt;a href="https://coralogix.com/"&gt;Coralogix&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://coralogix.com/rust-coralogix-meetup/"&gt;&lt;strong&gt;Rust as Scale&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-14 | Bangalore, IN | &lt;a href="https://hasgeek.com/rustbangalore"&gt;Rust Bangalore&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hasgeek.com/rustbangalore/september-2024-rustacean-meetup/"&gt;&lt;strong&gt;September 2024 Rustacean meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-28 | Frankfurt (Main), DE | &lt;a href="https://www.meetup.com/rust-rhein-main"&gt;Rust Rhein Main&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-rhein-main/events/302738445/"&gt;&lt;strong&gt;Rust Frankfurt WebAssembly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Berlin, DE | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-berlin/events/299421378/"&gt;&lt;strong&gt;Rust and Tell - The social Beergarden.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Copenhagen, DK | &lt;a href="https://www.meetup.com/copenhagen-rust-community"&gt;Copenhagen Rust Community&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-community/events/303040544/"&gt;&lt;strong&gt;Rust meetup #50 sponsored by Adapt Agency&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-04 | Oxford, UK | &lt;a href="https://www.meetup.com/oxford-rust-meetup-group/"&gt;Oxfrod Rust Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/oxford-rust-meetup-group/events/302848276/"&gt;&lt;strong&gt;More Rust - Generics, constraints, safety.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-11 | Reading, UK | &lt;a href="https://rustworkshop.co/meetup/"&gt;Reading Rust Workshop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/reading-rust-workshop/events/302833564/"&gt;&lt;strong&gt;Reading Rust Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-17 | Leipzig, DE | &lt;a href="https://www.meetup.com/rust-modern-systems-programming-in-leipzig/"&gt;Rust - Modern Systems Programming in Leipzig&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-modern-systems-programming-in-leipzig/events/302425049/"&gt;&lt;strong&gt;Topic TBD&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-17 | Trondheim, NO | &lt;a href="https://www.meetup.com/rust-trondheim/"&gt;Rust Trondheim&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-trondheim/events/302957040/"&gt;&lt;strong&gt;Making AI-models perform tasks, in Rust!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-18 | Moravia, CZ | &lt;a href="https://www.meetup.com/rust-moravia/"&gt;Rust Moravia&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-moravia/events/301360936"&gt;&lt;strong&gt;Rust Moravia Meetup (September 2024)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-18 | Vienna, AT + Virtual | &lt;a href="https://lpc.events"&gt;Linux Plumbers Conference&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lpc.events/event/18/sessions/186/"&gt;&lt;strong&gt;Rust Microconference in LPC 2024 (Sep 18-20)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-23 | Bratislava, SK | &lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/"&gt;Bratislava Rust Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/events/302916594/"&gt;&lt;strong&gt;Rust Meetup by Sonalake #6&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-28 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/xvkdgtygclblc/"&gt;&lt;strong&gt;Rust Lunch - Fareground&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Nashville, TN, US | &lt;a href="https://www.meetup.com/music-city-rust-developers/"&gt;Music City Rust Developers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/music-city-rust-developers/events/301420110/"&gt;&lt;strong&gt;Music City Rust Developers : placeholder&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Chicago, IL, US | &lt;a href="https://www.meetup.com/deep-dish-rust/"&gt;Deep Dish Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/deep-dish-rust/events/302940777/"&gt;&lt;strong&gt;Rust Hack Night/Happy Hour&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-31 | Cambridge, MA, US | &lt;a href="https://www.meetup.com/bostonrust/"&gt;Boston Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bostonrust/events/302498706/"&gt;&lt;strong&gt;Central Cambridge Rust Lunch, Aug 31&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | Mountain View, CA, US | &lt;a href="https://www.meetup.com/mv-rust-meetup/"&gt;Mountain View Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/mv-rust-meetup/events/302723843/"&gt;&lt;strong&gt;Rust Meetup at Hacker Dojo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | Portland, OR, US | &lt;a href="https://www.meetup.com/pdxrust/"&gt;PDX Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/pdxrust/events/302588479/"&gt;&lt;strong&gt;PDX Rust September!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | St. Louis, MO, US | &lt;a href="https://www.meetup.com/stl-rust/"&gt;STL Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/stl-rust/events/hdzdmtygcmbhb/"&gt;&lt;strong&gt;Lifetimes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-07 | Longview, TX, US | &lt;a href="https://www.meetup.com/longview-code-and-coffee/"&gt;Longview Code and Coffee&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/longview-code-and-coffee/events/301976293/"&gt;&lt;strong&gt;Longview Code and Coffee&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-08 | Cambridge, MA, US | &lt;a href="https://www.meetup.com/bostonrust/events/302498734/"&gt;Boston Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bostonrust/events/302498706/"&gt;&lt;strong&gt;Northeastern Rust Lunch, Sep 8&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-10 - 2024-09-13 | Hybrid: Virtual and In-Person (Montreal, QC, CA) | &lt;a href="https://rustconf.com/"&gt;Rust Conf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/events/rustconf-2024/"&gt;&lt;strong&gt;Rust Conf 2024&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-11 | Boulder, CO, US | &lt;a href="https://www.meetup.com/boulder-rust-meetup/"&gt;Boulder Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="hhttps://www.meetup.com/boulder-elixir/events/302991078/"&gt;&lt;strong&gt;Boulder Elixir Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-16 | Cambridge, MA, US | &lt;a href="https://www.meetup.com/bostonrust/"&gt;Boston Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bostonrust/events/302498750/"&gt;&lt;strong&gt;Somerville Union Square Rust Lunch, Sep 16&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-17 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/302638248/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-18 | Virtual and In-Person (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/298631736/"&gt;&lt;strong&gt;Cells&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-19 | Virtual and In-Person (Seattle, WA, US) | &lt;a href="https://www.meetup.com/seattle-rust-user-group/events/"&gt;Seattle Rust User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/join-srug/events/303067835/"&gt;&lt;strong&gt;September Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-21 | Longview, TX, US | &lt;a href="https://www.meetup.com/longview-code-and-coffee/"&gt;Longview Code and Coffee&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/longview-code-and-coffee/events/301976355/"&gt;&lt;strong&gt;Longview Code and Coffee&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-24 | Detroit, MI, US | &lt;a href="https://www.meetup.com/detroitrust/"&gt;Detroit Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/detroitrust/events/zfcbntygcmbgc/"&gt;&lt;strong&gt;Rust Community Meetup - Ferndale&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-25 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/302274449/"&gt;&lt;strong&gt;Rust Lunch - Fareground&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="oceania"&gt;&lt;a class="toclink" href="#oceania"&gt;Oceania&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-28 | Sydney, NSW, AU | &lt;a href="https://www.meetup.com/rust-sydney/"&gt;Rust Sydney&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-sydney/events/302951173/"&gt;&lt;strong&gt;Stuff ⚡ And Crabs 🦀&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/1ecdzp2/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;... opaque number sequences (\&amp;lt;GitHub&gt; "issue numbers") are not very informative about what is behind that pointer, and pretending they are is harmful. People could provide, instead, actual reasons for things, which do not require dereferencing random pointers, which thrashes cache.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://internals.rust-lang.org/t/type-inference-breakage-in-1-80-has-not-been-handled-well/21374/29"&gt;Jubilee on rust-internals&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1603"&gt;Anton Fetisov&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="REDDIT_LINK_HERE"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</content><category term="This Week in Rust"></category></entry><entry><title>This Week in Rust 561</title><link href="https://this-week-in-rust.org/blog/2024/08/21/this-week-in-rust-561/" rel="alternate"></link><published>2024-08-21T00:00:00-04:00</published><updated>2024-08-21T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2024-08-21:/blog/2024/08/21/this-week-in-rust-561/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://x.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on X (formerly Twitter) or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://x.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on X (formerly Twitter) or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt; and archives can be viewed at &lt;a href="https://this-week-in-rust.org/"&gt;this-week-in-rust.org&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Want TWIR in your inbox? &lt;a href="https://this-week-in-rust.us11.list-manage.com/subscribe?u=fd84c1c757e02889a9b08d289&amp;amp;id=0ed8b72485"&gt;Subscribe here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3 id="official"&gt;&lt;a class="toclink" href="#official"&gt;Official&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2024/08/15/this-development-cycle-in-cargo-1.81.html"&gt;This Development-cycle in Cargo: 1.81&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2024/08/09/async-closures-call-for-testing.html"&gt;Async Closures MVP: Call for Testing!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rerun.io/blog/column-chunks"&gt;Rerun 0.18 - Exploiting column chunks for faster ingestion and lower memory use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexpovel/srgn/releases/tag/srgn-v0.13.0"&gt;&lt;code&gt;srgn 0.13&lt;/code&gt;: new grep-like search mode for source code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://poignardazur.github.io/2024/08/16/pinned-places/"&gt;Expanding on withoutboat’s pinned places&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://uwheel.rs/post/datafusion_uwheel/"&gt;Introducing datafusion-uwheel, A Native DataFusion Optimizer for Time-based Analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ralfj.de/blog/2024/08/14/places.html"&gt;What is a place expression?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://donsz.nl/blog/arenas/"&gt;Arenas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bd103.github.io/blog/2024-08-18-4-years-of-bevy"&gt;4 Years of Bevy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chesedo.me/blog/rust-tracing-incorrect-parent-spans-async-futures-joinset/"&gt;Fixing Incorrect Tracing Parent Spans with Futures and JoinSet in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cjycode.com/posts/rust-ui-flutter/"&gt;Rust GUI library via Flutter, done simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Series] &lt;a href="https://chesedo.me/blog/despatma-a-minimal-macro-for-dependency-injection/"&gt;Mastering Dependency Injection in Rust: Using a macro part 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;&lt;a class="toclink" href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tim.mcnamara.nz/post/758930152514306048/the-amazing-rust-podcasts-that-have-emerged-in"&gt;The amazing Rust podcasts that have emerged in 2024&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwn.net/SubscriberLink/985210/f3c3beb9ef9c550e/"&gt;FreeBSD considers Rust in the base system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jacky.wtf/essays/2024/using-lua-with-livtet/"&gt;Incorporating Lua with Livtet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=atE94jvfVuA"&gt;Systems Software for Linux with Rust – Interview with Zeeshan Ali Khan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://filtra.io/rust-quadratic-aug-24"&gt;Building A Spreadsheet in Rust, WASM, and WebGL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/discretlib/discret"&gt;discret&lt;/a&gt;, a graphQL-based peer-to-peer implementation library.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1332"&gt;adsalais&lt;/a&gt; for the self-suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="calls-for-testing"&gt;&lt;a class="toclink" href="#calls-for-testing"&gt;Calls for Testing&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3537"&gt;RFC: Make Cargo respect minimum supported Rust version (MSRV) when selecting dependencies&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/issues/13873"&gt;Testing Steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust"&gt;&lt;a class="toclink" href="#rust"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/call-for-testing"&gt;Rust&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No calls for testing were issued this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rustup"&gt;&lt;a class="toclink" href="#rustup"&gt;&lt;a href="https://github.com/rust-lang/rustup/labels/call-for-testing"&gt;Rustup&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No calls for testing were issued this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="call-for-participation-projects-and-speakers"&gt;&lt;a class="toclink" href="#call-for-participation-projects-and-speakers"&gt;Call for Participation; projects and speakers&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="cfp-projects"&gt;&lt;a class="toclink" href="#cfp-projects"&gt;CFP - Projects&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;!-- CFPs go here, use this format: * [project name - title of issue](URL to issue) --&gt;
&lt;!-- * [ - ]() --&gt;
&lt;!-- or if none - *No Calls for participation were submitted this week.* --&gt;

&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://github.com/rust-lang/this-week-in-rust?tab=readme-ov-file#call-for-participation-guidelines"&gt;here&lt;/a&gt; or through a &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;PR to TWiR&lt;/a&gt; or by reaching out on &lt;a href="https://x.com/ThisWeekInRust"&gt;X (formerly Twitter)&lt;/a&gt; or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;Mastodon&lt;/a&gt;!&lt;/p&gt;
&lt;h3 id="cfp-events"&gt;&lt;a class="toclink" href="#cfp-events"&gt;CFP - Events&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you a new or experienced speaker looking for a place to share something cool? This section highlights events that are being planned and are accepting submissions to join their event as a speaker.&lt;/p&gt;
&lt;!-- CFPs go here, use this format: * [**event name**](URL to CFP)| Date CFP closes in YYYY-MM-DD | city,state,country | Date of event in YYYY-MM-DD --&gt;
&lt;!-- or if none - *No Calls for papers or presentations were submitted this week.* --&gt;

&lt;p&gt;If you are an event organizer hoping to expand the reach of your event, please submit a link to the website through a &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;PR to TWiR&lt;/a&gt; or by reaching out on &lt;a href="https://x.com/ThisWeekInRust"&gt;X (formerly Twitter)&lt;/a&gt; or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;Mastodon&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;426 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2024-08-13..2024-08-20"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127905"&gt;add powerpc-unknown-linux-muslspe compile target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128828"&gt;&lt;code&gt;-Znext-solver&lt;/code&gt; caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129078"&gt;&lt;code&gt;ParamEnvAnd::fully_perform&lt;/code&gt;: we have an &lt;code&gt;ocx&lt;/code&gt;, use it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128925"&gt;&lt;code&gt;derive(SmartPointer)&lt;/code&gt;: register helper attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128759"&gt;alloc: add ToString specialization for &lt;code&gt;&amp;amp;&amp;amp;str&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127857"&gt;allow to customize &lt;code&gt;// TODO&lt;/code&gt;: comment for deprecated safe autofix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129235"&gt;check that &lt;code&gt;#[may_dangle]&lt;/code&gt; is properly applied&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/126877"&gt;cloneToUninit impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129218"&gt;delete debuginfo test suite infra for gdb without Rust support and lldb with Rust support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129052"&gt;detect incompatible CI rustc options more precisely&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128786"&gt;detect multiple crate versions on method not found&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129050"&gt;emit a warning instead of an error if &lt;code&gt;--generate-link-to-definition&lt;/code&gt; is used with other output formats than HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128989"&gt;emit an error for invalid use of the linkage attribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129173"&gt;fix &lt;code&gt;is_val_statically_known&lt;/code&gt; for floats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129208"&gt;fix order of normalization and recursion in const folding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128725"&gt;fix problems with assoc expr token collection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129101"&gt;fix projections when parent capture is by-ref but child capture is by-value in the &lt;code&gt;ByMoveBody&lt;/code&gt; pass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129223"&gt;fix wrong argument for &lt;code&gt;get_fn_decl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129154"&gt;fix wrong source location for some incorrect macro definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129116"&gt;include a copy of &lt;code&gt;compiler-rt&lt;/code&gt; source in the &lt;code&gt;download-ci-llvm&lt;/code&gt; tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129072"&gt;infer async closure args from &lt;code&gt;Fn&lt;/code&gt; bound even if there is no corresponding &lt;code&gt;Future&lt;/code&gt; bound on return&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128977"&gt;only try to modify file times of a writable file on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129271"&gt;prevent double panic in query system, improve diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129096"&gt;print more verbose error for commands that capture output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129059"&gt;record the correct target type when coercing fn items/closures to pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128643"&gt;refactor &lt;code&gt;powerpc64&lt;/code&gt; call ABI handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128965"&gt;remove &lt;code&gt;print::Pat&lt;/code&gt; from the printing of &lt;code&gt;WitnessPat&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129106"&gt;remove redundant type ops: &lt;code&gt;Eq&lt;/code&gt;/&lt;code&gt;Subtype&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129168"&gt;return correct &lt;code&gt;HirId&lt;/code&gt; when finding body owner in diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128861"&gt;rework MIR inlining debuginfo so function parameters show up in debuggers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129217"&gt;safe transmute: check lifetimes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129042"&gt;special-case alias ty during the delayed bug emission in &lt;code&gt;try_from_lit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128084"&gt;suggest adding Result return type for associated method in E0277&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128936"&gt;support reading thin archives in ArArchiveBuilder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128722"&gt;switch to using the v2 resolver in most workspaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128348"&gt;unconditionally allow shadow call-stack sanitizer for AArch64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128792"&gt;use &lt;code&gt;FnSig&lt;/code&gt; instead of raw &lt;code&gt;FnDecl&lt;/code&gt; for &lt;code&gt;ForeignItemKind::Fn&lt;/code&gt;, fix ICE for &lt;code&gt;Fn&lt;/code&gt; trait error on safe foreign fn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129164"&gt;use &lt;code&gt;ar_archive_writer&lt;/code&gt; for writing COFF import libs on all backends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128037"&gt;use the &lt;code&gt;enum2$&lt;/code&gt; Natvis visualiser for repr128 C-style enums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128628"&gt;when deduplicating unreachable blocks, erase the source information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/122551"&gt;added "copy" to Debug fmt for copy operands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3809"&gt;miri: FD: remove big surrounding RefCell, simplify socketpair&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3822"&gt;miri: &lt;code&gt;tls_leak_main_thread_allowed&lt;/code&gt;: make test check &lt;code&gt;target_thread_local&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3807"&gt;miri: add 'project' process guidlines for larger contributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3814"&gt;miri: add epoll EPOLLHUP flag support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3820"&gt;miri: add epollerr support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3802"&gt;miri: borrow tracking: remove the concept of a call ID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3825"&gt;miri: epoll &lt;code&gt;test_socketpair_read&lt;/code&gt;: explicitly check real and Miri behavior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3818"&gt;miri: epoll: iterate through output buffer then fetch an event from ready list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3712"&gt;miri: implement epoll shim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3815"&gt;miri: implement pipe and pipe2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3754"&gt;miri: make unused states of Reserved unrepresentable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3824"&gt;miri: set EINVAL for &lt;code&gt;epoll_wait&lt;/code&gt; maxevent value 0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128812"&gt;shrink &lt;code&gt;TyKind::FnPtr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/116528"&gt;stabilize &lt;code&gt;Ready::into_inner()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128570"&gt;stabilize &lt;code&gt;asm_const&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129086"&gt;stabilize &lt;code&gt;is_none_or&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127679"&gt;stabilize &lt;code&gt;raw_ref_op&lt;/code&gt; (RFC 2582)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129161"&gt;stabilize &lt;code&gt;std::thread::Builder::spawn_unchecked&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128771"&gt;stabilize &lt;code&gt;unsafe_attributes&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/125970"&gt;&lt;code&gt;CommandExt::before_exec&lt;/code&gt;: deprecate safety in edition 2024&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128962"&gt;&lt;code&gt;std::fs: get_mode&lt;/code&gt; implementation for all unix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129034"&gt;add &lt;code&gt;#[must_use]&lt;/code&gt; attribute to &lt;code&gt;Coroutine&lt;/code&gt; trait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/106943"&gt;implement DoubleEnded and ExactSize for &lt;code&gt;Take&amp;lt;Repeat&amp;gt;&lt;/code&gt; and &lt;code&gt;Take&amp;lt;RepeatWith&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128946"&gt;hash Ipv*Addr as an integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/122884"&gt;optimize integer &lt;code&gt;pow&lt;/code&gt; by removing the exit branch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128655"&gt;std: refactor UNIX random data generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128873"&gt;add windows-targets crate to std's sysroot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14326"&gt;cargo: add &lt;code&gt;--lockfile-path&lt;/code&gt; flag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14413"&gt;cargo: correct diagnostic for &lt;code&gt;TomlDebugInfo&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14397"&gt;cargo: doc: convert comments to rustdoc in workspace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14400"&gt;cargo: fix MSRV for workspace .package and .dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14418"&gt;cargo: fix: remove list owners feature of info subcommand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14360"&gt;cargo: implement path-bases (RFC 3529) 1/n: path dep and patch support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/126245"&gt;rustdoc: greatly speed up doctests by compiling compatible doctests in one file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129192"&gt;rustdoc: remove useless attributes in merged doctest generated code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128963"&gt;rustdoc: add possibility to generate rustdoc JSON output to stdout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/129124"&gt;rustdoc-json: use FxHashMap from &lt;code&gt;rustdoc_json_types&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt/pull/6272"&gt;rustfmt: ensure that &lt;code&gt;fn config_path&lt;/code&gt; returns canonicalized paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13273"&gt;clippy: disable &lt;code&gt;assigning_clones&lt;/code&gt; for tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13288"&gt;clippy: fix false positive in &lt;code&gt;explicit_iter_loop&lt;/code&gt; with msrv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13284"&gt;clippy: improve &lt;code&gt;collapsible_match&lt;/code&gt; error message syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13248"&gt;clippy: remove &lt;code&gt;find_format_arg_expr&lt;/code&gt; AST fallback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13281"&gt;clippy: trigger &lt;code&gt;string_slice&lt;/code&gt; if expression is reference to &lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17900"&gt;rust-analyzer: add scip/lsif flag to exclude vendored libaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17853"&gt;rust-analyzer: &lt;code&gt;min_exhaustive_patterns&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17595"&gt;rust-analyzer: implement lifetime inferring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17915"&gt;rust-analyzer: make rust-analyzer work partially when offline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17932"&gt;rust-analyzer: fix panics for semantic highlighting at startup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17925"&gt;rust-analyzer: include generics when lowering extern type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17928"&gt;rust-analyzer: keep comments in &lt;code&gt;convert_while_to_loop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17924"&gt;rust-analyzer: panic when a TAIT exists in a RPIT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17882"&gt;rust-analyzer: panic while canonicalizing erroneous projection type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17893"&gt;rust-analyzer: panic while hovering associated function with type annotation on generic param that not inherited from its container type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17905"&gt;rust-analyzer: properly account for editions in names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17916"&gt;rust-analyzer: fix wrong BoundVar index when lowering impl trait parameter of parent generics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A fairly noisy week (though most of that has been dropped from this report).
Overall we saw several improvements, and ended the week on a net positive.
Memory usage is down around 1.5-3% over the course of the week, primarily due
to &lt;a href="https://github.com/rust-lang/rust/pull/126793"&gt;RawVec polymorphization&lt;/a&gt; and
&lt;a href="https://github.com/rust-lang/rust/pull/126877"&gt;CloneToUninit impl expansion&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@simulacrum&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=9cb1998ea15e179482504e07cad8fa121e169a32&amp;amp;end=4fe1e2bd5bf5a6f1cb245f161a5e9d315766f103&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;9cb1998e..4fe1e2bd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1 Regressions, 1 Improvements, 3 Mixed; 1 of them in rollups
53 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2024-08-19.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs_1"&gt;&lt;a class="toclink" href="#rfcs_1"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3660"&gt;crates.io: Crate Deletions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;h5 id="rust_1"&gt;&lt;a class="toclink" href="#rust_1"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Rust&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/128711"&gt;impl &lt;code&gt;Default&lt;/code&gt; for &lt;code&gt;HashMap&lt;/code&gt;/&lt;code&gt;HashSet&lt;/code&gt; iterators that don't already have it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/128596"&gt;stabilize const_fn_floating_point_arithmetic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/128934"&gt;Non-exhaustive structs may be empty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/128794"&gt;Lint at &lt;code&gt;deny-by-default&lt;/code&gt; against references to &lt;code&gt;static mut&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="cargo"&gt;&lt;a class="toclink" href="#cargo"&gt;&lt;a href="https://github.com/rust-lang/cargo/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Cargo&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/cargo/pull/13644"&gt;feat: Stablize &lt;code&gt;CARGO_RUSTC_CURRENT_DIR&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="language-team"&gt;&lt;a class="toclink" href="#language-team"&gt;&lt;a href="https://github.com/rust-lang/lang-team/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc+"&gt;Language Team&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Language Team Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="language-reference"&gt;&lt;a class="toclink" href="#language-reference"&gt;&lt;a href="https://github.com/rust-lang/reference/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Language Reference&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Language Reference RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="unsafe-code-guidelines"&gt;&lt;a class="toclink" href="#unsafe-code-guidelines"&gt;&lt;a href="https://github.com/rust-lang/unsafe-code-guidelines/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Unsafe Code Guidelines&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Unsafe Code Guideline Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3678"&gt;Trait method impl restrictions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2024-08-21 - 2024-09-18 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-21 | Hybrid - Virtual and In-Person (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/298631735/"&gt;&lt;strong&gt;Surreal-ORM&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Virtual | &lt;a href="https://www.meetup.com/conf42/"&gt;Conf42: Online Tech Events&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/conf42/events/297266825/"&gt;&lt;strong&gt;Conf42 Rustlang 2024&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Virtual (Charlottesville, NC, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/298897938/"&gt;&lt;strong&gt;Crafting Interpreters in Rust Collaboratively&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Virtual (Karlsruhe, DE) | &lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/"&gt;Karlsruhe Functional Programmers Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/events/293937801"&gt;&lt;strong&gt;Stammtisch (gemeinsam mit der C++ UG KA): various topics, from C++ to Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual | &lt;a href="https://www.eventbrite.com/o/ardan-labs-7092394651"&gt;Ardan Labs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.com/e/fearless-concurrency-with-rust-tickets-934569591807"&gt;&lt;strong&gt;Fearless Concurrency with Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual (Bordeaux, FR) | &lt;a href="https://www.meetup.com/bordeaux-rust/"&gt;Rust Bordeaux&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bordeaux-rust/events/302570681/"&gt;&lt;strong&gt;Live coding - A distance #1&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/dallasrust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallasrust/events/301585668/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual (Tel Aviv, IL) | &lt;a href="https://www.meetup.com/rust-in-israel/"&gt;Rust in Israel&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-in-israel/events/302327956/"&gt;&lt;strong&gt;Declarative macros in Rust (Virtual) - מקרוים בראסט&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-28 | Virtual (Tel Aviv, IL) | &lt;a href="https://www.meetup.com/code-mavens/"&gt;Code Mavens&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/code-mavens/events/302151487/"&gt;&lt;strong&gt;Command Line Tools: Implementing wc in Rust (English, Virtual)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://meet.jit.si/RustHackAndLearnBerlin"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/rust-berlin/events/298633267/"&gt;&lt;strong&gt;Mirror: Rust Hack n Learn Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Virtual (Tel Aviv, IL) | &lt;a href="https://www.meetup.com/code-mavens/"&gt;Code Mavens&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/code-mavens/events/302391142/"&gt;&lt;strong&gt;Rust Source Code Reading: The thousands crate (English)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-03 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/302007365/"&gt;&lt;strong&gt;Buffalo Rust User Group&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-04 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/300328029/"&gt;&lt;strong&gt;Indy.rs - Typestate Pattern in Rust: With a Strict Builder Example&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | Virtual (Charlottesville, NC, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/298897957/"&gt;&lt;strong&gt;Crafting Interpreters in Rust Collaboratively&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/300820268/"&gt;&lt;strong&gt;Rust Nürnberg online&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-10 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/dallasrust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallasrust/events/299346981/"&gt;&lt;strong&gt;Second Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-10 - 2024-09-13 | Hybrid: Virtual and In-Person (Montreal, QC, CA)| &lt;a href="https://rustconf.com/"&gt;Rust Conf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/events/rustconf-2024/"&gt;&lt;strong&gt;Rust Conf 2024&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-12 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://meet.jit.si/RustHackAndLearnBerlin"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/rust-berlin/events/298633268/"&gt;&lt;strong&gt;Mirror: Rust Hack n Learn Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-12 | Virtual (Rotterdam, NL)| &lt;a href="https://www.meetup.com/bevy-game-development/"&gt;Bevy Game Development&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bevy-game-development/events/302841892/"&gt;&lt;strong&gt;Bevy Meetup #6&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-16 | Virtual | &lt;a href="https://www.meetup.com/women-in-rust/"&gt;Women in Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/women-in-rust/events/302827971/"&gt;&lt;strong&gt;👋 Community Catch Up&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-18 | Virtual and In-Person (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/298631736/"&gt;&lt;strong&gt;Cells&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-18 - 2024-09-20 | Hybrid - Virtual and In-Person (Vienna, AT) | &lt;a href="https://lpc.events"&gt;Linux Plumbers Conference&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lpc.events/event/18/sessions/186/"&gt;&lt;strong&gt;Rust Microconference in LPC 2024&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="africa"&gt;&lt;a class="toclink" href="#africa"&gt;Africa&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-09-06 | Kampala, UG | &lt;a href="https://www.eventbrite.com/o/rust-circle-kampala-65249289033/"&gt;Rust Circle Kampala&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.com/e/rust-circle-meetup-tickets-628763176587/"&gt;&lt;strong&gt;Rust Circle Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;&lt;a class="toclink" href="#asia"&gt;Asia&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-24 | Bangalore, IN | &lt;a href="https://hasgeek.com/rustbangalore"&gt;Rust Bangalore&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hasgeek.com/rustbangalore/august-2024-rustacean-meetup/"&gt;&lt;strong&gt;August 2024 Rustacean meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-09 | Ramat Gan, IL | &lt;a href="https://coralogix.com/"&gt;Coralogix&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://coralogix.com/rust-coralogix-meetup/"&gt;&lt;strong&gt;Rust as Scale&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-21 | Cabridge, UK | &lt;a href="https://www.meetup.com/cambridge-rust-meetup/"&gt;Cambridge Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/cambridge-rust-meetup/events/302574953/"&gt;&lt;strong&gt;Monthly Rust Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-21 | Nürnberg, DE | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/302080495/"&gt;&lt;strong&gt;Walk'n'Talk around Wöhrder See (+ Burritos)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Manchester, UK | &lt;a href="https://www.meetup.com/rust-manchester/"&gt;Rust Manchester&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-manchester/events/302419276/"&gt;&lt;strong&gt;Rust Manchester Talks August&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-26 | Mainz, DE | &lt;a href="https://rheinneckar.events/@fsmathe_informatik_mainz@rheinmain.social"&gt;Fachschaft Mathematik+Informatik der JGU Mainz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rheinneckar.events/events/3f76f860-75c1-4f3a-810f-03fc0cecb691/"&gt;&lt;strong&gt;Ferienkurs Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Trondheim, NO | &lt;a href="https://www.meetup.com/rust-trondheim/"&gt;Rust Trondheim&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-trondheim/events/300991355/"&gt;&lt;strong&gt;Exploring Slint: A Rust-based UI Toolkit – Mob Programming Session&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-28 | Frankfurt (Main), DE | &lt;a href="https://www.meetup.com/rust-rhein-main"&gt;Rust Rhein Main&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-rhein-main/events/302738445/"&gt;&lt;strong&gt;Rust Frankfurt WebAssembly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Berlin, DE | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-berlin/events/299421378/"&gt;&lt;strong&gt;Rust and Tell - Title&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-11 | Reading, UK | &lt;a href="https://rustworkshop.co/meetup/"&gt;Reading Rust Workshop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/reading-rust-workshop/events/302833564/"&gt;&lt;strong&gt;Reading Rust Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-18 | Moravia, CZ | &lt;a href="https://www.meetup.com/rust-moravia/"&gt;Rust Moravia&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-moravia/events/301360936"&gt;&lt;strong&gt;Rust Moravia Meetup (September 2024)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-18 | Vienna, AT + Virtual | &lt;a href="https://lpc.events"&gt;Linux Plumbers Conference&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lpc.events/event/18/sessions/186/"&gt;&lt;strong&gt;Rust Microconference in LPC 2024 (Sep 18-20)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-21 | Hybrid - Virtual and In-Person (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/298631735/"&gt;&lt;strong&gt;Surreal-ORM&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Mountain View, CA, US | &lt;a href="https://www.meetup.com/mv-rust-meetup/"&gt;Mountain View Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/mv-rust-meetup/events/302723527/"&gt;&lt;strong&gt;Rust Meetup at Hacker Dojo&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/mv-rust-meetup/events/302723816/"&gt;&lt;strong&gt;Alternative Meetup Link&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-26 | Boulder, CO, US | &lt;a href="https://www.meetup.com/boulder-rust-meetup/"&gt;Boulder Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-rust-meetup/events/302579817/"&gt;&lt;strong&gt;Boulder Rust Meetup: Learnings and Hangs!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-28 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/xvkdgtygclblc/"&gt;&lt;strong&gt;Rust Lunch - Fareground&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Nashville, TN, US | &lt;a href="https://www.meetup.com/music-city-rust-developers/"&gt;Music City Rust Developers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/music-city-rust-developers/events/301420110/"&gt;&lt;strong&gt;Music City Rust Developers : placeholder&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | Mountain View, CA, US | &lt;a href="https://www.meetup.com/mv-rust-meetup/"&gt;Mountain View Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/mv-rust-meetup/events/302723843/"&gt;&lt;strong&gt;Rust Meetup at Hacker Dojo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | St. Louis, MO, US | &lt;a href="https://www.meetup.com/stl-rust/"&gt;STL Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/stl-rust/events/hdzdmtygcmbhb/"&gt;&lt;strong&gt;Lifetimes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-10 - 2024-09-13 | Hybrid: Virtual and In-Person (Montreal, QC, CA)| &lt;a href="https://rustconf.com/"&gt;Rust Conf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/events/rustconf-2024/"&gt;&lt;strong&gt;Rust Conf 2024&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-18 | Virtual and In-Person (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/298631736/"&gt;&lt;strong&gt;Cells&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="oceania"&gt;&lt;a class="toclink" href="#oceania"&gt;Oceania&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-22 | Auckland, NZ | &lt;a href="https://www.meetup.com/rust-akl/"&gt;Rust AKL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/302431924/"&gt;&lt;strong&gt;Rust AKL: Dot IX: Diagram Generator + Deep Learning from Scratch in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Canberra, ACT, AU | &lt;a href="https://www.meetup.com/rust-canberra/"&gt;Canberra Rust User Group (CRUG)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-canberra/events/301887261/"&gt;&lt;strong&gt;June Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/1ecdzp2/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm trying to round up to next power of two (for fun).&lt;/p&gt;
&lt;p&gt;I know that's perhaps not a lot of fun, but there's &lt;a href="https://doc.rust-lang.org/std/primitive.u32.html#method.next_power_of_two"&gt;next_power_of_two() &lt;/a&gt; on all integer types.&lt;/p&gt;
&lt;p&gt;That is indeed less fun.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://users.rust-lang.org/t/stupid-or-genius-getting-at-the-bits/116138"&gt;Edeadlink and Riccardo Borgani on rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1600"&gt;Jonas Fassbender&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/1eyyz3c/this_week_in_rust_561/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</content><category term="This Week in Rust"></category></entry><entry><title>This Week in Rust 560</title><link href="https://this-week-in-rust.org/blog/2024/08/14/this-week-in-rust-560/" rel="alternate"></link><published>2024-08-14T00:00:00-04:00</published><updated>2024-08-14T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2024-08-14:/blog/2024/08/14/this-week-in-rust-560/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://x.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on X (formerly Twitter) or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://x.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on X (formerly Twitter) or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt; and archives can be viewed at &lt;a href="https://this-week-in-rust.org/"&gt;this-week-in-rust.org&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Want TWIR in your inbox? &lt;a href="https://this-week-in-rust.us11.list-manage.com/subscribe?u=fd84c1c757e02889a9b08d289&amp;amp;id=0ed8b72485"&gt;Subscribe here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3 id="official"&gt;&lt;a class="toclink" href="#official"&gt;Official&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2024/08/08/Rust-1.80.1.html"&gt;Announcing Rust 1.80.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2024/08/12/Project-goals.html"&gt;Rust Project goals for 2024&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;&lt;a class="toclink" href="#newsletters"&gt;Newsletters&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-osdev.com/this-month/2024-07/"&gt;This Month in Rust OSDev: July 2024&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bevyengine.org/news/bevys-fourth-birthday/"&gt;Bevy's Fourth Birthday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tonbo.io/blog/introducing-tonbo"&gt;Intoducing Tonbo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://linebender.org/blog/tmix-07/"&gt;This Month in Xilem, July 2024&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-gpu.github.io/blog/transition-announcement/"&gt;Rust GPU Transitions to Community Ownership&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2024/08/12/changelog-246.html"&gt;rust-analyzer changelog #246&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexsaveau.dev/blog/projects/performance/clipboard/ringboard/ringboard"&gt;Ringboard: a new clipboard manager for Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JelteF/derive_more/releases/tag/v1.0.0"&gt;derive_more 1.0.0 - Finally a stable release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fosskers/aura/releases/tag/v4.0.0"&gt;Aura 4.0: Port from Haskell to Rust complete&lt;/a&gt; (&lt;a href="https://fosskers.github.io/aura/migration.html"&gt;Migration Guide&lt;/a&gt;, &lt;a href="https://fosskers.github.io/aura/faq.html#why-did-you-rewrite-aura-in-rust"&gt;Why Rust?&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/r3bl-org/r3bl-open-core/blob/main/CHANGELOG.md#v056-2024-08-13"&gt;&lt;code&gt;r3bl_terminal_async&lt;/code&gt; v0.5.6 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/r3bl-org/r3bl-open-core/blob/main/CHANGELOG.md#v057-2024-08-13"&gt;&lt;code&gt;r3bl_tui&lt;/code&gt; v0.5.7 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.goose.love/posts/rosetta-hashing/"&gt;I compared 14 hashing algorithms on Rust using Criterion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leon.schuermann.io/blog/2024-08-07_rust-mutex-atomics-unsafecell_spooky-action-at-a-distance.html"&gt;Rust's Mutex, Atomics and UnsafeCell – Spooky Action at a Distance?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chevyray.dev/blog/creating-175-fonts/"&gt;How I Created 175 Fonts Using Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elastio.github.io/bon/blog/the-weird-of-function-local-types-in-rust"&gt;The weird of function-local types in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gavinleroy.com/writings/i-heart-assoc-types.html"&gt;Fear Not the Association of Types: a walkthrough of associated types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/programming-vs-software-engineering-rust-vs-go"&gt;Programming vs Software Engineering (Rust vs Go)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=_H87sL5ieOc"&gt;The Best Games from Bevy Jam 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://sdr-podcast.com/episodes/wrong-build-times/"&gt;I Was Wrong About Rust Build Times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://corrode.dev/podcast/s02e08-season-finale/"&gt;Rust in Production Podcast Season 2 Finale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/benno-van-den-berg/"&gt;Exploring Fiberplane's 3-Year Rust Journey, with Benno van den Berg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sea-ql.org/blog/2024-08-08-graphql-admin-dashboard-with-loco-seaography/"&gt;GraphQL based Admin Dashboard with Loco and Seaography&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="research"&gt;&lt;a class="toclink" href="#research"&gt;Research&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dl.acm.org/doi/10.1145/3656406"&gt;Don’t Write, but Return: Replacing Output Parameters with Algebraic Data Types in C-to-Rust Translation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@xorio42/list/828492b94c23"&gt;The Hitchhiker’s Guide to Building an Encrypted Filesystem in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;&lt;a class="toclink" href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://thejpster.org.uk/blog/blog-2024-08-08/"&gt;RP2350 Launch Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://filtra.io/rust-jul-24"&gt;July 2024 Rust Jobs Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=EnWbnJXkOsg"&gt;John Nunley discusses Rust, Open source, smol-rs and Async Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Audio] &lt;a href="https://timclicks.dev/podcast/supercharging-python-tooling-an-interview-with-charlie-marsh/"&gt;Supercharging Python Tooling – An Interview with Charlie Marsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Audio] &lt;a href="https://timclicks.dev/podcast/systems-software-for-linux-with-rust-interview-with-zeeshan-ali-khan/"&gt;Systems Software for Linux with Rust – Interview with Zeeshan Ali Khan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/radumarias/rencfs"&gt;rencfs&lt;/a&gt;, a FUSE-based encrypted filesystem for Linux.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1329"&gt;Radu Marias&lt;/a&gt; for the self-suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="calls-for-testing"&gt;&lt;a class="toclink" href="#calls-for-testing"&gt;Calls for Testing&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3537"&gt;RFC: Make Cargo respect minimum supported Rust version (MSRV) when selecting dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/issues/13873"&gt;Testing Steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust"&gt;&lt;a class="toclink" href="#rust"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/call-for-testing"&gt;Rust&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No calls for testing were issued this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rustup"&gt;&lt;a class="toclink" href="#rustup"&gt;&lt;a href="https://github.com/rust-lang/rustup/labels/call-for-testing"&gt;Rustup&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No calls for testing were issued this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="call-for-participation-projects-and-speakers"&gt;&lt;a class="toclink" href="#call-for-participation-projects-and-speakers"&gt;Call for Participation; projects and speakers&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="cfp-projects"&gt;&lt;a class="toclink" href="#cfp-projects"&gt;CFP - Projects&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;!-- CFPs go here, use this format: * [project name - title of issue](URL to issue) --&gt;
&lt;!-- * [ - ]() --&gt;
&lt;!-- or if none - *No Calls for participation were submitted this week.* --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/diesel-rs/diesel/issues/4153"&gt;Diesel - Add support for currently unsupported array functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/diesel-rs/diesel/issues/4152"&gt;Diesel - Provide a r2d2::CustomizeConnection for testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgrif/mysqlclient-sys/issues/53"&gt;Mysqlclient-sys - Add support for mysql-client 9.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rencfs-desktop/issues/3"&gt;rencfs-desktop - Use SurrealDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rencfs-desktop/issues/4"&gt;rencfs-desktop - Implement daemon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rencfs-desktop/issues/9"&gt;rencfs-desktop - Implement functionality&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://github.com/rust-lang/this-week-in-rust?tab=readme-ov-file#call-for-participation-guidelines"&gt;here&lt;/a&gt; or through a &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;PR to TWiR&lt;/a&gt; or by reaching out on &lt;a href="https://x.com/ThisWeekInRust"&gt;X (formerly Twitter)&lt;/a&gt; or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;Mastodon&lt;/a&gt;!&lt;/p&gt;
&lt;h3 id="cfp-events"&gt;&lt;a class="toclink" href="#cfp-events"&gt;CFP - Events&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you a new or experienced speaker looking for a place to share something cool? This section highlights events that are being planned and are accepting submissions to join their event as a speaker.&lt;/p&gt;
&lt;!-- CFPs go here, use this format: * [**event name**](URL to CFP)| Date CFP closes in YYYY-MM-DD | city,state,country | Date of event in YYYY-MM-DD --&gt;
&lt;!-- or if none - *No Calls for papers or presentations were submitted this week.* --&gt;

&lt;p&gt;If you are an event organizer hoping to expand the reach of your event, please submit a link to the website through a &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;PR to TWiR&lt;/a&gt; or by reaching out on &lt;a href="https://x.com/ThisWeekInRust"&gt;X (formerly Twitter)&lt;/a&gt; or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;Mastodon&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;395 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2024-08-06..2024-08-13"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128592"&gt;promote aarch64-apple-darwin to Tier 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/125642"&gt;enable zstd for debug compression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128852"&gt;use stable sort to sort multipart diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128149"&gt;&lt;code&gt;nontemporal_store&lt;/code&gt;: make sure that the intrinsic is truly just a hint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128772"&gt;&lt;code&gt;rustc_codegen_ssa&lt;/code&gt;: Set architecture for object crate for 32-bit SPARC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128369"&gt;&lt;code&gt;rustc_lint&lt;/code&gt;: make &lt;code&gt;let-underscore-lock&lt;/code&gt; translatable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128782"&gt;&lt;code&gt;unused_parens&lt;/code&gt;: do not lint against parens around &amp;amp;raw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128702"&gt;add -Zmetrics-dir=PATH to save diagnostic metadata to disk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128822"&gt;add &lt;code&gt;builder-config&lt;/code&gt; into tarball sources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128221"&gt;add implied target features to &lt;code&gt;target_feature&lt;/code&gt; attribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128371"&gt;add range attribute to scalar function results and arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128746"&gt;cache supertrait outlives of impl header for soundness check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128353"&gt;change generate-copyright to generate HTML, with cargo dependencies included&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128679"&gt;codegen: better centralize function declaration attribute computation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128718"&gt;consider &lt;code&gt;cfg_attr&lt;/code&gt; checked by &lt;code&gt;CheckAttrVisitor&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128537"&gt;const vector passed through to codegen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128908"&gt;diagnostics: do not warn when a lifetime bound infers itself&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128910"&gt;differentiate between methods and associated functions in diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128874"&gt;disable verbose bootstrap command failure logging by default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/126158"&gt;disallow setting some built-in cfg via the command-line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128710"&gt;don't ICE when getting an input file name's stem fails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128753"&gt;don't arbitrarily choose one upper bound for hidden captured region error message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128791"&gt;don't implement &lt;code&gt;AsyncFn&lt;/code&gt; for &lt;code&gt;FnDef&lt;/code&gt;/&lt;code&gt;FnPtr&lt;/code&gt; that wouldnt implement &lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128616"&gt;don't inline tainted MIR bodies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128552"&gt;emit an error for invalid use of the &lt;code&gt;#[no_sanitize]&lt;/code&gt; attribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128865"&gt;ensure let stmt compound assignment removal suggestion respect codepoint boundaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128517"&gt;fallback to string formatting if source is not available for lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128377"&gt;fix ICE Caused by Incorrectly Delaying E0107&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128572"&gt;fix &lt;code&gt;ElaborateBoxDerefs&lt;/code&gt; on debug varinfo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128862"&gt;ensure &lt;code&gt;Guard&lt;/code&gt;'s &lt;code&gt;drop&lt;/code&gt; method is removed at &lt;code&gt;opt-level=s&lt;/code&gt; for &lt;code&gt;…&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128273"&gt;improve &lt;code&gt;Ord&lt;/code&gt; viulation help&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128687"&gt;interpret: refactor function call handling to be better-abstracted&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/122362"&gt;link &lt;code&gt;std&lt;/code&gt; statically in &lt;code&gt;rustc_driver&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128400"&gt;linker: remove the "&lt;code&gt;--whole-archive&lt;/code&gt; in test mode" backcompat hack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128527"&gt;more information for fully-qualified suggestion when there are multiple impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128712"&gt;normalize &lt;code&gt;struct&lt;/code&gt; tail properly for &lt;code&gt;dyn&lt;/code&gt; ptr-to-ptr casting in new solver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/124944"&gt;on trait bound mismatch, detect multiple crate versions in dep tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128826"&gt;only suggest &lt;code&gt;#[allow]&lt;/code&gt; for &lt;code&gt;--warn&lt;/code&gt; and &lt;code&gt;--deny&lt;/code&gt; lint level flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128550"&gt;only walk ribs to collect possibly shadowed params if we are adding params in our new rib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128720"&gt;pass the right &lt;code&gt;ParamEnv&lt;/code&gt; to &lt;code&gt;might_permit_raw_init_strict&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128520"&gt;skip over args when determining if async-closure's inner coroutine consumes its upvars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3798"&gt;miri-script: use --remap-path-prefix to print errors relative to the right root&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128742"&gt;miri: make vtable addresses not globally unique&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3795"&gt;miri: &lt;code&gt;throw_unsup_format&lt;/code&gt; for alignment greater than 2^29&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3794"&gt;miri: allow all code to call &lt;code&gt;getuid()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3797"&gt;miri: don't panic on &lt;code&gt;miri_print_borrow_state()&lt;/code&gt; under &lt;code&gt;-Zmiri-disable-stacked-borrows&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3799"&gt;miri: josh: wait until the socket is ready&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/122792"&gt;stabilize &lt;code&gt;min_exhaustive_patterns&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128632"&gt;std: do not overwrite style in &lt;code&gt;get_backtrace_style&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128751"&gt;&lt;code&gt;std::thread: set_name&lt;/code&gt; implementation proposal for vxWorks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/125048"&gt;introduce PinCoerceUnsized trait to core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/120314"&gt;core: optimise Debug impl for &lt;code&gt;ascii::Char&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128417"&gt;add &lt;code&gt;f16&lt;/code&gt; and &lt;code&gt;f128&lt;/code&gt; math functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128261"&gt;impl &lt;code&gt;Default&lt;/code&gt; for collection iterators that don't already have it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128406"&gt;implement &lt;code&gt;BufReader::peek&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/126793"&gt;apply "polymorphization at home" to &lt;code&gt;RawVec&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128882"&gt;make &lt;code&gt;LocalWaker::will_wake&lt;/code&gt; consistent with &lt;code&gt;Waker::will_wake&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/compiler-builtins/pull/665"&gt;configure &lt;code&gt;f16&lt;/code&gt; and &lt;code&gt;f128&lt;/code&gt; support for WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14389"&gt;cargo: trim-paths: rustdoc supports trim-paths for diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14367"&gt;cargo: vendor: strip excluded build targets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14357"&gt;cargo: don't specify the depedency name in the &lt;code&gt;cargo add&lt;/code&gt; inferred name test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14141"&gt;cargo: add &lt;code&gt;info&lt;/code&gt; cargo subcommand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14352"&gt;cargo: fix renamed disallowed cfg lint name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14359"&gt;cargo: fix: &lt;code&gt;cargo package&lt;/code&gt; failed on bare commit git repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14340"&gt;cargo: infer registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14377"&gt;cargo: use context instead of &lt;code&gt;with_context&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14380"&gt;cargo: use longhand gitoxide path-spec patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128693"&gt;rustdoc-search: account for numeric disambiguators on impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128838"&gt;rustdoc: do not run doctests with invalid langstrings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128923"&gt;rustdoc: Stop showing impl items for negative impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128834"&gt;rustdoc: strip unreachable modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128736"&gt;fix rustdoc missing handling of remap-path-prefix option&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13220"&gt;clippy: &lt;code&gt;macro_metavars_in_unsafe&lt;/code&gt;: recognize metavariables in tail expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/11441"&gt;clippy: &lt;code&gt;single_match&lt;/code&gt;: fix checking of explicitly matched enums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/12150"&gt;clippy: add lint for &lt;code&gt;unused_result_ok&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13232"&gt;clippy: add path prefixes back when compiling &lt;code&gt;clippy_dev&lt;/code&gt; and &lt;code&gt;lintcheck&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13187"&gt;clippy: add settings menu on clippy lints page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13231"&gt;clippy: don't walk the HIR tree when checking for a const context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13163"&gt;clippy: fix case where &lt;code&gt;doc_markdown&lt;/code&gt; is triggered on words ending with "ified"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13234"&gt;clippy: lintcheck: disable doc links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13250"&gt;clippy: lintcheck: key lints on line start rather than byte start/end&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13255"&gt;clippy: remove more &lt;code&gt;snippet_opt&lt;/code&gt; calls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13211"&gt;clippy: respect allow &lt;code&gt;inconsistent_struct_constructor&lt;/code&gt; on the &lt;code&gt;struct&lt;/code&gt; definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17818"&gt;rust-analyzer: allow rust-project.json to be hidden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17845"&gt;rust-analyzer: implement TAIT and fix ATPIT a bit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17864"&gt;rust-analyzer: build and run build scripts in lsif command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17859"&gt;rust-analyzer: correctly support &lt;code&gt;#[rustc_deprecated_safe_2024]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17844"&gt;rust-analyzer: fix &lt;code&gt;find_path&lt;/code&gt; not respecting non-std preference config correctly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17823"&gt;rust-analyzer: fix unconfigured diagnostic being attached to the wrong file for modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17865"&gt;rust-analyzer: fix missing non-exhaustive &lt;code&gt;let&lt;/code&gt; diagnostics inside async or unsafe block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17824"&gt;rust-analyzer: fix native diagnostics not working&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17832"&gt;rust-analyzer: fix panic while rendering function type hint with impl trait arg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17863"&gt;rust-analyzer: resolve included files to their calling modules in IDE layer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17867"&gt;rust-analyzer: remove trailing excess comma in "Convert to named struct" assist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17813"&gt;rust-analyzer: tyck for non-ADT types when searching refs for &lt;code&gt;Self&lt;/code&gt; kw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17809"&gt;rust-analyzer: include vendored crates in StaticIndex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17862"&gt;rust-analyzer: only keep lib/ in publish-libs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17833"&gt;rust-analyzer: reuse recursion limit as expansion depth limit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A big week for compiler performance brought on mostly by statically linking the std library into &lt;code&gt;rustc_driver&lt;/code&gt; instead of dynamic linking. This overshadows all other improvements and regressions that were seen this week.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=8c7e0e160831866bc1a40691a39455aac21271c0&amp;amp;end=9cb1998ea15e179482504e07cad8fa121e169a32&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;8c7e0e16..9cb1998e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;(instructions:u)&lt;/th&gt;
&lt;th align="center"&gt;mean&lt;/th&gt;
&lt;th align="center"&gt;range&lt;/th&gt;
&lt;th align="center"&gt;count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;-&lt;/td&gt;
&lt;td align="center"&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;-1.3%&lt;/td&gt;
&lt;td align="center"&gt;[-2.9%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;217&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-1.4%&lt;/td&gt;
&lt;td align="center"&gt;[-4.9%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;196&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;All ❌✅ (primary)&lt;/td&gt;
&lt;td align="center"&gt;-1.3%&lt;/td&gt;
&lt;td align="center"&gt;[-2.9%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;217&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;2 Regressions, 2 Improvements, 2 Mixed; 1 of them in rollups
35 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Kobzol/rustc-perf/blob/3f0fc031a10c9decbfac4d1753452da2b10a03e1/triage/2024-08-13.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs_1"&gt;&lt;a class="toclink" href="#rfcs_1"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;h5 id="rust_1"&gt;&lt;a class="toclink" href="#rust_1"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Rust&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/104434"&gt;Tracking Issue for &lt;code&gt;iter::repeat_n()&lt;/code&gt; (&lt;code&gt;feature(iter_repeat_n)&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/83871"&gt;Tracking Issue for CharIndices::offset function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/128771"&gt;Stabilize &lt;code&gt;unsafe_attributes&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/127672"&gt;Stabilize opaque type precise capturing (RFC 3617)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/126877"&gt;CloneToUninit impls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="cargo"&gt;&lt;a class="toclink" href="#cargo"&gt;&lt;a href="https://github.com/rust-lang/cargo/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Cargo&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Cargo Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="language-team"&gt;&lt;a class="toclink" href="#language-team"&gt;&lt;a href="https://github.com/rust-lang/lang-team/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc+"&gt;Language Team&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Language Team Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="language-reference"&gt;&lt;a class="toclink" href="#language-reference"&gt;&lt;a href="https://github.com/rust-lang/reference/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Language Reference&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Language Reference RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="unsafe-code-guidelines"&gt;&lt;a class="toclink" href="#unsafe-code-guidelines"&gt;&lt;a href="https://github.com/rust-lang/unsafe-code-guidelines/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Unsafe Code Guidelines&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Unsafe Code Guideline Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No New or Updated RFCs were created this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2024-08-14 - 2024-09-11 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-15 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://meet.jit.si/RustHackAndLearnBerlin"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/rust-berlin/events/298633266/"&gt;&lt;strong&gt;Mirror: Rust Hack n Learn Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-20 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/299346968/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-21 | Hybrid - Virtual and In-Person (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/298631735/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Virtual | &lt;a href="https://www.meetup.com/conf42/"&gt;Conf42: Online Tech Events&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/conf42/events/297266825/"&gt;&lt;strong&gt;Conf42 Rustlang 2024&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Virtual (Charlottesville, NC, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/298897938/"&gt;&lt;strong&gt;Crafting Interpreters in Rust Collaboratively&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Virtual (Karlsruhe, DE) | &lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/"&gt;Karlsruhe Functional Programmers Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/events/293937801"&gt;&lt;strong&gt;Stammtisch (gemeinsam mit der C++ UG KA): various topics, from C++ to Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual | &lt;a href="https://www.eventbrite.com/o/ardan-labs-7092394651"&gt;Ardan Labs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.com/e/fearless-concurrency-with-rust-tickets-934569591807"&gt;&lt;strong&gt;Fearless Concurrency with Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual (Bordeaux, FR) | &lt;a href="https://www.meetup.com/bordeaux-rust/"&gt;Rust Bordeaux&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bordeaux-rust/events/302570681/"&gt;&lt;strong&gt;Live coding - A distance #1&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/dallasrust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallasrust/events/301585668/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual (Tel Aviv, IL) | &lt;a href="https://www.meetup.com/code-mavens/"&gt;Code Mavens&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-in-israel/events/302327956/"&gt;&lt;strong&gt;Declarative macros in Rust (Virtual) - מקרוים בראסט&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-28 | Virtual (Tel Aviv, IL) | &lt;a href="https://www.meetup.com/code-mavens/"&gt;Code Mavens&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/code-mavens/events/302151487/"&gt;&lt;strong&gt;Command Line Tools: Implementing wc in Rust (English, Virtual)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://meet.jit.si/RustHackAndLearnBerlin"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/rust-berlin/events/298633267/"&gt;&lt;strong&gt;Mirror: Rust Hack n Learn Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Virtual (Tel Aviv, IL) | &lt;a href="https://www.meetup.com/code-mavens/"&gt;Code Mavens&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/code-mavens/events/302391142/"&gt;&lt;strong&gt;Rust Source Code Reading: The thousands crate (English)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-03 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/302007365/"&gt;&lt;strong&gt;Buffalo Rust User Group&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-04 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/300328029/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/300820268/"&gt;&lt;strong&gt;Rust Nürnberg online&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-10 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/dallasrust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallasrust/events/299346981/"&gt;&lt;strong&gt;Second Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-10 - 2024-09-13 | Hybrid: Virtual and In-Person (Montreal, QC, CA)| &lt;a href="https://rustconf.com/"&gt;Rust Conf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/events/rustconf-2024/"&gt;&lt;strong&gt;Rust Conf 2024&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="africa"&gt;&lt;a class="toclink" href="#africa"&gt;Africa&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-09-06 | Kampala, UG | &lt;a href="https://www.eventbrite.com/o/rust-circle-kampala-65249289033/"&gt;Rust Circle Kampala&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.com/e/rust-circle-meetup-tickets-628763176587/"&gt;&lt;strong&gt;Rust Circle Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;&lt;a class="toclink" href="#asia"&gt;Asia&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-24 | Bangalore, IN | &lt;a href="https://hasgeek.com/rustbangalore"&gt;Rust Bangalore&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hasgeek.com/rustbangalore/august-2024-rustacean-meetup/"&gt;&lt;strong&gt;August 2024 Rustacean meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-14 | Köln/Cologne, DE | &lt;a href="https://www.meetup.com/rustcologne/"&gt;Rust Cologne&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustcologne/events/302674635/"&gt;&lt;strong&gt;This Month in Rust, August&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-14 | Reading, UK | &lt;a href="https://rustworkshop.co/meetup/"&gt;Reading Rust Workshop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/reading-rust-workshop/events/302153005/"&gt;&lt;strong&gt;Reading Rust Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-20 | Leipzig, DE | &lt;a href="https://www.meetup.com/rust-modern-systems-programming-in-leipzig/"&gt;Rust - Modern Systems Programming in Leipzig&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-modern-systems-programming-in-leipzig/events/302425034/"&gt;&lt;strong&gt;Cargo plugins - what the cargo ecosystem has to offer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-20 | Aarhus, DK | &lt;a href="https://www.meetup.com/rust-aarhus/"&gt;Rust Aarhus&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-aarhus/events/301522950/"&gt;&lt;strong&gt;Hack Night&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-21 | Cabridge, UK | &lt;a href="https://www.meetup.com/cambridge-rust-meetup/"&gt;Cambridge Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/cambridge-rust-meetup/events/302574953/"&gt;&lt;strong&gt;Monthly Rust Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-21 | Nürnberg, DE | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/302080495/"&gt;&lt;strong&gt;Walk'n'Talk around Wöhrder See (+ Burritos)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Manchester, UK | &lt;a href="https://www.meetup.com/rust-manchester/"&gt;Rust Manchester&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-manchester/events/302419276/"&gt;&lt;strong&gt;Rust Manchester Talks August&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-26 | Mainz, DE | &lt;a href="https://rheinneckar.events/@fsmathe_informatik_mainz@rheinmain.social"&gt;Fachschaft Mathematik+Informatik der JGU Mainz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rheinneckar.events/events/3f76f860-75c1-4f3a-810f-03fc0cecb691/"&gt;&lt;strong&gt;Ferienkurs Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Trondheim, NO | &lt;a href="https://www.meetup.com/rust-trondheim/"&gt;Rust Trondheim&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-trondheim/events/300991355/"&gt;&lt;strong&gt;Exploring Slint: A Rust-based UI Toolkit – Mob Programming Session&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-28 | Frankfurt (Main), DE | &lt;a href="https://www.meetup.com/rust-rhein-main"&gt;Rust Rhein Main&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-rhein-main/events/302738445/"&gt;&lt;strong&gt;Rust Frankfurt WebAssembly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Berlin, DE | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-berlin/events/299421378/"&gt;&lt;strong&gt;Rust and Tell - Title&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-11 | Reading, UK | &lt;a href="https://rustworkshop.co/meetup/"&gt;Reading Rust Workshop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/reading-rust-workshop/events/302833564/"&gt;&lt;strong&gt;Reading Rust Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-19 | Minneapolis, MN US | &lt;a href="https://www.meetup.com/minneapolis-rust-meetup/"&gt;Minneapolis Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/minneapolis-rust-meetup/events/301428949/"&gt;&lt;strong&gt;Minneapolis Rust Meetup: "State of Rust GPU Programming" &amp;amp; Happy Hour&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-20 | New York, NY, US | &lt;a href="https://www.meetup.com/Rust-NYC/"&gt;Rust NYC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nyc/events/302480064/"&gt;&lt;strong&gt;Rust NYC: Doing the Bare Minimum with Isograph (talk)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-20 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/301614081/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-21 | Virtual and In-Person (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/298631735/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-26 | Boulder, CO, US | &lt;a href="https://www.meetup.com/boulder-rust-meetup/"&gt;Boulder Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-rust-meetup/events/302579817/"&gt;&lt;strong&gt;Boulder Rust Meetup: Learnings and Hangs!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-28 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/xvkdgtygclblc/"&gt;&lt;strong&gt;Rust Lunch - Fareground&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Nashville, TN, US | &lt;a href="https://www.meetup.com/music-city-rust-developers/"&gt;Music City Rust Developers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/music-city-rust-developers/events/301420110/"&gt;&lt;strong&gt;Music City Rust Developers : placeholder&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | Mountain View, CA, US | &lt;a href="https://www.meetup.com/mv-rust-meetup/"&gt;Mountain View Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/mv-rust-meetup/events/302723843/"&gt;&lt;strong&gt;Rust Meetup at Hacker Dojo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-05 | St. Louis, MO, US | &lt;a href="https://www.meetup.com/stl-rust/"&gt;STL Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/stl-rust/events/hdzdmtygcmbhb/"&gt;&lt;strong&gt;Lifetimes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-10 - 2024-09-13 | Hybrid: Virtual and In-Person (Montreal, QC, CA)| &lt;a href="https://rustconf.com/"&gt;Rust Conf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/events/rustconf-2024/"&gt;&lt;strong&gt;Rust Conf 2024&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="oceania"&gt;&lt;a class="toclink" href="#oceania"&gt;Oceania&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-22 | Auckland, NZ | &lt;a href="https://www.meetup.com/rust-akl/"&gt;Rust AKL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/302431924/"&gt;&lt;strong&gt;Rust AKL: Dot IX: Diagram Generator + Deep Learning from Scratch in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Canberra, ACT, AU | &lt;a href="https://www.meetup.com/rust-canberra/"&gt;Canberra Rust User Group (CRUG)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-canberra/events/301887261/"&gt;&lt;strong&gt;June Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/1ecdzp2/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;We are living through Rust finding its more "complete" form while still being an actually useful production language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://old.reddit.com/r/rust/comments/1eq357a/ive_been_working_with_rust_for_a_couple_years_now/lhu5ag2/"&gt;Catherine West on /r/rust&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Given a woeful lack of suggestions, llogiq is reasonably pleased with his choice.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/1esluoq/this_week_in_rust_560/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</content><category term="This Week in Rust"></category></entry><entry><title>This Week in Rust 559</title><link href="https://this-week-in-rust.org/blog/2024/08/07/this-week-in-rust-559/" rel="alternate"></link><published>2024-08-07T00:00:00-04:00</published><updated>2024-08-07T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2024-08-07:/blog/2024/08/07/this-week-in-rust-559/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://x.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on X (formerly Twitter) or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tag us at &lt;a href="https://x.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; on X (formerly Twitter) or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;@ThisWeekinRust&lt;/a&gt; on mastodon.social, or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt; and archives can be viewed at &lt;a href="https://this-week-in-rust.org/"&gt;this-week-in-rust.org&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Want TWIR in your inbox? &lt;a href="https://this-week-in-rust.us11.list-manage.com/subscribe?u=fd84c1c757e02889a9b08d289&amp;amp;id=0ed8b72485"&gt;Subscribe here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;&lt;a class="toclink" href="#updates-from-rust-community"&gt;Updates from Rust Community&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3 id="newsletters"&gt;&lt;a class="toclink" href="#newsletters"&gt;Newsletters&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://thisweekinbevy.com/issue/2024-08-05-0141-tracking-change-detection-and-more-rendering-examples"&gt;thisweekinbevy - 0.14.1, tracking change detection, and more rendering examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;&lt;a class="toclink" href="#projecttooling-updates"&gt;Project/Tooling Updates&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://v2.tauri.app/blog/tauri-2-0-0-release-candidate/"&gt;Tauri 2.0 Release Candidate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blaz.is/blog/post/cglue-0-3/"&gt;CGlue 0.3 Future and Beyond&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ratatui.rs/highlights/v028/"&gt;ratatui - v0.28.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrewdavidmackenzie/pigg/releases/tag/0.3.3"&gt;Pigg 0.3.3&lt;/a&gt; the GUI for RPi GPIO interaction released, with Remote GPIO feature!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sea-ql.org/blog/2024-08-04-sea-orm-1.0/"&gt;Announcing SeaORM 1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev-state.com/posts/danube_pubsub/"&gt;Danube - Queuing and Pub/Sub message patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;&lt;a class="toclink" href="#observationsthoughts"&gt;Observations/Thoughts&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.paavo.me/demo-engine-part-1/"&gt;Trying and mostly failing to optimize frustum culling in a WebGL + TS + Rust engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mattkeeter.com/blog/2024-08-01-panic/"&gt;Panic! At The Async Runtime Shutdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sunshowers.io/posts/rustc-segfault-illumos/"&gt;Debugging a rustc segfault on illumos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://j.njsm.de/blog/tracing-rs/"&gt;Tracing my way with tracing-rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Series] &lt;a href="https://systemweakness.com/hitchhikers-guide-to-building-a-distributed-filesystem-in-rust-the-very-beginning-2c02eb7313e7"&gt;The Hitchhiker’s Guide to Building a Distributed Filesystem in Rust.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitfieldconsulting.com/posts/best-rust-books"&gt;Best Rust books for 2024&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flakm.com/posts/phantom_leak/"&gt;Phantom Menace: memory leak that wasn't there&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codethink.co.uk/articles/2024/secure_bootloader/"&gt;Developing a cryptographically secure bootloader for RISC-V in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.weiznich.de/blog/diagnostic-namespace-do-not-recommend/"&gt;Extending the #[diagnostic] tool attribute namespace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;&lt;a class="toclink" href="#rust-walkthroughs"&gt;Rust Walkthroughs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hegdenu.net/posts/tracing-tokio-resources/"&gt;Tracing Tokio Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Series] &lt;a href="https://chesedo.me/blog/manual-dependency-injection-rust/"&gt;Mastering Dependency Injection in Rust: Crafting a Custom Container&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="research"&gt;&lt;a class="toclink" href="#research"&gt;Research&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@xorio42/the-hitchhikers-guide-to-building-a-distributed-filesystem-in-rust-the-continuation-part-2-ad1fd8bc9cf8"&gt;The Hitchhiker’s Guide to Building a Distributed Filesystem in Rust.&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;&lt;a class="toclink" href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://psibi.in/posts/2024-08-04-rustic-babel.html"&gt;Rustic: Enhanced Org Babel integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://antoniosbarotsis.github.io/posts/efficient-logging/"&gt;Efficient Logging - Speeding up production code by logging more efficiently&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;&lt;a class="toclink" href="#crate-of-the-week"&gt;Crate of the Week&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/lvkv/whenfs"&gt;WhenFS&lt;/a&gt;, a FUSE filesystem that misuses your google calendar as storage. And yes, your schedule will look as packed as mine once you store one or two files in there.&lt;/p&gt;
&lt;p&gt;Despite yet another week fully devoid of suggestions nor votes, llogiq is reasonably pleased with his choice.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="calls-for-testing"&gt;&lt;a class="toclink" href="#calls-for-testing"&gt;Calls for Testing&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a class="toclink" href="#rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No calls for testing were issued this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust"&gt;&lt;a class="toclink" href="#rust"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/call-for-testing"&gt;Rust&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No calls for testing were issued this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rustup"&gt;&lt;a class="toclink" href="#rustup"&gt;&lt;a href="https://github.com/rust-lang/rustup/labels/call-for-testing"&gt;Rustup&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No calls for testing were issued this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h2 id="call-for-participation-projects-and-speakers"&gt;&lt;a class="toclink" href="#call-for-participation-projects-and-speakers"&gt;Call for Participation; projects and speakers&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="cfp-projects"&gt;&lt;a class="toclink" href="#cfp-projects"&gt;CFP - Projects&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but did not know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rencfs/issues/111"&gt;rencfs - Abstract file access layer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rencfs/issues/104"&gt;rencfs - Add RustCrypto as a feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rencfs/issues/97"&gt;rencfs - File and fs API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rencfs/issues/90"&gt;rencfs - io API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rfs/issues/19"&gt;rfs - Coordinator node API&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rfs/issues/20"&gt;rfs - Data node API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rfs/issues/18"&gt;rfs - File upload and changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rfs/issues/15"&gt;rfs - Communication between Coordinator and Data nodes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/syncoxiders/issues/10"&gt;syncoxiders - Two-way sync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/syncoxiders/issues/9"&gt;syncoxiders - Sync chunks in parallel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/syncoxiders/issues/13"&gt;syncoxiders - Integrate SurrealDB to store metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/syncoxiders/issues/6"&gt;syncoxiders - Migrate scripts tests to integration tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radumarias/rencfs-desktop/issues/4"&gt;rencfs-desktop - Implement daemon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.github.com/tokio-rs/tokio/issues/6741"&gt;Proposal: Deprecate Tokio's LocalSet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://github.com/rust-lang/this-week-in-rust?tab=readme-ov-file#call-for-participation-guidelines"&gt;here&lt;/a&gt; or through a &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;PR to TWiR&lt;/a&gt; or by reaching out on &lt;a href="https://x.com/ThisWeekInRust"&gt;X (Formerly twitter)&lt;/a&gt; or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;Mastodon&lt;/a&gt;!&lt;/p&gt;
&lt;h3 id="cfp-events"&gt;&lt;a class="toclink" href="#cfp-events"&gt;CFP - Events&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Are you a new or experienced speaker looking for a place to share something cool? This section highlights events that are being planned and are accepting submissions to join their event as a speaker.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No Calls for papers or presentations were submitted this week.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you are an event organizer hoping to expand the reach of your event, please submit a link to the website through a &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;PR to TWiR&lt;/a&gt; or by reaching out on &lt;a href="https://x.com/ThisWeekInRust"&gt;X (formerly Twitter)&lt;/a&gt; or &lt;a href="https://mastodon.social/@thisweekinrust"&gt;Mastodon&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="updates-from-the-rust-project"&gt;&lt;a class="toclink" href="#updates-from-the-rust-project"&gt;Updates from the Rust Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;381 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2024-07-30..2024-08-06"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128315"&gt;fix vita build of std and forbid unsafe in unsafe in the os/vita module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128452"&gt;&lt;code&gt;derive(SmartPointer)&lt;/code&gt;: require pointee to be maybe sized&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127586"&gt;add &lt;code&gt;#[must_use]&lt;/code&gt; to some &lt;code&gt;into_raw*&lt;/code&gt; functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/123813"&gt;add &lt;code&gt;REDUNDANT_IMPORTS&lt;/code&gt; lint for new redundant import detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127027"&gt;add &lt;code&gt;f16&lt;/code&gt; and &lt;code&gt;f128&lt;/code&gt; math functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/124339"&gt;allow overwriting the output of &lt;code&gt;rustc --version&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128589"&gt;allow setting &lt;code&gt;link-shared&lt;/code&gt; and &lt;code&gt;static-libstdcpp&lt;/code&gt; with CI LLVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128416"&gt;android: remove libstd hacks for unsupported Android APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128581"&gt;assert that all attributes are actually checked via &lt;code&gt;CheckAttrVisitor&lt;/code&gt; and aren't accidentally usable on completely unrelated HIR nodes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/126818"&gt;better handle suggestions for the already present code and fix some suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127907"&gt;built-in derive: remove &lt;code&gt;BYTE_SLICE_IN_PACKED_STRUCT_WITH_DERIVE&lt;/code&gt; hack and lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128162"&gt;cleanup sys module to match house style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128450"&gt;create COFF archives for non-LLVM backends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128688"&gt;custom MIR: add support for tail calls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128441"&gt;delegation: second attempt to improve perf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/125929"&gt;delegation: support generics for delegation from free functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128357"&gt;detect non-lifetime binder params shadowing item params&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128623"&gt;do not fire unhandled attribute assertion on multi-segment &lt;code&gt;AttributeType::Normal&lt;/code&gt; attributes with builtin attribute as first segment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128559"&gt;don't re-elaborate already elaborated caller bounds in method probe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127574"&gt;elaborate unknowable goals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128458"&gt;emit an error if &lt;code&gt;#[optimize]&lt;/code&gt; is applied to an incompatible item&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/124336"&gt;enforce supertrait outlives obligations hold when confirming impl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128496"&gt;fix removed &lt;code&gt;box_syntax&lt;/code&gt; diagnostic if source isn't available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128686"&gt;fix the invalid argument type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128478"&gt;ignore &lt;code&gt;use&lt;/code&gt; declaration reformatting in &lt;code&gt;.git-blame-ignore-revs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128530"&gt;implement &lt;code&gt;UncheckedIterator&lt;/code&gt; directly for &lt;code&gt;RepeatN&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128305"&gt;improve error message when &lt;code&gt;global_asm!&lt;/code&gt; uses &lt;code&gt;asm!&lt;/code&gt; operands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128482"&gt;interpret: on a signed deref check, mention the right pointer in the error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128380"&gt;make &lt;code&gt;///&lt;/code&gt; doc comments compatible with naked functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128376"&gt;mark &lt;code&gt;Parser::eat&lt;/code&gt;/&lt;code&gt;check&lt;/code&gt; methods as &lt;code&gt;#[must_use]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128388"&gt;match LLVM ABI in &lt;code&gt;extern "C"&lt;/code&gt; functions for &lt;code&gt;f128&lt;/code&gt; on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127159"&gt;match lowering: Hide &lt;code&gt;Candidate&lt;/code&gt; from outside the lowering algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127543"&gt;more unsafe attr verification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128694"&gt;normalize when equating &lt;code&gt;dyn&lt;/code&gt; tails in MIR borrowck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/126804"&gt;on short error format, append primary span label to message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128244"&gt;peel off explicit (or implicit) deref before suggesting clone on move error in borrowck, remove some hacks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128443"&gt;properly mark loop as diverging if it has no breaks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128412"&gt;remove &lt;code&gt;crate_level_only&lt;/code&gt; from &lt;code&gt;ELIDED_LIFETIMES_IN_PATHS&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128404"&gt;revert recent changes to dead code analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128141"&gt;set branch protection function attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127324"&gt;simplify match based on the cast result of &lt;code&gt;IntToInt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128151"&gt;structured suggestion for &lt;code&gt;extern crate foo&lt;/code&gt; when &lt;code&gt;foo&lt;/code&gt; isn't resolved in import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128449"&gt;temporarily switch &lt;code&gt;ambiguous_negative_literals&lt;/code&gt; lint to allow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128379"&gt;the output in stderr expects panic-unwind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127655"&gt;turn &lt;code&gt;invalid_type_param_default&lt;/code&gt; into a &lt;code&gt;FutureReleaseErrorReportInDeps&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/125558"&gt;tweak type inference for &lt;code&gt;const&lt;/code&gt; operands in inline asm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128607"&gt;use &lt;code&gt;object&lt;/code&gt; in &lt;code&gt;run-make/symbols-visibility&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128430"&gt;use a separate pattern type for &lt;code&gt;rustc_pattern_analysis&lt;/code&gt; diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128531"&gt;miri: add a flag to do recursive validity checking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3769"&gt;miri: add &lt;code&gt;miri_start&lt;/code&gt; support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/3776"&gt;miri: use Scalar consistently in foreign item emulation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128370"&gt;linker: pass fewer search directories to the linker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128336"&gt;use Vec in &lt;code&gt;instantiate_binder_with_fresh_vars&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128200"&gt;change output normalization logic to be linear against size of output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128544"&gt;check divergence value first before doing span operations in &lt;code&gt;warn_if_unreachable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/126991"&gt;accelerate GVN a little&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/117468"&gt;stabilize Wasm relaxed SIMD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127921"&gt;stabilize unsafe extern blocks (RFC 3484)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128303"&gt;enable &lt;code&gt;std::io::copy&lt;/code&gt; specialisation for &lt;code&gt;std::pipe::{PipeReader, PipeWriter}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128254"&gt;rewrite binary search implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128309"&gt;implement cursors for &lt;code&gt;BTreeSet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/127567"&gt;implement the &lt;code&gt;once_wait&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/compiler-builtins/pull/652"&gt;configure which platforms have &lt;code&gt;f16&lt;/code&gt; and &lt;code&gt;f128&lt;/code&gt; enabled by default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/542"&gt;hashbrown: implement Default for iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/regex/pull/1219"&gt;regex: rust nightly removed the lifetime from Pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128382"&gt;cargo-miri: better error when we seem to run inside bootstrap but something is wrong&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14358"&gt;cargo: build-std: remove hack on creating virtual std workspace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14296"&gt;cargo: config: Adjust MSRV resolve config field name / values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14325"&gt;cargo: publish: Don't strip non-dev features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/14339"&gt;cargo: also build manpage for cargo.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128385"&gt;rustdoc-json: discard non-local inherent impls for primitives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128578"&gt;rustdoc: cleanup &lt;code&gt;CacheBuilder&lt;/code&gt; code for building search index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128471"&gt;rustdoc: fix handling of &lt;code&gt;Self&lt;/code&gt; type in search index and refactor its representation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128615"&gt;rustdoc: make the hover trail for doc anchors a bit bigger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128339"&gt;rustdoc: Make the buttons remain when code example is clicked&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/128573"&gt;rustdoc: simplify &lt;code&gt;body&lt;/code&gt; usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt/pull/6187"&gt;rustfmt: add repo cloning to check-diff crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt/pull/6266"&gt;rustfmt: check exit status of git commands spawned by build script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt/pull/6262"&gt;rustfmt: impl &lt;code&gt;rewrite_result&lt;/code&gt; for Pat, TuplePatField&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13217"&gt;clippy: check exit status of subcommands spawned by &lt;code&gt;rustc_tools_util&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13108"&gt;clippy: fix &lt;code&gt;redundant_closure&lt;/code&gt; false positive with closures has return type contains &lt;code&gt;'static&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13126"&gt;clippy: fix &lt;code&gt;redundant_slicing&lt;/code&gt; when the slice is behind a mutable reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13177"&gt;clippy: fix broken list for lints config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13195"&gt;clippy: fix false positive for &lt;code&gt;missing_backticks&lt;/code&gt; in footnote references&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13209"&gt;clippy: limit number of &lt;code&gt;nonminimal_bool&lt;/code&gt; ops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13210"&gt;clippy: lintcheck: force warn all lints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13136"&gt;clippy: make restriction lints use &lt;code&gt;span_lint_and_then&lt;/code&gt; (a → e)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13145"&gt;clippy: make restriction lints use &lt;code&gt;span_lint_and_then&lt;/code&gt; (q → w)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13213"&gt;clippy: remove &lt;code&gt;multispan_sugg[_with_applicability]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13115"&gt;clippy: remove duplicated &lt;code&gt;peel_middle_ty_refs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13180"&gt;clippy: simplify lint deprecation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13222"&gt;clippy: use a deterministic number of digits in &lt;code&gt;rustc_tools_util&lt;/code&gt; commit hashes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/13181"&gt;clippy: use a single multipart suggestion for &lt;code&gt;implicit_hasher&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17791"&gt;rust-analyzer: implement diagnostic for &lt;code&gt;await&lt;/code&gt; outside of &lt;code&gt;async&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17795"&gt;rust-analyzer: load sysroot library via cargo metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17784"&gt;rust-analyzer: support inlay hint for more expr with label&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17755"&gt;rust-analyzer: apply &lt;code&gt;IndexMut&lt;/code&gt; obligations for non-assigning mutable index usages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17747"&gt;rust-analyzer: errors on method call inferences with elided lifetimes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17789"&gt;rust-analyzer: insert a generic arg for &lt;code&gt;impl Trait&lt;/code&gt; when lowering generic args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17763"&gt;rust-analyzer: insert a tail &lt;code&gt;Ok(())&lt;/code&gt; for expr block instead of wrapping with &lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17805"&gt;rust-analyzer: panic in path transform with default type parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17750"&gt;rust-analyzer: remove AbsPath requirement from linkedProjects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17802"&gt;rust-analyzer: surpress type mismatches in calls with mismatched arg counts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17745"&gt;rust-analyzer: improve crate manifests, adding missing &lt;code&gt;[package.repository]&lt;/code&gt; and &lt;code&gt;[package.description]&lt;/code&gt; fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17775"&gt;rust-analyzer: segregate syntax and semantic diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17799"&gt;rust-analyzer: split out syntax-bridge into a separate crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/17761"&gt;rust-analyzer: when josh-proxy screws up the roundtrip, say what the involved commits are&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;&lt;a class="toclink" href="#rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This week saw several large improvements caused mostly by the &lt;a href="https://github.com/rust-lang/rust/pull/127513"&gt;update to LLVM 19&lt;/a&gt;. There were some regressions in several pull requests, but most of them were immediately fixed in a follow-up PR.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@kobzol&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=7e3a971870f23c94f7aceb53b490fb37333150ff&amp;amp;end=8c7e0e160831866bc1a40691a39455aac21271c0&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;7e3a9718..8c7e0e16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;(instructions:u)&lt;/th&gt;
&lt;th align="center"&gt;mean&lt;/th&gt;
&lt;th align="center"&gt;range&lt;/th&gt;
&lt;th align="center"&gt;count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;1.0%&lt;/td&gt;
&lt;td align="center"&gt;[0.2%, 3.8%]&lt;/td&gt;
&lt;td align="center"&gt;91&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;1.9%&lt;/td&gt;
&lt;td align="center"&gt;[0.2%, 19.2%]&lt;/td&gt;
&lt;td align="center"&gt;104&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;-4.4%&lt;/td&gt;
&lt;td align="center"&gt;[-15.8%, -0.3%]&lt;/td&gt;
&lt;td align="center"&gt;120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-3.3%&lt;/td&gt;
&lt;td align="center"&gt;[-10.4%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;All ❌✅ (primary)&lt;/td&gt;
&lt;td align="center"&gt;-2.1%&lt;/td&gt;
&lt;td align="center"&gt;[-15.8%, 3.8%]&lt;/td&gt;
&lt;td align="center"&gt;211&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;6 Regressions, 3 Improvements, 5 Mixed; 4 of them in rollups
51 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Kobzol/rustc-perf/blob/1b5a3bf24549eea0a1a53a3de40a107ef35746fb/triage/2024-08-06.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;&lt;a class="toclink" href="#approved-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3529"&gt;Merge RFC 3529: Add named path bases to cargo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3668"&gt;Merge RFC 3668: Async closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3671"&gt;Promote aarch64-apple-darwin to Tier 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3672"&gt;RFC for project goals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;&lt;a class="toclink" href="#final-comment-period"&gt;Final Comment Period&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4 id="rfcs_1"&gt;&lt;a class="toclink" href="#rfcs_1"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="tracking-issues-prs"&gt;&lt;a class="toclink" href="#tracking-issues-prs"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;h5 id="rust_1"&gt;&lt;a class="toclink" href="#rust_1"&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Rust&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/127679"&gt;Stabilize &lt;code&gt;raw_ref_op&lt;/code&gt; (RFC 2582)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/101196"&gt;Tracking Issue for &lt;code&gt;Ready::into_inner()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/55132"&gt;Tracking issue for thread::Builder::spawn_unchecked&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/126383"&gt;Tracking Issue for is_none_or&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/126877"&gt;CloneToUninit impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/issues/44286"&gt;Tracking issue for HashMap &lt;code&gt;OccupiedEntry::{replace_key, replace_entry}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/issues/56167"&gt;Tracking issue for HashMap::raw_entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/106943"&gt;Implement DoubleEnded and ExactSize for Take\&amp;lt;Repeat&gt; and Take\&amp;lt;RepeatWith&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/109402"&gt;Implement owned ops for &lt;code&gt;HashSet&lt;/code&gt; and &lt;code&gt;BTreeSet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/82901"&gt;Tracking Issue for &lt;code&gt;Option::get_or_insert_default&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/128394"&gt;Unify run button display with "copy code" button and with mdbook buttons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/126245"&gt;Greatly speed up doctests by compiling compatible doctests in one file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="cargo"&gt;&lt;a class="toclink" href="#cargo"&gt;&lt;a href="https://github.com/rust-lang/cargo/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Cargo&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Cargo Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="language-team"&gt;&lt;a class="toclink" href="#language-team"&gt;&lt;a href="https://github.com/rust-lang/lang-team/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc+"&gt;Language Team&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Language Team Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="language-reference"&gt;&lt;a class="toclink" href="#language-reference"&gt;&lt;a href="https://github.com/rust-lang/reference/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Language Reference&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: \&amp;lt;not specified&gt;] &lt;a href="https://github.com/rust-lang/reference/pull/1550"&gt;Reformat (and only reformat) the inline assembly chapter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="unsafe-code-guidelines"&gt;&lt;a class="toclink" href="#unsafe-code-guidelines"&gt;&lt;a href="https://github.com/rust-lang/unsafe-code-guidelines/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Unsafe Code Guidelines&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Unsafe Code Guideline Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="new-and-updated-rfcs"&gt;&lt;a class="toclink" href="#new-and-updated-rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3674"&gt;crates.io: Remove dev-dependencies from the index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="upcoming-events"&gt;&lt;a class="toclink" href="#upcoming-events"&gt;Upcoming Events&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2024-08-07 - 2024-09-04 🦀&lt;/p&gt;
&lt;h3 id="virtual"&gt;&lt;a class="toclink" href="#virtual"&gt;Virtual&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-07 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/300328027/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-08 | Virtual (Charlottesville, NC, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/298897918/"&gt;&lt;strong&gt;Crafting Interpreters in Rust Collaboratively&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-08 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/300787793/"&gt;&lt;strong&gt;Rust Nürnberg online&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-08 | Virtual (Tel Aviv, IL) | &lt;a href="https://www.meetup.com/code-mavens/"&gt;Code Mavens&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/code-mavens/events/302391142/"&gt;&lt;strong&gt;Rust Source Code Reading: The thousands crate (English)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-13 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/dallasrust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallasrust/events/299346978/"&gt;&lt;strong&gt;Second Tuesday: Typestate Pattern in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-15 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://meet.jit.si/RustHackAndLearnBerlin"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/rust-berlin/events/298633266/"&gt;&lt;strong&gt;Mirror: Rust Hack n Learn Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-20 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc/"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/299346968/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-21 | Hybrid - Virtual and In-Person (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/298631735/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Virtual | &lt;a href="https://www.meetup.com/conf42/"&gt;Conf42: Online Tech Events&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/conf42/events/297266825/"&gt;&lt;strong&gt;Conf42 Rustlang 2024&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Virtual (Charlottesville, NC, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/298897938/"&gt;&lt;strong&gt;Crafting Interpreters in Rust Collaboratively&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Virtual (Karlsruhe, DE) | &lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/"&gt;Karlsruhe Functional Programmers Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/events/293937801"&gt;&lt;strong&gt;Stammtisch (gemeinsam mit der C++ UG KA): various topics, from C++ to Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual | &lt;a href="https://www.eventbrite.com/o/ardan-labs-7092394651"&gt;Ardan Labs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.com/e/fearless-concurrency-with-rust-tickets-934569591807"&gt;&lt;strong&gt;Fearless Concurrency with Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual (Bordeaux, FR) | &lt;a href="https://www.meetup.com/bordeaux-rust/"&gt;Rust Bordeaux&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bordeaux-rust/events/302570681/"&gt;&lt;strong&gt;Live coding - A distance #1&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/dallasrust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallasrust/events/301585668/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Virtual (Tel Aviv, IL) | &lt;a href="https://www.meetup.com/code-mavens/"&gt;Code Mavens&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-in-israel/events/302327956/"&gt;&lt;strong&gt;Declarative macros in Rust (Virtual) - מקרוים בראסט&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-28 | Virtual (Tel Aviv, IL) | &lt;a href="https://www.meetup.com/code-mavens/"&gt;Code Mavens&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/code-mavens/events/302151487/"&gt;&lt;strong&gt;Command Line Tools: Implementing wc in Rust (English, Virtual)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://meet.jit.si/RustHackAndLearnBerlin"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/rust-berlin/events/298633267/"&gt;&lt;strong&gt;Mirror: Rust Hack n Learn Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-03 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/302007365/"&gt;&lt;strong&gt;Buffalo Rust User Group&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-09-04 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/300328029/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;&lt;a class="toclink" href="#europe"&gt;Europe&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-14 | Köln/Cologne, DE | &lt;a href="https://www.meetup.com/rustcologne/"&gt;Rust Cologne&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustcologne/events/302674635/"&gt;&lt;strong&gt;This Month in Rust, August&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-14 | Reading, UK | &lt;a href="https://rustworkshop.co/meetup/"&gt;Reading Rust Workshop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/reading-rust-workshop/events/302153005/"&gt;&lt;strong&gt;Reading Rust Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-20 | Aarhus, DK | &lt;a href="https://www.meetup.com/rust-aarhus/"&gt;Rust Aarhus&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-aarhus/events/301522950/"&gt;&lt;strong&gt;Hack Night&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-21 | Nürnberg, DE | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/302080495/"&gt;&lt;strong&gt;Walk'n'Talk around Wöhrder See (+ Burritos)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-22 | Manchester, UK | &lt;a href="https://www.meetup.com/rust-manchester/"&gt;Rust Manchester&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-manchester/events/302419276/"&gt;&lt;strong&gt;Rust Manchester Talks August&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-26 | Mainz, DE | &lt;a href="https://rheinneckar.events/@fsmathe_informatik_mainz@rheinmain.social"&gt;Fachschaft Mathematik+Informatik der JGU Mainz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rheinneckar.events/events/3f76f860-75c1-4f3a-810f-03fc0cecb691"&gt;&lt;strong&gt;Ferienkurs Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Berlin, DE | &lt;a href="https://berline.rs/"&gt;OpenTechSchool Berlin&lt;/a&gt; + &lt;a href="https://www.meetup.com/rust-berlin/"&gt;Rust Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-berlin/events/299421378/"&gt;&lt;strong&gt;Rust and Tell - Title&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;&lt;a class="toclink" href="#north-america"&gt;North America&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-08 | Mountain View, CA, US | &lt;a href="https://www.meetup.com/mv-rust-meetup/"&gt;Mountain View Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/mv-rust-meetup/events/302067008/"&gt;&lt;strong&gt;Rust Meetup at Hacker Dojo&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-08 | Seattle, WA, US | &lt;a href="https://www.meetup.com/seattle-rust-user-group/events/"&gt;Seattle Rust User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/seattle-rust-user-group/events/302330477/"&gt;&lt;strong&gt;August Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-19 | Minneapolis, MN US | &lt;a href="https://www.meetup.com/minneapolis-rust-meetup/"&gt;Minneapolis Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/minneapolis-rust-meetup/events/301428949/"&gt;&lt;strong&gt;Minneapolis Rust Meetup: "State of Rust GPU Programming" &amp;amp; Happy Hour&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-20 | New York, NY, US | &lt;a href="https://www.meetup.com/Rust-NYC/"&gt;Rust NYC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nyc/events/302480064/"&gt;&lt;strong&gt;Rust NYC: Doing the Bare Minimum with Isograph (talk)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-20 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/301614081/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-21 | Virtual and In-Person (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/298631735/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-28 | Austin, TX, US | &lt;a href="https://www.meetup.com/rust-atx/"&gt;Rust ATC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-atx/events/xvkdgtygclblc/"&gt;&lt;strong&gt;Rust Lunch - Fareground&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-29 | Nashville, TN, US | &lt;a href="https://www.meetup.com/music-city-rust-developers/"&gt;Music City Rust Developers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/music-city-rust-developers/events/301420110/"&gt;&lt;strong&gt;Music City Rust Developers : placeholder&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="oceania"&gt;&lt;a class="toclink" href="#oceania"&gt;Oceania&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-22 | Auckland, NZ | &lt;a href="https://www.meetup.com/rust-akl/"&gt;Rust AKL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/302431924/"&gt;&lt;strong&gt;Rust AKL: Dot IX: Diagram Generator + Deep Learning from Scratch in Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2024-08-27 | Canberra, ACT, AU | &lt;a href="https://www.meetup.com/rust-canberra/"&gt;Canberra Rust User Group (CRUG)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-canberra/events/301887261/"&gt;&lt;strong&gt;June Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h2 id="jobs"&gt;&lt;a class="toclink" href="#jobs"&gt;Jobs&lt;/a&gt;&lt;/h2&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/1ecdzp2/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;&lt;a class="toclink" href="#quote-of-the-week"&gt;Quote of the Week&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Want to have a crate with a million features? Host your own registry and revel in the combinatorial explosion of choices!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://users.rust-lang.org/t/margo-a-simple-cargo-registry-using-static-files/115412"&gt;Jake Goulding on rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1599"&gt;Jonas Fassbender&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/1enceo0/this_week_in_rust_559_this_week_in_rust/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</content><category term="This Week in Rust"></category></entry></feed>