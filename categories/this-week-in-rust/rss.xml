<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>This Week in Rust</title><link>https://this-week-in-rust.org/</link><description></description><atom:link href="https://this-week-in-rust.org/categories/this-week-in-rust/rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 12 May 2021 00:00:00 -0400</lastBuildDate><item><title>This Week in Rust 390</title><link>https://this-week-in-rust.org/blog/2021/05/12/this-week-in-rust-390/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2021/05/11/edition-2021.html"&gt;The Plan for the Rust 2021 Edition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2021/05/10/Rust-1.52.1.html"&gt;Announcing Rust 1.52.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2021/05/06/Rust-1.52.0.html"&gt;Announcing Rust 1.52.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gamedev.rs/news/021/"&gt;This Month in Rust GameDev #21 - April 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/n5xhku/rib_newsletter_23_rewriting_in_rust/"&gt;RiB Newsletter #23 - Rewriting in Rust?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/05/10/changelog-76.html"&gt;rust-analyzer Changelog #76&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/knurling-changelog-24/"&gt;Knurling-rs changelog #24: three releases, &lt;code&gt;defmt-test&lt;/code&gt; supports more items and a nasty issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tensorbase.io/thisweek/2021-05-10-tw_2/"&gt;This Week In TensorBase 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gfx-rs.github.io/2021/05/09/dota2-msl-compilation.html"&gt;Naga shader translation benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/n9f6vt/announcing_egui_012_the_simple_gui_library/"&gt;Announcing egui 0.12 - the simple GUI library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thephilbert.io/2021/05/10/gcc-rust-weekly-status-report-14/"&gt;GCC Rust Weekly Status Report 14&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://security.googleblog.com/2021/05/integrating-rust-into-android-open.html"&gt;Integrating Rust Into the Android Open Source Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/developer/a-new-aws-sdk-for-rust-alpha-launch/"&gt;A New AWS SDK for Rust - Alpha Launch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gleam.run/news/gleam-v0.15-released/"&gt;Gleam v0.15 released!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://isomorphicdb.io/blog/2021/05/11/IsomorphicDB-The-Road-ahead/"&gt;IsomorphicDB. The Road ahead&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sfietkonstantin.github.io/2021/05/10/First-Crate-Pretend.html"&gt;My first Rust crate, pretend&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.abor.dev/p/moonzoon"&gt;Rust on the Frontend and Backend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/why-rust-for-embedded-development/"&gt;Why we should consider Rust for Embedded Developement?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shane-o.dev/blog/aiming-for-idiomatic-rust"&gt;Aiming for idiomatic Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/tenable-techblog/optimizing-700-cpus-away-with-rust-dc7a000dbdb2"&gt;Optimizing 7000 CPUs Away with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/blog/2021/05/bors-confident-merges/"&gt;Improving our development confidence and productivity with Bors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@danilheres/increasing-the-level-of-parallelism-in-datafusion-4-0-d2a15b5a2093"&gt;Increasing the level of parallelism in DataFusion 4.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://deepu.tech/my-second-impression-of-rust/"&gt;My second impression of Rust and why I think it's the best general-purpose language!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.waleedkhan.name/port-python-to-rust/"&gt;Incrementally porting a small Python project to Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/6dcf3tOPOwo"&gt;Rust Verification Workshop 2021 - Ferrite: A Rust EDSL for Message-passing Protocol Verification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/iAs0gZ8o0oQ"&gt;Rust Verification Workshop 2021 - RustBelt: A Quick Dive into the Abyss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/H54VDCuT0J0"&gt;Rust Verification Workshop 2021 - Polonius&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/_DM36e2A9dg"&gt;Rust Verification Workshop 2021 - Rust Interest in safety- and mission-critical environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/0DcIn7kiNxM"&gt;Rust Verification Workshop 2021 - Leveraging Compiler Intermediate Representation for Multi- and Cross-Language Verification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/babe-consensus-algorithm-and-how-to-implement-it-in-our-runtime/"&gt;BABE – Consensus Algorithm and How to Implement it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/pallets-in-substrate-and-using-them-in-runtime/"&gt;Pallets in Substrate and using them in runtime.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/steadylearner/how-to-deploy-rust-web-app-with-digitalocean-h2o"&gt;How to deploy Rust web app with DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/hamatti/learning-rust-4-parsing-json-with-strong-types-575m"&gt;Learning Rust #4: Parsing JSON with strong types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/steadylearner/how-to-use-rust-warp-web-framework-2b4e"&gt;How to use Rust web framework Warp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://misterdanb.github.io/raytracinginrust/"&gt;Ray Tracing in One Weekend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.turbo.fish/proc-macro-error-handling/"&gt;Procedural Macros: Error handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mnwa.medium.com/speeding-up-algorithms-with-arena-allocators-d72d06f23607"&gt;Speeding up algorithms with arena allocators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://agmprojects.com/blog/building-a-rest-and-web-socket-api-with-actix.html"&gt;Building a REST and Web Socket API with Actix and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kobzol.github.io/rust/ci/2021/05/07/building-rust-binaries-in-ci-that-work-with-older-glibc.html"&gt;Building Rust binaries in CI that work with older GLIBC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ZH] [series] &lt;a href="https://blog.budshome.com/budshome/gou-jian-rust-yi-bu-graphql-fu-wu-:ji-yu-tide-+-async-graphql-+-mongodb(4)--bian-geng-fu-wu-,yi-ji-di-er-ci-zhong-gou"&gt;Build GraphQL services based on Async Rust using tide + async-graphql + mongodb (基于 Async Rust 构建 GraphQL 服务，使用 tide + async-graphql + mongodb) - Part 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ZH] [series] &lt;a href="https://blog.budshome.com/budshome/ji-yu-actix-web-+-async-graphql-+-rbatis-+-postgresql---mysql-gou-jian-yi-bu-rust-graphql-fu-wu-(3)---zhong-gou"&gt;Build GraphQL services based on Async Rust using actix-web + async-graphql + rbatis + postgresql / mysql (基于 actix-web + async-graphql + rbatis + postgresql / mysql 构建异步 Rust GraphQL 服务) - Part 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/3DLrUNbKhjQ"&gt;Graphs in Rust: What is a Graph? Representing them in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/SKmd5A-1cSE"&gt;Rust Verification Workshop 2021 - Peeking at compiler-internal data (for fun and profit)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/vMGilPbIotw"&gt;Rust Verification Workshop 2021 - Verifying that Rust programs don't crash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/0mocaSR9f_M"&gt;Rust Verification Workshop 2021 - crux-mir: Symbolic testing for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/bikmlNlwAYo"&gt;Rust Verification Workshop 2021 - Rustv: Semi-automatic Verification of Unsafe Rust Programs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/yJQZ7sG8xSM"&gt;Rust Verification Workshop 2021 - Towards Automatic Verification of Unsafe Rust with Constrained Horn Solvers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/C9TTioH5JUg"&gt;Rust Verification Workshop 2021 - Prusti - Deductive Verification for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/b8sBtmzq0FM"&gt;Rust Verification Workshop 2021 - Creusot: A prototype tool for verification of Rust software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/k7_BcWwvz7k"&gt;Rust Verification Workshop 2021 - hacspec: succinct, executable, verifiable specifications for high-assurance cryptography&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/opensource/innovating-with-rust/"&gt;Innovating with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/n7rjfk/what_can_c_do_that_rust_cant_2021_edition/"&gt;What can C++ do that Rust can't? (2021 edition)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/Ys7ma3au5m0"&gt;The Rust Borrow Checker—A Deep Dive @ Rust DC, April 20, 2021 w/ Nell Shamrell-Harrington&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/tokio-rs/console"&gt;tokio-console&lt;/a&gt;, a "top"-like utility to view your tasks run.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/910"&gt;Simon Farnsworth&lt;/a&gt; for the nomination&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/drmason13/advent_of_code_traits/issues/3"&gt;advent_of_code_traits - Improve the efficiency of the default &lt;code&gt;run&lt;/code&gt; method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OSSystems/compress-tools-rs/issues/57"&gt;compress-tools-rs - Cannot statically compile on Windows due to linking failure, exit code 1120&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;324 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-05-03..2021-05-10"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85053"&gt;fix duplicate unknown lint errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76808"&gt;improve diagnostics for functions in &lt;code&gt;struct&lt;/code&gt; definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85112"&gt;ensure failing promoteds in const/static bodies are handled correctly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83507"&gt;implement Native link modifiers&lt;/a&gt; (RFC &lt;a href="https://rust-lang.github.io/rfcs/2951-native-link-modifiers.html"&gt;#2951&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84794"&gt;deduplicate native libs before they are passed to the linker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84915"&gt;retain data in vectorized registers for longer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84923"&gt;only compute Obligation &lt;code&gt;cache_key&lt;/code&gt; once in register_obligation_at&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84833"&gt;"const" initialized thread locals in rustc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84806"&gt;streamline &lt;code&gt;try_start&lt;/code&gt; code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84712"&gt;simplify &lt;code&gt;chdir&lt;/code&gt; implementation and minimize unsafe block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/79930"&gt;optimize &lt;code&gt;BufWriter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85146"&gt;provide &lt;code&gt;io::Seek::rewind&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84328"&gt;stablize {&lt;code&gt;HashMap&lt;/code&gt;, &lt;code&gt;BTreeMap&lt;/code&gt;}&lt;code&gt;::into_&lt;/code&gt;{&lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2423"&gt;futures: add FuturesUnordered::into_iter, make iter_pin_ref public&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/regex/pull/772"&gt;regex: fix compilation with pattern feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/datafrog/pull/29"&gt;datafrog: speed up Relation::merge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9472"&gt;cargo: improve two error messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85148"&gt;rustdoc: fix source code line number display and make it clickable again&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84734"&gt;compiletest: add &lt;code&gt;needs-unwind&lt;/code&gt; and beginning of support for testing &lt;code&gt;panic=abort&lt;/code&gt; std&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7170"&gt;clippy: fix stack overflow issue in &lt;code&gt;redundant_pattern_matching&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7174"&gt;clippy: fix &lt;code&gt;eval_order_dependence&lt;/code&gt; async false positive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7167"&gt;clippy: fix &lt;code&gt;unused_unit&lt;/code&gt; macro false positive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7165"&gt;clippy: fix &lt;code&gt;needless_quesiton_mark&lt;/code&gt; false positive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7182"&gt;clippy: for &lt;code&gt;to_*&lt;/code&gt; variant don't lint in trait impl taking &lt;code&gt;self&lt;/code&gt; when non-&lt;code&gt;Copy&lt;/code&gt; type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7175"&gt;clippy: fix &lt;code&gt;unnecessary_filter_map&lt;/code&gt; false positive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7163"&gt;clippy needless_collect: Lint cases with type annotations for indirect usage and recognize &lt;code&gt;BinaryHeap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;p&gt;Not much change overall - both regressions and improvements were all minor, apart from the 2x compile-time improvement for libcore from PR &lt;a href="https://github.com/rust-lang/rust/issues/83278"&gt;#83278&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@pnkfelix&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=7a0f1781d04662041db5deaef89598a8edd53717&amp;amp;end=382f748f23979e37e3e012b090e5a0313463f182&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;7a0f..382f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 Regressions, 3 Improvements, 0 Mixed
0 of them in rollups&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-05-11.md"&gt;Full report here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3101"&gt;RFC: Reserved prefixes in the 2021 edition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3114"&gt;A new prelude for the 2021 edition (trait-only edition)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: postpone] &lt;a href="https://github.com/rust-lang/rfcs/pull/2722"&gt;Allow Overloading || and &amp;amp;&amp;amp;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/85078"&gt;stabilize const_fn_unsize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/84916"&gt;FCP poll for ErrorKind::OutOfMemory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84717"&gt;impl FromStr for proc_macro::Literal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84701"&gt;stabilize member constraints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84039"&gt;Uplift the invalid_atomic_ordering lint from clippy to rustc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/83918"&gt;Stabilize "RangeFrom" patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/83366"&gt;Stabilize extended_key_value_attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/82179"&gt;Add functions &lt;code&gt;Duration::try_from_secs_{f32, f64}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3123"&gt;Scrape code examples from examples/ directory for Rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSf_hz-ZDwYEhVmIH0uzJ0uH41aXWZ_zRDsI0XENpfkKHvh_Jg/viewform"&gt;May 12, Online - Rust Meetup May 2021 - Rust Malaysia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://berline.rs/2021/05/13/rust-hack-and-learn.html"&gt;May 13, Berlin, DE - Rust Hack and Learn - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/solana/status/1387411221717176323?s=20"&gt;May 15 - June 7, Online - Solana Season Hackathon - Registration open now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://secure.meetup.com/register/?referrer_n=event&amp;amp;referrer_i=278002832&amp;amp;ctx=ref"&gt;May 17, 2021, Cardiff, UK - Rust and Cpp Cardiff :: v2.0 - Rust and C++ Cardiff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/ntvrgsycchbxb"&gt;May 18, 2021, Washington, DC, US - Mid-month Rustful: rust4ml - Rust DC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/zppkjsycchbzb/"&gt;May 19, 2021, Vancouver, BC - Rust Study/Hack/Hang-out night - Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustlab.it/en/rust-vs-go/"&gt;May 20, 2021, Online - Go vs Rust | Round table discussion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/jqxqwrycchbhc/"&gt;May 20, 2021, Dallas, TX, US - Last Tuesday - Dallas Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Paige&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://boards.greenhouse.io/paige/jobs/5210311002"&gt;Senior Software Engineer, Visualization (Remote, Europe)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Impero&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/jobs/view/2493233249/"&gt;Full Stack Developer (Denmark + Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Zimpler&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://careers.zimpler.com/jobs/1170476-rust-developer-to-zimpler"&gt;Rust Developer (Gothenburg, SE)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Yat Labs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.arbeitnow.com/view/senior-rust-developer-tari-71761"&gt;Senior Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/junior-backend-engineer/en"&gt;Junior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/senior-backend-engineer/en"&gt;Senior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/devops-engineer/en"&gt;DevOps Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TrueLayer&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apply.workable.com/truelayer/j/D07759DAF6/"&gt;Rust Backend Engineer (London, UK)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apply.workable.com/truelayer/j/F13E839E3B/"&gt;Rust Backend Engineer (Milan, Italy)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apply.workable.com/truelayer/j/3B78A6F6F4/"&gt;Rust Engineering Lead (London, UK)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apply.workable.com/truelayer/j/8D8D56C09E/"&gt;Rust Engineering Lead (Milan, Italy)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Aleph Alpha&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aleph-alpha.de/career"&gt;Several Rust Engineering Positions (Heidelberg, DE)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken?team=Engineering"&gt;Several Rust Engineering Positions (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ChainSafe&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chainsafe.io/careers"&gt;Several Rust Engineering Positions (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;You won’t appreciate Rust unless you spend few weeks building something in it. The initial steep learning curve could be frustrating or challenging depending on how you see it, but once past that it’s hard not to love it. It’s a toddler with superpowers after all 💗&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://deepu.tech/my-second-impression-of-rust"&gt;Deepu K Sasidharan on their blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1049"&gt;robin&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/nb4s14/this_week_in_rust_390/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 12 May 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-05-12:blog/2021/05/12/this-week-in-rust-390/</guid></item><item><title>This Week in Rust 389</title><link>https://this-week-in-rust.org/blog/2021/05/05/this-week-in-rust-389/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2021/04/29/Rustup-1.24.1.html"&gt;Announcing Rustup 1.24.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/04/28/rustup-1.24.0-incident-report.html"&gt;Rustup 1.24.0 release incident report for 2021-04-27&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/05/04/1.52.0-prerelease.html"&gt;1.52.0 pre-release testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/05/04/core-team-update.html"&gt;Core Team Update: May 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Foundation] &lt;a href="https://foundation.rust-lang.org/posts/2021-04-29-membership-update/"&gt;Q12021 Membership Update&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-osdev.com/this-month/2021-04/"&gt;This Month in Rust OSDev (April 2021)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://isomorphicdb.io/blog/2021/05/05/One-Third-of-2021/"&gt;One Third Of 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tensorbase.io/thisweek/2021-05-01-tw_1/"&gt;This Week In TensorBase 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gfx-rs.github.io/2021/04/30/release-0.8.html"&gt;gfx/wgpu releases 0.8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flott-motion.org/news/last-month-in-flott-may-2021/"&gt;Last Month in Flott (Motion Control Toolkit in Rust) - May 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/05/03/changelog-75.html"&gt;rust-analyzer Changelog #75&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thephilbert.io/2021/05/03/gcc-rust-monthly-report-5-april-2021/"&gt;GCC Rust Monthly Report #5 April 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/rustcrypto-release-announcements/59149"&gt;RustCrypto Release Announcements (&lt;code&gt;aead&lt;/code&gt;, &lt;code&gt;cipher&lt;/code&gt;, &lt;code&gt;crypto&lt;/code&gt;, &lt;code&gt;elliptic-curve&lt;/code&gt;, &lt;code&gt;ecdsa&lt;/code&gt;, and more)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2021/04/30/how-rust-makes-rayons-data-parallelism-magical/"&gt;How Rust makes Rayon's data parallelism magical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mbuffett.com/posts/incomplete-macro-walkthrough/"&gt;An Incomplete Explanation of the Proc Macro That Saved Me 4000 Lines of Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/thepuzzlemaker/the-most-underrated-but-useful-rust-standard-library-type-59b1"&gt;The most underrated but useful Rust standard library type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ecton/guaranteed-unique-or-why-dogfooding-can-be-taxing-2gcn"&gt;Guaranteed unique; Or, why dogfooding can be taxing.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://deprogrammaticaipsum.com/the-great-rewriting-in-rust/"&gt;The Great Rewriting in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://procmarco.netlify.app/blog/2021-05-04-a-story-about-async-rust-and-using-send-types/"&gt;A story about async Rust and using !Send types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/compilers-as-teachers/"&gt;Compilers as Teachers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.abor.dev/p/making-generative-art-with-rust"&gt;Making Generative Art with Rust: interview with Alexis André&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.crowdstrike.com/blog/how-crowdstrike-combines-tensorflow-and-rust-for-performance/"&gt;Building on the Shoulders of Giants: Combining TensorFlow and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://0x709394.me/Let's-make%20everything%20iterable"&gt;Let's make everything iterable - Iterate over pagination result in the Rest API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/alD0l_8W9Sc"&gt;Interview with Niko Matsakis, Co-lead of the Rust language team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/rkudryashov/introduction-to-grpc-in-rust-4dgg"&gt;Introduction to gRPC in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pcvonz/i-c-on-the-pinephone-5090"&gt;I2C on the Pinephone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pxjohnny/late-night-confessions-building-a-website-using-rust-rocket-diesel-and-askama-part-3-46i9"&gt;Late Night Confessions - Building a Website Using Rust, Rocket, Diesel, and Askama - Part 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/daaitch/rust-ownership-and-borrows-fighting-the-borrow-checker-4ea3"&gt;Rust ownership and borrows - Fighting the borrow-checker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.svgames.pl/article/running-rust-on-android"&gt;Running Rust on Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/gdb-and-defmt/"&gt;Using GDB and defmt to debug embedded programs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://phazer99.blogspot.com/2021/05/data-modelling-in-rust.html"&gt;Data Modelling in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://phazer99.blogspot.com/2021/05/data-modelling-in-rust-continued.html"&gt;Data Modelling in Rust Continued&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/blog/2021/05/java-client/"&gt;Embedding Rust code in Java Jar for distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Make a &lt;a href="https://kas-gui.github.io/tutorials/counter.html"&gt;Counter&lt;/a&gt; and &lt;a href="https://kas-gui.github.io/tutorials/calculator.html"&gt;Calculator&lt;/a&gt; with KAS GUI&lt;/li&gt;
&lt;li&gt;[ZH] [series] &lt;a href="https://blog.budshome.com/budshome/gou-jian-rust-yi-bu-graphql-fu-wu-:ji-yu-tide-+-async-graphql-+-mongodb(3)--zhong-gou"&gt;Build GraphQL services based on Async Rust using tide + async-graphql + mongodb (基于 Async Rust 构建 GraphQL 服务，使用 tide + async-graphql + mongodb) - Part 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ZH] [series] &lt;a href="https://blog.budshome.com/budshome/ji-yu-actix-web-+-async-graphql-+-rbatis-+-postgresql---mysql-gou-jian-yi-bu-rust-graphql-fu-wu-(2)---cha-xun-fu-wu"&gt;Build GraphQL services based on Async Rust using actix-web + async-graphql + rbatis + postgresql / mysql (基于 actix-web + async-graphql + rbatis + postgresql / mysql 构建异步 Rust GraphQL 服务) - Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/xcygqF5LVmM"&gt;Crust of Rust: Dispatch and Fat Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=ndujK8lTTVY"&gt;Ockam | OSS Community Call | April 2021&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="papersresearch-projects"&gt;Papers/Research Projects&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.proofpoint.com/us/blog/threat-insight/new-variant-buer-loader-written-rust"&gt;New Variant of Buer Loader Written in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/n420cg/is_it_possible_to_write_overheadfree_cyclic/"&gt;Is it possible to write overhead-free cyclic data-structures in safe, stable Rust?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://brson.github.io/2021/05/02/rusts-most-unrecognized-contributor"&gt;Rust's Most Unrecognized Contributor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.facebook.com/blog/post/2021/04/29/facebook-joins-rust-foundation/"&gt;Facebook Joins the Rust Foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.fb.com/2021/04/29/developer-tools/rust/"&gt;A brief history of Rust at Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/n2lh7z/rustc_performance_improvement_from_rust_146_to_151/"&gt;rustc performance improvement from rust 1.46 to 1.51&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.theregister.com/2021/04/28/microsoft_bytecode_alliance/"&gt;Microsoft joins Bytecode Alliance to advance WebAssembly - aka the thing that lets you run compiled C/C++/Rust code in browsers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/gdb-and-defmt/"&gt;Using GDB and &lt;code&gt;defmt&lt;/code&gt; to debug embedded programs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://docs.rs/display_utils"&gt;display_utils&lt;/a&gt;, a library with &lt;code&gt;Display&lt;/code&gt;able structs to make string manipulation easier.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/908"&gt;kangalioo&lt;/a&gt; for the nomination&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Morganamilo/paru/issues/357"&gt;paru - Add -P --stats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;322 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-04-26..2021-05-03"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84562"&gt;adds feature-gated &lt;code&gt;#[no_coverage]&lt;/code&gt; function attribute, to fix derived Eq &lt;code&gt;0&lt;/code&gt; coverage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84450"&gt;give a better error when &lt;code&gt;std&lt;/code&gt; or &lt;code&gt;core&lt;/code&gt; are missing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84818"&gt;suggestion for unit enum variant when matched with a pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84805"&gt;avoid generating &lt;code&gt;QueryMap::extend&lt;/code&gt; for each key type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84802"&gt;remove dead code in &lt;code&gt;rustc_session::Options&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84719"&gt;move &lt;code&gt;iter_results&lt;/code&gt; to &lt;code&gt;dyn FnMut&lt;/code&gt; rather than a generic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1785"&gt;miri: throw UB if f*_fast intrinsic called with non-finite value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1784"&gt;miri: use &lt;code&gt;harness = false&lt;/code&gt; instead of &lt;code&gt;#![feature(custom_test_frameworks)]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/llvm-project/pull/105"&gt;LLVM: don't merge thread_local constants with non-thread_local constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84658"&gt;be stricter about rejecting LLVM reserved registers in asm!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84642"&gt;stabilize &lt;code&gt;vec_extend_from_within&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84523"&gt;stabilize &lt;code&gt;ordering_helpers&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84615"&gt;override &lt;code&gt;clone_from&lt;/code&gt; method for &lt;code&gt;PathBuf&lt;/code&gt; and &lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84650"&gt;simplify &lt;code&gt;Mutex::into_inner&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82576"&gt;&lt;code&gt;i8&lt;/code&gt; and &lt;code&gt;u8::to_string()&lt;/code&gt; specialisation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84522"&gt;reuse &lt;code&gt;sys::unix::cmath&lt;/code&gt; on other platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84744"&gt;add &lt;code&gt;ErrorKind::OutOfMemory&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84716"&gt;add &lt;code&gt;std::os::unix::fs::chroot&lt;/code&gt; to change the root directory of the current process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84541"&gt;inline most raw socket, fd and handle conversions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/socket2/pull/222"&gt;socket2: allow for niche optimization on Unix platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/regex/pull/768"&gt;regex: fix lazy DFA false quits on ASCII text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/regex/pull/767"&gt;regex: update to latest memchr + upgrade to Rust 2018 + bump MSRV to Rust 1.41&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9438"&gt;cargo: add report subcommand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9395"&gt;cargo: show transfer rate when fetching/updating registry index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84463"&gt;rustdoc: remove unnecessary &lt;code&gt;provided_trait_methods&lt;/code&gt; field from Impl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84763"&gt;rustdoc: shrink &lt;code&gt;doctree::Module&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/datafrog/pull/30"&gt;datafrog: micro-optimize &lt;code&gt;binary_search&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7118"&gt;clippy: fix a false-positive inside const fn in &lt;code&gt;comparison_chain&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/6951"&gt;clippy: &lt;code&gt;implicit_return&lt;/code&gt; improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7144"&gt;clippy: &lt;code&gt;while_immutable_cond&lt;/code&gt;: check condition for mutation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7138"&gt;clippy: fix false negative in &lt;code&gt;iter_cloned_collect&lt;/code&gt; with a large array&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;p&gt;Quiet week, no significant changes.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@simulacrum&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=537544b1061467ee4b74ef7f552fab3d513e5caf&amp;amp;end=7a0f1781d04662041db5deaef89598a8edd53717&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;537544..7a0f178&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-05-04.md"&gt;Full report here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2803"&gt;Target tier policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3016"&gt;add const-ub RFC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3114"&gt;A new prelude for the 2021 edition (trait-only edition)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/84916"&gt;FCP poll for ErrorKind::OutOfMemory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84717"&gt;impl FromStr for proc_macro::Literal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84587"&gt;rustdoc: Make "rust code block is empty" and "could not parse code block" warnings a lint (&lt;code&gt;INVALID_RUST_CODEBLOCKS&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84039"&gt;Uplift the invalid_atomic_ordering lint from clippy to rustc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/83918"&gt;Stabilize "RangeFrom" patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/83366"&gt;Stabilize extended_key_value_attributes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3120"&gt;RFC: Preview for Unstable Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3119"&gt;Rust-lang crate ownership policy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-NYC/events/277822386"&gt;May 6, New York, NY, US - Rust Lightning Talks - Rust NYC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gskksrycchbpb/"&gt;May 11, Seattle, WA, US - Monthly meetup - Seattle Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/Rust-Saar/events/277607432/"&gt;May 11, Saarbücken, Saarland, DE - Meetup: 11u16 (virtual) - Rust Saar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSf_hz-ZDwYEhVmIH0uzJ0uH41aXWZ_zRDsI0XENpfkKHvh_Jg/viewform"&gt;May 12, Online - Rust Meetup May 2021 - Rust Malaysia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/solana/status/1387411221717176323?s=20"&gt;May 15 - June 7, Online - Solana Season Hackathon - Registration open now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://secure.meetup.com/register/?referrer_n=event&amp;amp;referrer_i=278002832&amp;amp;ctx=ref"&gt;May 17, 2021, Cardiff, UK - Rust and Cpp Cardiff :: v2.0 - Rust and C++ Cardiff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustlab.it/en/rust-vs-go/"&gt;May 20, 2021, Online - Go vs Rust | Round table discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Fiberplane&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fiberplane.dev/careers/rust-engineer/"&gt;Rust Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Paige&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://boards.greenhouse.io/paige/jobs/5210311002"&gt;Senior Software Engineer, Visualization (Remote, Europe)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Netlify&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://boards.greenhouse.io/netlify/jobs/5054144002"&gt;Senior Backend Engineer (Go/Rust) (Remote or San Francisco, CA, US)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;e.ventures&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://old.reddit.com/r/rust/comments/mfstaz/official_rrust_whos_hiring_thread_for_jobseekers/gspq9v1/"&gt;Rust backend engineer (Remote, the Americas)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ConsenSys&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arbeitnow.com/view/rust-software-engineer-protocol-engineering-consensys-459183"&gt;Rust Software Engineer (Protocol Engineering)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spacemesh&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://spacemesh.io/rust-developer/"&gt;Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DEX Labs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dex-labs.breezy.hr/p/49c5370a8473"&gt;Senior Software Engineer – Full-Stack (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/junior-backend-engineer/en"&gt;Junior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/senior-backend-engineer/en"&gt;Senior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/devops-engineer/en"&gt;DevOps Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Ockam&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ockam.io/team#open-roles"&gt;Multiple Rust Engineering Positions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken?team=Engineering"&gt;Several Rust Engineering Positions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Using R or Numpy is like driving around in a sports car. You just turn the wheel, press the pedals, and burn rubber. Rust (and other systems languages) are like getting a spaceship. You can go places and do things that you never dreamt of in a car. They are harder to pilot, but the possibilities seem unlimited! With the Rust ecosystem still in development, it feels like parts of your spaceship come in boxes of parts labeled "some assembly required".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://users.rust-lang.org/t/rust-for-data-first-problems/58887/16"&gt;Erik Rose on rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1047"&gt;Phlopsi&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/n5xua0/this_week_in_rust_389/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 05 May 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-05-05:blog/2021/05/05/this-week-in-rust-389/</guid></item><item><title>This Week in Rust 388</title><link>https://this-week-in-rust.org/blog/2021/04/28/this-week-in-rust-388/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;p&gt;No newsletters this week.&lt;/p&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2021/04/27/Rustup-1.24.0.html"&gt;Announcing Rustup 1.24.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/04/26/aaron-hill-compiler-team.html"&gt;Congrats to compiler team member Aaron Hill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Foundation] &lt;a href="https://foundation.rust-lang.org/posts/2021-04-22-introducing-josh-stone/"&gt;Introducing Josh Stone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Foundation] &lt;a href="https://foundation.rust-lang.org/posts/2021-04-22-introducing-lars-bergstrom/"&gt;Introducing Lars Bergstrom&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/04/26/changelog-74.html"&gt;rust-analyzer Changelog #74&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2021/04/26/changelog-146.html"&gt;IntelliJ Rust Changelog #146&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lemmy.ml/post/61856"&gt;Lemmy Release v0.11.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/mz44xi/simdutf_v011_a_small_step_for_semver_one_giant/"&gt;simdutf v0.1.1 - A small step for semver, one giant leap for performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/mx3enm/the_playable_demo_of_outer_wonders_our_cute/"&gt;The playable demo of Outer Wonders, our cute, colorful and Rust-powered puzzle game, is live on itch.io for Windows and Linux! Thank you Rust community for creating such awesome tools!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.abor.dev/p/evcxr"&gt;Rust Notebooks with Evcxr: Interview with David Lattimore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mike-barber/rust-zero-cost-abstractions/blob/main/README.md"&gt;Costs of iterators and Zero Cost Abstractions in Rust&lt;/a&gt; (with video)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mcyoung.xyz/2021/04/26/move-ctors/"&gt;Move Constructors in Rust: Is it possible?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://glowcoil.com/posts/basedrop/"&gt;basedrop: a garbage collector for real-time audio in rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.pnkfx.org/blog/2021/04/26/road-to-turbowish-part-1-goals/"&gt;Road to TurboWish; Part 1: Goals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.pnkfx.org/blog/2021/04/27/road-to-turbowish-part-2-stories/"&gt;Road to TurboWish; Part 2: Stories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fpcomplete.com/blog/pains-path-parsing/"&gt;The Pains of Path Parsing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/my3ipa/if_you_could_redesign_rust_from_scratch_today/"&gt;If you could re-design Rust from scratch today, what would you change?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blainehansen.me/post/red-blue-functions-are-actually-good/"&gt;Red &amp;amp; blue functions are actually a good thing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/blob/develop/implementations/rust/ockam/signature_bbs_plus/GUIDE.md"&gt;Creating privacy-preserving signatures in Rust with BBS+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/perimeterx/late-night-confessions-building-a-website-using-rust-rocket-diesel-and-askama-part-2-fc87c463e8f3"&gt;Late Night Confessions — Building a Website Using Rust, Rocket, Diesel, and Askama - Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/blog/2021/04/rust-custom-test-harness/"&gt;How to Build a Custom Test Harness in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://romankudryashov.com/blog/2021/04/grpc-rust/"&gt;Introduction to gRPC in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.urth.org/2021/04/24/writing-a-postgres-sql-pretty-printer-in-rust-part-2/"&gt;Writing a Postgres SQL Pretty Printer in Rust: Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[series] &lt;a href="https://dev.to/basman/series/12170"&gt;A journey into Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ZH] [series] &lt;a href="https://blog.budshome.com/budshome/gou-jian-rust-yi-bu-graphql-fu-wu-:ji-yu-tide-+-async-graphql-+-mongodb(2)--cha-xun-fu-wu"&gt;Build GraphQL services based on Async Rust using tide + async-graphql + mongodb (基于 Async Rust 构建 GraphQL 服务，使用 tide + async-graphql + mongodb) - Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ZH] [series] &lt;a href="https://blog.budshome.com/budshome/ji-yu-actix-web-+-async-graphql-+-rbatis-+-postgresql---mysql-gou-jian-yi-bu-rust-graphql-fu-wu---qi-bu-ji-crate-xuan-ze"&gt;Build GraphQL services based on Async Rust using actix-web + async-graphql + rbatis + postgresql / mysql (基于 actix-web + async-graphql + rbatis + postgresql / mysql 构建异步 Rust GraphQL 服务) - Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/kdv1EBk6Xgc"&gt;What is Rust and why is it important?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/ECwy6s_h7T8"&gt;Using Iterator::collect in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/HN6EUcnGN1s"&gt;RustConf 2020 - Macros for a More Productive Rust by jam1garner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="papersresearch-projects"&gt;Papers/Research Projects&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dl.acm.org/doi/10.1145/3310232.3310241"&gt;A DSL embedded in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://greenlab.di.uminho.pt/wp-content/uploads/2017/09/paperSLE.pdf"&gt;Energy Efficiency across Programming Languages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tag1consulting.com/blog/interview-linus-torvalds-linux-and-git"&gt;An Interview With Linus Torvalds: Linux and Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zdnet.com/google-amp/article/programming-languages-javascript-has-most-developers-but-rust-is-the-fastest-growing/"&gt;Programming languages: JavaScript has most developers but Rust is the fastest growing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/mzlg5s/parts_of_tensorboard_are_being_rewritten_in_rust/"&gt;Parts of Tensorboard are being rewritten in Rust for a 100x to 400x speedup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/my6k5i/are_we_finally_about_to_gain_guaranteed_tail/"&gt;Are we finally about to gain guaranteed Tail Calls in Rust?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/blog/2021/04/github-actions-best-practices/"&gt;GitHub Actions best practices for Rust projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/danielzfranklin/cargo-rr"&gt;cargo-rr&lt;/a&gt;, a cargo subcommand to use the time-traveling rr debugger on our code.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/905"&gt;Willi Kappler&lt;/a&gt; for the nomination&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Stranger6667/jsonschema-rs/issues/158"&gt;jsonschema-rs: User-defined validation for the format keyword&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;350 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-04-19..2021-04-26"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84339"&gt;use LLVM's new saturating float-to-int intrinsics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84126"&gt;enable sanitizers for &lt;code&gt;x86_64-unknown-linux-musl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84295"&gt;add coverage to &lt;code&gt;continue&lt;/code&gt; statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84310"&gt;further split up &lt;code&gt;const_fn&lt;/code&gt; feature flag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84299"&gt;various const parameter defaults improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84499"&gt;tweak trait not `use d suggestion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83722"&gt;on stable, suggest removing &lt;code&gt;#![feature]&lt;/code&gt; for features that have been stabilized&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84520"&gt;improve diagnostics for function passed when a type was expected&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84516"&gt;add suggestion to "use break" when attempting to implicit-break a loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84353"&gt;suggest &lt;code&gt;.as_ref()&lt;/code&gt; on borrow error involving &lt;code&gt;Option&lt;/code&gt;/&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83519"&gt;implement a lint that highlights all moves larger than a configured limit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84123"&gt;introduce &lt;code&gt;CompileMonoItem&lt;/code&gt; &lt;code&gt;DepNode&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84147"&gt;cautiously add &lt;code&gt;IntoIterator&lt;/code&gt; for arrays by value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84120"&gt;stabilize &lt;code&gt;Duration::MAX&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84105"&gt;stabilize &lt;code&gt;core::array::&lt;/code&gt;{&lt;code&gt;from_ref&lt;/code&gt;, &lt;code&gt;from_mut&lt;/code&gt;} in 1.53.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83990"&gt;implement &lt;code&gt;TrustedRandomAccess&lt;/code&gt; for &lt;code&gt;Take&lt;/code&gt; iterator adapter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84390"&gt;format &lt;code&gt;Struct { .. }&lt;/code&gt; on one line even with &lt;code&gt;{:#?}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82585"&gt;added &lt;code&gt;CharIndices::offset&lt;/code&gt; function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/78681"&gt;improve rebuilding behaviour of &lt;code&gt;BinaryHeap::retain&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/257"&gt;hashbrown: add an &lt;code&gt;allocator()&lt;/code&gt; getter to &lt;code&gt;HashMap&lt;/code&gt; and &lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/libz-sys/pull/78"&gt;libz: disable forced zlib vendoring on musl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9404"&gt;cargo: some changes to rustdoc fingerprint checking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84457"&gt;rustdoc: remove most fields from &lt;code&gt;ExternalCrate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7137"&gt;clippy: refactor MSRV aliases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7134"&gt;clippy: finish MSRV for &lt;code&gt;cloned_instead_of_copied&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7136"&gt;clippy: &lt;code&gt;manual_unwrap_or&lt;/code&gt;: fix invalid code suggestion due to macro expansion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7129"&gt;clippy: &lt;code&gt;cloned_instead_of_copied&lt;/code&gt; MSRV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7101"&gt;clippy: add &lt;code&gt;flat_map_option&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7100"&gt;clippy: &lt;code&gt;unused_io_amount&lt;/code&gt; detects &lt;code&gt;.read().ok()?&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7083"&gt;clippy: add lint to check for boolean comparison in assert macro calls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;p&gt;It's always nice to have a week without any regressions and 2 small improvements 🎉🎉.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=6df26f897cffb2d86880544bb451c6b5f8509b2d&amp;amp;end=537544b1061467ee4b74ef7f552fab3d513e5caf&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;6df26f8..537544&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;0 Regressions, 2 Improvements, 0 Mixed&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3101"&gt;RFC: Reserved prefixes in the 2021 edition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: postpone] &lt;a href="https://github.com/rust-lang/rfcs/pull/2593"&gt;Enum variant types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/83800"&gt;Add default search path to &lt;code&gt;Target::search()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/83312"&gt;parser: Remove support for inner attributes on non-block expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/75294"&gt;Tracking Issue for {HashMap,BTreeMap}::into_{keys,values}&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3113"&gt;Add bitfields support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3114"&gt;A new prelude for the 2021 edition (trait-only edition)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/discussions/1303"&gt;April 28, Online - Ockam Open Source Community Call - Live coding walkthrough of building end-to-end encrypted communication in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://events.linuxfoundation.org/cloud-native-rust-day/"&gt;May 3, 2021, Online - Cloud Native Rust Day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://events.linuxfoundation.org/cloud-native-wasm-day/"&gt;May 4, 2021, Online - Cloud Native WASM Day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Dublin/events/277860218/"&gt;May 4, 2021, Dublin, IE - Rust Dublin May Remote Meetup - Rust Dublin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/277402612/"&gt;May 4, Buffalo, NY, US - Buffalo Rust User Group, Tues May 4th - Buffalo Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gskksrycchbpb/"&gt;May 11, Seattle, WA, US - Monthly meetup - Seattle Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Collabora&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arbeitnow.com/view/rust-developerpromoter-collabora-36866"&gt;Rust developer/promoter (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Paige&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://boards.greenhouse.io/paige/jobs/5210311002"&gt;Senior Software Engineer, Visualization (Remote, Europe)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Confio GmbH&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.gohire.io/confio-gmbh-ggtjivjy/rust-engineer-39453/"&gt;Rust Engineer at Confio GmbH (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;CoBloX&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://comit.network/blog/2021/03/01/we-are-hiring/"&gt;Software Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Gattaca&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gattaca.com/jobspec.html"&gt;Software Engineer - Rust &amp;amp; Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Wallaroo&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wallaroo.breezy.hr/p/47862ae31c91-senior-client-solutions-engineer-remote-even-after-covid"&gt;Senior Client Solutions Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Parity Technologies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://grnh.se/2dd887b13us"&gt;Blockchain Developer - Consensus (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/"&gt;Numerous other Rust engineering openings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/junior-backend-engineer/en"&gt;Junior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/senior-backend-engineer/en"&gt;Senior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/devops-engineer/en"&gt;DevOps Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Chainflip&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/chainflip/jobs/1162345-rust-c-backend-engineer"&gt;Rust / C++ Backend Engineer (Berlin, DE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/chainflip/jobs/1293957-security-engineer"&gt;Security Engineer (Berlin, DE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/chainflip/jobs/1305439-junior-mid-backend-rust-c-developer"&gt;Junior/Mid Backend Rust/C++ Developer (Melbourne, AU)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken?team=Engineering"&gt;Several Rust Engineering Positions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;this error message is UNREAL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://twitter.com/ash2x3/status/1384986537167892483"&gt;Ash 2X3 on Twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1046"&gt;Nixon Enraght-Moony&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/n0t8mm/this_week_in_rust_388/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 28 Apr 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-04-28:blog/2021/04/28/this-week-in-rust-388/</guid></item><item><title>This Week in Rust 387</title><link>https://this-week-in-rust.org/blog/2021/04/21/this-week-in-rust-387/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;p&gt;No papers/research projects this week.&lt;/p&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/04/15/compiler-team-april-steering-cycle.html"&gt;Rust Compiler April Steering Cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/04/17/lang-team-apr-update.html"&gt;Lang team April update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/04/20/jsha-rustdoc-member.html"&gt;Jacob Hoffman-Andrews joins the Rustdoc team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Foundation] &lt;a href="https://foundation.rust-lang.org/posts/2021-04-15-introducing-jane-lusby/"&gt;Introducing Jane Lusby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Foundation] &lt;a href="https://foundation.rust-lang.org/posts/2021-04-15-introducing-shane-miller/"&gt;Introducing Shane Miller&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/04/19/changelog-73.html"&gt;rust-analyzer Changelog #73&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/knurling-changelog-23/"&gt;Knurling-rs changelog #23&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ballistacompute.org/thisweek/2021/04/18/this-week-in-ballista-11/"&gt;This Week in Ballista #11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tokio.rs/blog/2021-04-welcome-alice"&gt;Welcoming Alice Ryhl as the first paid Tokio contributor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zellij.dev/news/beta/"&gt;Zellij: a Rusty terminal multiplexer releases a beta version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nrxus.github.io/faux/blog/landing-v-0-1.html"&gt;faux: a struct mocking library - landing v0.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://diziet.dreamwidth.org/8121.html"&gt;Otter - a game server for arbitrary board games&lt;/a&gt;.  It is mainly &lt;a href="https://www.chiark.greenend.org.uk/~ianmdlvl/otter/docs/build.html"&gt;written in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/033-rust-1.50-1.51/"&gt;What's New in Rust 1.50 and 1.51&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blainehansen.me/post/red-blue-functions-are-actually-good/"&gt;Red &amp;amp; blue functions are actually a good thing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.temporal.io/blog/why-rust-powers-core-sdk/"&gt;Why Rust powers Temporal's new Core SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.simonclark.dev/2020/08/10/optimizing-sudoku-solver.html"&gt;Optimizing a sudoku solver in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://daveshawley.medium.com/my-journey-to-understand-rust-lang-28e4cf808b12"&gt;My journey to understand rust-lang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://christine.website/blog/dev-printerfact-2021-04-17"&gt;How I Implemented /dev/printerfact in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gal.hagever.com/posts/why-fnm-was-rewritten-in-rust/"&gt;Why fnm was rewritten in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/dbanty/running-graphql-on-lambda-with-rust-1lak"&gt;Running GraphQL on Lambda with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://myrrlyn.net/blog/bitvec/alias-detection"&gt;Runtime Alias Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/whats-in-the-box"&gt;What's in the box?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/vLYit_HHPaY"&gt;An Overview of the Embedded Rust Ecosystem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/perimeterx/late-night-confessions-building-a-website-using-rust-rocket-diesel-and-askama-part-1-aeccade43252"&gt;Late Night Confessions — Building a Website Using Rust, Rocket, Diesel, and Askama - Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pretzelhammer/rust-blog/blob/master/posts/tour-of-rusts-standard-library-traits.md"&gt;Tour of Rust's Standard Library Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hamatti.org/posts/learning-rust-3-crates-io-publishing-your-package/"&gt;Learning Rust #3: crates.io &amp;amp; publishing your package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://heroiclabs.com/blog/tutorials/rust-fishgame/"&gt;Making an online multiplayer game in Rust with Nakama&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rvanderlaan/creating-a-sleek-masonry-gallery-with-react-and-webassembly-17p2"&gt;Creating a Sleek Masonry Gallery with React and WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ecorax.net/macro-bunker-2/"&gt;The GPIO war: macro bunkers for typestate explosions (2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://timmmm.github.io/std-embedded-rust/index.html"&gt;Using &lt;code&gt;std&lt;/code&gt; in embedded Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/rust-and-tui-building-a-command-line-interface-in-rust/"&gt;Rust and TUI: Building a command-line interface in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/NwYY00paiH0"&gt;Rust: Serde: Working with untyped JSON values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[series] &lt;a href="https://bugzmanov.github.io/nes_ebook/index.html"&gt;Writing NES Emulator in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fnordig.de/2021/04/16/rustc-ios-and-an-m1/"&gt;rustc, iOS and an M1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tectalk.co/microsoft-previews-rust-for-windows/"&gt;Microsoft Previews Rust For Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.abetterinternet.org/post/preparing-rustls-for-wider-adoption/"&gt;Preparing Rustls for Wider Adoption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://areweyeetyet.rs/"&gt;Are We Yeet Yet?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lupyuen.github.io/articles/rust"&gt;Run Rust RISC-V Firmware with BL602 IoT SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/vvZA9n3e5pc"&gt;Stanford Seminar - The Soul of a New Machine: Rethinking the Computer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/jjpe/deltoid"&gt;deltoid&lt;/a&gt;, another crate for delta-compressing Rust data structures.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/904"&gt;Joey Ezechiëls&lt;/a&gt; for the nomination&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No calls for participation this week&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;292 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-04-12..2021-04-19"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84113"&gt;detect when suggested paths enter extern crates more rigorously&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84274"&gt;don't set fast-math for the SIMD operations we set it for previously&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83948"&gt;add lint &lt;code&gt;deref_nullptr&lt;/code&gt; detecting when a null ptr is dereferenced&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84313"&gt;fix suggestion for unsized function parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84228"&gt;suggest to borrow after failing to cast from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;*const/mut T&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83799"&gt;stabilize &lt;code&gt;non-ascii-idents&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84086"&gt;stabilize &lt;code&gt;is_subnormal&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84084"&gt;stabilize &lt;code&gt;duration_zero&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84082"&gt;stabilize &lt;code&gt;nonzero_leading_trailing_zeros&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82992"&gt;stabilize &lt;code&gt;bufreader_seek_relative&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84121"&gt;stabilize &lt;code&gt;BTree&lt;/code&gt;{&lt;code&gt;Map&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;}&lt;code&gt;::retain&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84291"&gt;fix aliasing violations in &lt;code&gt;thread_local_const_init&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84177"&gt;fix &lt;code&gt;join_paths&lt;/code&gt; error display&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84209"&gt;merge same condition branch in vec &lt;code&gt;spec_extend&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84145/files"&gt;improve &lt;code&gt;vecdeque_binary_search&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/regex/pull/760"&gt;regex: shrink size of &lt;code&gt;Inst&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9348"&gt;cargo: don't re-use rustc cache when &lt;code&gt;RUSTC_WRAPPER&lt;/code&gt; changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7074"&gt;clippy: split &lt;code&gt;is_diagnostic_assoc_item&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7093"&gt;clippy: fix &lt;code&gt;single_match&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7067"&gt;clippy: fix a false negative on &lt;code&gt;needless_return&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7076"&gt;clippy: fix a false positive in &lt;code&gt;missing_const_for_fn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7064"&gt;clippy: fix false positive in &lt;code&gt;wrong_self_convention&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/6568"&gt;clippy: fix &lt;code&gt;redundant_pattern_matching&lt;/code&gt; drop order&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7108"&gt;clippy: un-double &lt;code&gt;return&lt;/code&gt; on &lt;code&gt;try_err&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;p&gt;Another quiet week with very small changes to compiler performance.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=5258a74c887f8ae14717e1f98b652b470877ce4e&amp;amp;end=6df26f897cffb2d86880544bb451c6b5f8509b2d&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;5258a74..6df26f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1 Regressions, 0 Improvements, 1 Mixed&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3058"&gt;try_trait_v2: A new design for the ? desugaring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3101"&gt;RFC: Reserved prefixes in the 2021 edition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3016"&gt;add const-ub RFC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2803"&gt;Target tier policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: postpone] &lt;a href="https://github.com/rust-lang/rfcs/pull/2594"&gt;RFC: Custom DSTs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: postpone] &lt;a href="https://github.com/rust-lang/rfcs/pull/2593"&gt;Enum variant types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84147"&gt;Cautiously add IntoIterator for arrays by value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84120"&gt;Stabilize Duration::MAX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84111"&gt;Stabilize &lt;code&gt;impl From&amp;lt;[(K, V); N]&lt;/code&gt;&amp;gt; for HashMap`&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84072"&gt;Allow setting &lt;code&gt;target_family&lt;/code&gt; to multiple values, and implement &lt;code&gt;target_family="wasm"&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/issues/83994"&gt;Exiting a process calls exit() which isn’t thread-safe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/83386"&gt;Stabilize &lt;code&gt;:pat_param&lt;/code&gt; but leave :pat2021 gated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/83312"&gt;parser: Remove support for inner attributes on non-block expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/83213"&gt;Update BARE_TRAIT_OBJECT and ELLIPSIS_INCLUSIVE_RANGE_PATTERNS to errors in Rust 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/81656"&gt;Tracking Issue for vec_extend_from_within&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/79885"&gt;Tracking Issue for 'ordering helpers'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/77101"&gt;Tracking issue for array::from_ref and array::from_mut&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/75294"&gt;Tracking Issue for {HashMap,BTreeMap}::into_{keys,values}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/59414"&gt;Tracking issue for x86 bittest intrinsics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/npqfbsyccgbcc/"&gt;April 21, Vancouver, BC, CA - Rust Study/Hack/Hang-out night - Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Berlin/events/277590271"&gt;April 27, Berlin, DE - Rust and Tell - Rust Berlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-London-User-Group/events/277520645/"&gt;April 27, London, UK - LDN Virtual Talks Apr 2021 - Red Badger Takeover - Rust London User Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/jqxqwryccgbkc/"&gt;April 27, Dallas, TX, US - Last Tuesday - Dallas Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/discussions/1303"&gt;April 28, Online - Ockam Open Source Community Call - Live coding walkthrough of building end-to-end encrypted communication in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/277402612/"&gt;May 4, Buffalo, NY, US - Buffalo Rust User Group, Tues May 4th - Buffalo Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/ru-RU/Rust-%D0%B2-%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B5/events/277259838/"&gt;April 21, Moscow, RU - Monthly Meetup - Rust Moscow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Grover GmbH&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://grnh.se/15fcbda73us"&gt;Software Engineer - Risk &amp;amp; Data, Rust &amp;amp; Python (Berlin or Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Massa Labs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://massa.network/#jobs"&gt;Rust Blockchain Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Instaclustr&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.seek.com.au/job/52021829"&gt;Software Engineer (Canberra, AU)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Subspace Labs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/subspacelabs/7f6a654b-60a8-4740-aa19-36b9f7a9e624?lever-origin=applied&amp;amp;lever-source%5B%5D=Twitter"&gt;Core Protocol Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Paige&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://boards.greenhouse.io/paige/jobs/5217029002"&gt;Senior Software Engineer, Visualization (Remote, Europe)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Luminovo&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://luminovo.jobs.personio.de/job/357453"&gt;(Senior) Software Engineer - Rust (Remote, CEST timezone)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;We feel that Rust is now ready to join C as a practical language for implementing the [Linux] kernel. It can help us reduce the number of potential bugs and security vulnerabilities in privileged code while playing nicely with the core kernel and preserving its performance characteristics.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://security.googleblog.com/2021/04/rust-in-linux-kernel.html"&gt;Wedson Almeida Filho on the Google Security Blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1040"&gt;Jacob Pratt&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/mvuk1k/this_week_in_rust_387/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 21 Apr 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-04-21:blog/2021/04/21/this-week-in-rust-387/</guid></item></channel></rss>