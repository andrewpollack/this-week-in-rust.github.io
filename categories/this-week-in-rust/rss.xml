<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>This Week in Rust</title><link>https://this-week-in-rust.org/</link><description></description><atom:link href="https://this-week-in-rust.org/categories/this-week-in-rust/rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 24 Mar 2021 00:00:00 -0400</lastBuildDate><item><title>This Week in Rust 383</title><link>https://this-week-in-rust.org/blog/2021/03/24/this-week-in-rust-383/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2021/03/18/async-vision-doc.html"&gt;Building a shared vision for Async Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/03/23/1.51.0-prerelease.html"&gt;1.51.0 pre-release testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Foundation] &lt;a href="https://foundation.rust-lang.org/posts/2021-03-18-introducing-bobby-holley/"&gt;Introducing Bobby Holley&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Foundation] &lt;a href="https://foundation.rust-lang.org/posts/2021-03-18-introducing-tyler-mandry/"&gt;Introducing Tyler Mandry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/03/22/changelog-69.html"&gt;rust-analyzer Changelog #69&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/the-biggest-threat-to-rust-sustainability/"&gt;The biggest threat to Rust's sustainability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cacm.acm.org/magazines/2021/4/251364-safe-systems-programming-in-rust/fulltext"&gt;Safe Systems Programming in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ecorax.net/macro-bunker-1/"&gt;The GPIO war: macro bunkers for typestate explosions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tomaka.medium.com/a-look-back-at-asynchronous-rust-d54d63934a1c"&gt;A look back at asynchronous Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ikiapps.com/programming/2019/07/26/is-rust-good-for-apps"&gt;Rust as an App Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://steveklabnik.com/writing/how-often-does-rust-change"&gt;How often does Rust change?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vadosware.io/post/serving-a-single-file-over-http-with-rust-and-go/"&gt;Serving a single file over HTTP with Rust and Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.novatec-gmbh.de/en/blog/the-case-for-the-typestate-pattern-the-typestate-pattern-itself/"&gt;The Case for the Typestate Pattern - The Typestate Pattern itself&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ZH] &lt;a href="https://zhuanlan.zhihu.com/p/352945545"&gt;Rust in Embedded World&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/V8dnIw3amLA"&gt;Cheaply writing a fast interpreter - Neil Mitchell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bit.ly/apache-arrow-with-rust"&gt;Introduction to Apache Arrow with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/rust-execute-from-memory/"&gt;How to execute shellcodes from memory in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://doma-dev.medium.com/pattern-matching-in-rust-and-other-imperative-languages-7cf1c6abf4a1"&gt;Beginner's Guide to Rust Pattern Matching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.urth.org/2021/03/21/writing-a-postgres-sql-pretty-printer-in-rust-part-1-5/"&gt;Writing a PostgreSQL Pretty Printer in Rust: Part 1.5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ericsink.com/entries/lousygrep.html"&gt;Calling .NET APIs from Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hardmo.de/article/2021-03-14-zst-proof-types.md"&gt;The magical applications of Zero-Sized Types in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/alexmercedcoder/rust-rocket-zero-to-deploy-578o"&gt;Rust and Rocket - Zero to Deploy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pwy.io/en/posts/learning-to-fly-pt3/"&gt;Learning to Fly: Let's simulate evolution in Rust! (pt 3)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blogg.bekk.no/building-an-openstreetmap-app-in-rust-part-vi-8cfc8c3f7798"&gt;Building an OpenStreetMap app in Rust, Part VI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ianjk.com/ecs-in-rust/"&gt;Tutorial: Writing a tiny Entity Component System in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aloso.github.io/2021/03/18/raii-guards.html"&gt;Implementing RAII guards in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[JP] &lt;a href="https://dev.to/nikaera/tech-actix-web-httponly-cookie-182"&gt;[TECH] Actix web „Åß HttpOnly „Å™ Cookie „ÇíË®≠ÂÆö„Åô„Çã üç™&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=gesNaLkUJeA&amp;amp;list=PLP2yfE2-FXdQmXLvrQ5QN64enbF_KCYQW"&gt;The four-part "Overview of the Rust Programming Language" for beginners is now complete&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="papers-and-research-projects"&gt;Papers and Research Projects&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No Papers or Research Projects this week&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vertexclique.com/streaming-with-bastion-and-kafka/"&gt;Streaming using Bastion &amp;amp; Kafka - near consumer native correlation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://benhoyt.com/writings/count-words/"&gt;Performance comparison: counting words in Python, Go, C++, C, AWK, Forth, and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zdnet.com/article/linus-torvalds-on-where-rust-will-fit-into-linux/"&gt;Linus Torvalds on where Rust will fit into Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.collabora.com/news-and-blog/blog/2021/03/24/rust-integrating-llvm-source-base-code-coverage-with-gitlab/"&gt;Rust: integrating LLVM source-base code coverage with GitLab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://egraphs-good.github.io"&gt;egg&lt;/a&gt;, a project using e-graphs to provide a new way to build program optimizers and synthesizers.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/891"&gt;Daniel Nugent&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dotenv-linter/dotenv-linter/issues/390"&gt;dotenv-linter has many good first issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;389 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-03-15..2021-03-22"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82834"&gt;enable mutable noalias for LLVM &amp;gt;= 12&lt;/a&gt; (Fingers crossed)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83216"&gt;allow registering tool lints with &lt;code&gt;register_tool&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83092"&gt;more precise spans for HIR paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82707"&gt;&lt;code&gt;const_evaluatable_checked&lt;/code&gt;: stop eagerly erroring in &lt;code&gt;is_const_evaluatable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1745"&gt;miri: improve error message of calling unsupported non-"C"/"system"-ABI foreign function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83080"&gt;make source-based code coverage compatible with MIR inlining&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/79278"&gt;stabilize &lt;code&gt;or_patterns&lt;/code&gt; (RFC 2535, 2530, 2175)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/80193"&gt;stabilize &lt;code&gt;feature(osstring_ascii)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82771"&gt;stabilize &lt;code&gt;slice::IterMut::as_slice&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82919"&gt;stabilize &lt;code&gt;assoc_char_funcs&lt;/code&gt; and &lt;code&gt;assoc_char_consts&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/71780"&gt;implement &lt;code&gt;String::remove_matches&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81358"&gt;add a check for ASCII characters in &lt;code&gt;to_upper&lt;/code&gt; and &lt;code&gt;to_lower&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82554"&gt;fix invalid slice access in &lt;code&gt;String::retain&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83091"&gt;constify copy related functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82570"&gt;add &lt;code&gt;as_str&lt;/code&gt; method for split whitespace str iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82191"&gt;&lt;code&gt;Vec::dedup_by&lt;/code&gt; optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83244"&gt;fix overflowing length in &lt;code&gt;Vec&amp;lt;ZST&amp;gt;&lt;/code&gt; to &lt;code&gt;VecDeque&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81607"&gt;implement &lt;code&gt;TrustedLen&lt;/code&gt; and &lt;code&gt;TrustedRandomAccess&lt;/code&gt; for &lt;code&gt;Range&amp;lt;integer&amp;gt;&lt;/code&gt;, &lt;code&gt;array::IntoIter&lt;/code&gt;, &lt;code&gt;VecDequeue&lt;/code&gt;'s iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9279"&gt;cargo: allow cargo update to operate with the &lt;code&gt;--offline&lt;/code&gt; flag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9290"&gt;cargo: refactor feature handling, and improve error messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83077"&gt;rustdoc: reduce GC work during search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustfmt/pull/4747"&gt;rustfmt: fix issue 'double spaces between struct field prefix and identity when using long attributes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;p&gt;An overall busy but decent week for performance. While there were some performance regressions they were mostly small, and they were outnumbered by performance gains. Perhaps the most interesting news is not a compiler performance improvement but rather the introduction of no-alias optimizations at the LLVM level. This slightly hurts optimized build time performance in some cases, but it should make some workloads run faster after compilation.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=f24ce9b0140d9be5a336954e878d0c1522966bb8&amp;amp;end=9b6339e4b9747d473270baa42e77e1d2fff39bf4&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;f24ce9b0..9b6339e4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 Regressions, 5 Improvements, 3 Mixed&lt;/p&gt;
&lt;p&gt;1 of them in rollups&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3014"&gt;Adds must_not_suspend_lint RFC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2996"&gt;adds async stream rfc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3052"&gt;Make the authors field optional&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3086"&gt;RFC: Declarative macro metavariable expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2529"&gt;RFC: Hidden trait implementations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/82992"&gt;Stabilize bufreader_seek_relative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/78618"&gt;Add IEEE 754 compliant fmt/parse of -0, infinity, NaN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/77704"&gt;Implement indexing slices with pairs of &lt;code&gt;core::ops::Bound&amp;lt;usize&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/es-ES/BcnRust/events/276796209/"&gt;March 25, Barcelona, ES - BcnRust Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-munich/events/276424952"&gt;March 30, Munich, DE - Rust Remote #6 - Rust Munich&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/jqxqwryccfbnc/"&gt;March 30, Dallas, TX, US - Last Tuesday - Dallas Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/txcprryccgbcb/"&gt;April 1, Berlin, DE - Rust Hack and Learn - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/276717867/"&gt;April 6, Buffalo, NY, US - Buffalo Rust User Group - Buffalo Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wellington/events/277104604/"&gt;March 31, Wellington, NZ - Coffee - Rust Wellington&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mongodb.com/careers/jobs/3005375"&gt;Senior Rust Engineer, Database Experience (Remote, North America)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;IONQ&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ionq.bamboohr.com/jobs/view.php?id=44"&gt;Senior Software Engineer, Quantum Operating Systems (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Pondurance&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pondurance-llc.prismhr-hire.com/job/216824/software-data-engineer-national"&gt;Software Data Engineer - National (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;This is just to say,&lt;br /&gt;
I have rebased&lt;br /&gt;
the feature branch&lt;br /&gt;
opened against&lt;br /&gt;
master&lt;/p&gt;
&lt;p&gt;and which&lt;br /&gt;
you might have been&lt;br /&gt;
already working&lt;br /&gt;
on fixing&lt;/p&gt;
&lt;p&gt;Forgive me,&lt;br /&gt;
the diff was so trivial&lt;br /&gt;
so minor&lt;br /&gt;
so smol&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;‚Äì &lt;a href="https://rust-lang.zulipchat.com/#narrow/stream/257879-project-portable-simd/topic/2021-03-08.20Meeting/near/231384678"&gt;Jubilee on rust-lang zulip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1020"&gt;Josh Triplett&lt;/a&gt; for the suggestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/mcng4u/this_week_in_rust_383/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 24 Mar 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-03-24:blog/2021/03/24/this-week-in-rust-383/</guid></item><item><title>This Week in Rust 382</title><link>https://this-week-in-rust.org/blog/2021/03/17/this-week-in-rust-382/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No Official Blog Posts this week&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No Newsletters this week&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thedjinn/MiniWASM"&gt;MiniWASM - A minimalist Rust WebAssembly project template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flott-motion.org/news/stepper-0-5/"&gt;Stepper 0.5 (formerly Step/Dir) - Universal Stepper Motor Interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/03/15/changelog-68.html"&gt;Rust Analyzer Changelog #68&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2021/03/16/changelog-143.html"&gt;IntelliJ Rust Changelog #143&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://console.dev/qa/starship-matan-kushner/"&gt;Why the Starship shell prompt is built in Rust (interview with project creator)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thenewstack.io/rust-vs-go-why-theyre-better-together/?s=09"&gt;Rust vs. Go: Why They‚Äôre Better Together&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cfallin.org/blog/2021/03/15/cranelift-isel-3/"&gt;Cranelift, Part 3: Correctness in Register Allocation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tangramvision.com/blog/making-great-docs-with-rustdoc"&gt;Making Great Docs with Rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.urth.org/2021/03/14/writing-a-postgres-sql-pretty-printer-in-rust-part-1/"&gt;Writing a Postgres SQL Pretty Printer in Rust: Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://able.bio/haixuanTao/data-manipulation-polars-vs-rust--3def44c8"&gt;Data Manipulation: Polars vs Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/os-in-rust-incorporate-vga-buffer-part-7/"&gt;OS in Rust: Incorporate VGA buffer: Part-7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crazymykl/rust-koans"&gt;Rust Koans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/rust-send-email/"&gt;How to send emails with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.stephenmarz.com/2021/02/22/writing-pong-in-rust/"&gt;Writing Pong in Rust for my OS Written in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://manishearth.github.io/blog/2021/03/15/arenas-in-rust/"&gt;Arenas in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lpalmieri.com/posts/zero-downtime-deployments/"&gt;Zero Downtime Deployments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/xinnks/deploy-a-rust-website-on-heroku-1l45"&gt;Deploy A Rust Website on Heroku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jakobmeier.ch/blogging/Enums.html"&gt;One enum to rule them all&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rg3d.rs/tutorials/2021/03/11/tutorial3.html"&gt;Writing a 3D Shooter using rg3d - #3 - Bots, AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.datastax.com/blog/2021/03/developing-high-performance-apache-cassandra-applications-rust-part-1"&gt;Developing High Performance Apache Cassandra‚Ñ¢ Applications in Rust (Part 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bes.github.io/blog/rust-strings/"&gt;Strings in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/pintuch/rust-reqwest-examples-10ff"&gt;Rust - Reqwest examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/libp2p-tutorial-build-a-peer-to-peer-app-in-rust/"&gt;libp2p tutorial: Build a peer-to-peer app in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/playlist?list=PLauX9TuJ8sfyaLPZ1udS3zS_V9YXdsbtc"&gt;Rust for Beginners - Watch me code the Rustlings Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=Das3XSWo1GU"&gt;Crust of Rust: The Drop Check (live edition)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="papers-and-research-projects"&gt;Papers and Research Projects&lt;/h3&gt;
&lt;p&gt;*&lt;em&gt;No Papers and Research Projects This Week&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://davidkoloski.me/blog/rkyv-is-faster-than/"&gt;rkyv is faster than {bincode, capnp, cbor, flatbuffers, postcard, prost, serde_json}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.peakscale.com/100ms-gotcha/"&gt;100ms delays with Rust on Lambda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kornel.ski/rust-c-speed"&gt;Speed of Rust vs C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.greyblake.com/blog/2021-03-12-rust-playground-at-your-fingertips/"&gt;Rust Playground At Your Fingertips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yossarian.net/2021/03/16/totally_safe_transmute-line-by-line"&gt;totally_safe_transmute, line-by-line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ocboogie/rust-graphics-crates"&gt;Rust Graphics Crates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jduchniewicz.com/posts/2021/02/c-to-rust-or-how-to-render-your-mindset/#introduction"&gt;C++ to Rust - or how to render your mindset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.personal.psu.edu/suz305/recruitment-twir.html"&gt;Paid Online Research: Rust Programmers‚Äô Experience and Challenges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/tczajka/ibig-rs"&gt;ibig&lt;/a&gt;, a crate of fast big integers.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/889"&gt;Willi Kappler&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/delta-io/delta-rs/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;delta-rs has many good first issues for those who want to learn Delta Lake or Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dotenv-linter/dotenv-linter/issues/390"&gt;dotenv-linter has many good first issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;365 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-03-08..2021-03-15"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82422"&gt;expand: do not allocate &lt;code&gt;Lrc&lt;/code&gt; for &lt;code&gt;allow_internal_unstable&lt;/code&gt; list unless necessary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82854"&gt;account for &lt;code&gt;if (let pat = expr) {}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83127"&gt;introduce &lt;code&gt;proc_macro_back_compat&lt;/code&gt; lint, and emit for &lt;code&gt;time-macros-impl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82495"&gt;eagerly construct bodies of THIR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/79519"&gt;store HIR attributes in a side table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/77511"&gt;add &lt;code&gt;StatementKind::CopyNonOverlapping&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83064"&gt;tweaks to stable hashing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83069"&gt;&lt;code&gt;rustc_query_system&lt;/code&gt;: simplify &lt;code&gt;QueryCache::iter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1737"&gt;mir-opt-level 4 is the new 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1744"&gt;miri: ensure we catch incorrectly unwinding calls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1743"&gt;miri: check callee ABI when Miri calls closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83022"&gt;don't implement &lt;code&gt;mem::replace&lt;/code&gt; with &lt;code&gt;mem::swap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82417"&gt;fix &lt;code&gt;io::copy&lt;/code&gt; specialization using &lt;code&gt;copy_file_range&lt;/code&gt; when writer was opened with &lt;code&gt;O_APPEND&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81879"&gt;added &lt;code&gt;#[repr(transparent)]&lt;/code&gt; to &lt;code&gt;core::cmp::Reverse&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82849"&gt;add &lt;code&gt;Option::get_or_default&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82121"&gt;implement &lt;code&gt;Extend&lt;/code&gt; and &lt;code&gt;FromIterator&lt;/code&gt; for &lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81127"&gt;improve &lt;code&gt;sift_down&lt;/code&gt; performance in &lt;code&gt;BinaryHeap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82760"&gt;fix leak in &lt;code&gt;Vec::extend_from_within&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/regex/pull/752"&gt;regex: substantially reduce regex stack size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/6859"&gt;clippy: implement new lint: &lt;code&gt;if_then_some_else_none&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;p&gt;A generally positive albeit quiet week though many of the perf improvements were gaining performance back from previous regressions. We'll need to continue to keep an eye on rollups as there were two that caused small performance changes.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=edeee915b1c52f97411e57ef6b1a8bd46548a37a&amp;amp;end=861872bc453bde79b83ff99d443d035225f10e87&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;edeee..86187&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1 Regression, 4 Improvements, 1 Mixed&lt;/p&gt;
&lt;p&gt;2 of them in rollups&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3086"&gt;RFC: Declarative macro metavariable expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3067"&gt;Change visibility scoping rules for macro_rules macros&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/82846"&gt;rustdoc: allow list syntax for #[doc(alias)] attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/82539"&gt;Deprecate &lt;code&gt;doc(include)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/79278"&gt;Stabilize or_patterns (RFC 2535, 2530, 2175)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/78618"&gt;Add IEEE 754 compliant fmt/parse of -0, infinity, NaN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/pull/78204"&gt;&lt;code&gt;impl&amp;lt;A, B&amp;gt;&lt;/code&gt; IntoIterator for (A, B) as Zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/67364"&gt;tracking issue for &lt;code&gt;debug_non_exhaustive&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/issues/65516"&gt;[Edition vNext] Consider deprecating weird nesting of items&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-manchester/events/276567843/"&gt;March 18, Manchester, UK - Rust Manchester Opening Night - Rust Manchester&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Linz/events/276520435"&gt;March 18, Linz, AT - Rust Meetup Linz - 8th Edition - Rust Linz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/txcprryccfbxb/"&gt;March 18, Berlin, DE - Rust Hack and Learn - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://berline.rs/2021/03/23/rust-and-tell.html"&gt;March 23, Berlin, DE - Rust and Tell - 2021 Kickoff - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/es-ES/BcnRust/events/276796209/"&gt;March 25. Barcelona, ES - BcnRust Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/jqxqwryccfbnc/"&gt;March 30, Dallas, TX, US - Last Tuesday - Dallas Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Protocol Labs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/protocol/c9de15d5-4098-45f9-8a0e-2b1113dc6983"&gt;Research Engineer, CryptoCompute Lab (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Manta Network&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/manta-network/jobs/1182625-backend-distributed-systems-engineer-rust"&gt;Backend/Distributed Systems Engineer (Rust) (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;e.ventures&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://old.reddit.com/r/rust/comments/lhvipu/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Rust backend engineer (Remote, the Americas)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Oso&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.osohq.com/jobs/eng"&gt;Software Engineer (New York, NY, US or Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.osohq.com/jobs/eng-mgr"&gt;Engineering Manager (New York, NY, US or Remote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.osohq.com/jobs/dev-advocate"&gt;Developer Advocate (New York, NY, US or Remote&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/?team=Engineering"&gt;Several Rust Engineering Positions are Available (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I think the security of the internet is incredibly important obviously and I want it to be secure and I think bringing rust there is absolutely going to help it. Just by default it eliminates some of the most classic types of vulnerabilities.&lt;/p&gt;
&lt;p&gt;But I don't think that's the most exciting part. I think the most exciting part is that the set of people for whom it is possible to implement these types of things, like who writes coreutils, who writes curl, who does those things. That used to be a really small pool of people. That had to be people who knew the dark arts, and only them and only their buddies or something.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;And it's the goal of rust to empower that to be a larger group of people&lt;/strong&gt; and ultimately I think that that is what is going to happen which means the sheer number of people will be larger, and also the diversity of that set of people is going to grow. And I that that that will probably actually do more for the security and usefulness of these tools than eliminating undefined behaviour.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;‚Äì &lt;a href="https://www.twitch.tv/videos/946905598"&gt;Ashley Williams on twitch&lt;/a&gt; (quote starts at 46:48)&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1014"&gt;Nixon Enraght-Moony&lt;/a&gt; for the suggestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/m7fy87/this_week_in_rust_382/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 17 Mar 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-03-17:blog/2021/03/17/this-week-in-rust-382/</guid></item><item><title>This Week in Rust 381</title><link>https://this-week-in-rust.org/blog/2021/03/10/this-week-in-rust-381/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2021/03/04/planning-rust-2021.html"&gt;Planning the Rust 2021 Edition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-gamedev.github.io/posts/newsletter-019/"&gt;This Month in Rust GameDev #19 - February 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-osdev.com/this-month/2021-02/"&gt;This Month in Rust OSDev (February 2021)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/lxdw8j/rib_newsletter_21_more_rust_and_blockchains/"&gt;RiB Newsletter #21 - More Rust and blockchains&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/03/08/changelog-67.html"&gt;rust-analyzer Changelog #67&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EmbarkStudios/rust-gpu/releases/tag/v0.3.0"&gt;rust-gpu v0.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cargo-generate/cargo-generate/releases/tag/v0.6.0"&gt;cargo-generate 0.6.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://roapi.github.io/docs/index.html"&gt;Automatically generate APIs for datasets using Rust, Arrow and Datafusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.peakscale.com/serverless-rust/"&gt;Serverless Rust Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sdleffler.github.io/RustTypeSystemTuringComplete/"&gt;Rust's Type System is Turing-Complete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinlynagh.com/rust-zig/"&gt;Why I rewrote my Rust keyboard firmware in Zig: consistency, mastery, and fun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tim.mcnamara.nz/post/644942576528523264/calling-a-private-rust-function-from-outside"&gt;Calling a private Rust function from outside of its module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cfallin.org/pubs/ecoop2020_defborrow.pdf"&gt;Safe, Flexible Aliasing with Deferred Borrows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.diva-portal.org/smash/record.jsf?pid=diva2%3A1463648&amp;amp;dswid=1332"&gt;Evaluating Memory Models for Graph-Like Data Structures in the Rust Programming Language: Performance and Usability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aloso.github.io/2021/03/10/rusts-universes.html"&gt;Rusts Universes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/m14agf/how_i_significantly_improved_giganotes_app/"&gt;How I significantly improved Giganotes app performance using Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/os-in-rust-incorporate-vga-buffer-part-6/"&gt;OS in Rust: Incorporate VGA buffer: Part-6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rg3d.rs/tutorials/2021/03/05/tutorial1.html"&gt;Writing a 3D Shooter using rg3d - #1 - Character Controller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rg3d.rs/tutorials/2021/03/09/tutorial2.html"&gt;Writing a 3D Shooter using rg3d - #2 - Weapons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.stephenmarz.com/2021/02/22/writing-pong-in-rust/"&gt;Writing Pong in Rust for my OS Written in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/dbanty/replacing-fastapi-with-rust-part-6-aws-lambda-inm"&gt;Replacing FastAPI with Rust: Part 6 - AWS Lambda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aloso.github.io/2021/03/09/creating-an-iterator"&gt;Creating an Iterator in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blogg.bekk.no/building-an-openstreetmap-app-in-rust-part-v-f14831e13e61"&gt;Building an OpenStreetMap app in Rust, Part V&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/tYfA5rjrhqk"&gt;Learning Rust: Structs and Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/Flf4ezLWw1E"&gt;Answers to StackOverflow's top Rust programming questions explained&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/z2m1Y4nj7s8"&gt;(Live Coding) Learning Timely Dataflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[FA] [video] &lt;a href="https://www.youtube.com/channel/UCIXThmX_uAp2cJTR-hTjdcA"&gt;Rust in Farsi „ÉÑ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="papers-and-research-projects"&gt;Papers and Research Projects&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xldenis/creusot"&gt;Creusot is a tool for deductive verification of Rust code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://egraphs-good.github.io/"&gt;egg, a Rust library for e-graphs and equality saturation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sylvestre.ledru.info/blog/2021/03/09/debian-running-on-rust-coreutils"&gt;Debian running on Rust coreutils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/lxil6d/a_friend_and_i_made_pipesrs_a_rust_clone_of/"&gt;A friend and I made pipes-rs, a Rust clone of pipes.sh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://daniel.haxx.se/blog/2021/03/09/half-of-curls-vulnerabilities-are-c-mistakes/"&gt;Half of curl's vulnerabilities are C mistakes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/drfXNB6p6nI"&gt;USENIX Enigma 2021 - Quantifying Memory Unsafety and Reactions to It&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/sorceress"&gt;Sorceress&lt;/a&gt;, a Rust environment for sound synthesis and algorithmic composition.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/887"&gt;Zelda Hessler&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-analyzer/rust-analyzer/issues/7857"&gt;rust-analyzer - Optimize MBE (macro by example) performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/this-week-in-rust/"&gt;Our own "Papers and Research Projects" section needs filling!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;369 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-03-01..2021-03-08"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81451"&gt;upgrade to LLVM 12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82783"&gt;backport some LLVM compile-time improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82557"&gt;add natvis for &lt;code&gt;Result&lt;/code&gt;, &lt;code&gt;NonNull&lt;/code&gt;, &lt;code&gt;CString&lt;/code&gt;, &lt;code&gt;CStr&lt;/code&gt;, and &lt;code&gt;Cow&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82702"&gt;change error about unknown attributes to a warning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82727"&gt;shrink the size of Rvalue by 16 bytes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82738"&gt;move check only relevant in error case out of critical path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82770"&gt;add &lt;code&gt;assert_matches!&lt;/code&gt; macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82862"&gt;generalize &lt;code&gt;Write&lt;/code&gt; impl for &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; to &lt;code&gt;Vec&amp;lt;u8, A&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82728"&gt;avoid unnecessary &lt;code&gt;Vec&lt;/code&gt; construction in &lt;code&gt;BufReader&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74024"&gt;improve &lt;code&gt;slice.binary_search_by()&lt;/code&gt;'s best-case performance to O(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82764"&gt;add {&lt;code&gt;BTreeMap&lt;/code&gt;, &lt;code&gt;HashMap&lt;/code&gt;}&lt;code&gt;::try_insert&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/247"&gt;hashbrown: add &lt;code&gt;try_insert&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9246"&gt;cargo: fix &lt;code&gt;filter_platform&lt;/code&gt; to run on targets other than x86&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/80527"&gt;make rustdoc lints a tool lint instead of built-in&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;p&gt;A generally positive albeit quiet week though many of the perf improvements were gaining performance back from previous regressions. We'll need to continue to keep an eye on rollups as there were two that caused small performance changes.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=edeee915b1c52f97411e57ef6b1a8bd46548a37a&amp;amp;end=861872bc453bde79b83ff99d443d035225f10e87&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;edeee..86187&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1 Regression, 4 Improvements, 1 Mixed&lt;/p&gt;
&lt;p&gt;2 of them in rollups&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2951"&gt;Linking modifiers for native libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3067"&gt;Change visibility scoping rules for macro_rules macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3052"&gt;Make the authors field optional&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/82846"&gt;rustdoc: allow list syntax for #[doc(alias)] attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/82771"&gt;slice: Stabilize &lt;code&gt;IterMut::as_slice&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/82121"&gt;Implement Extend and FromIterator for OsString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/80300"&gt;Emit errors/warns on some wrong uses of rustdoc attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/pull/79309"&gt;resolve: allow super in module in block to refer to block items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/issues/65516"&gt;[Edition vNext] Consider deprecating weird nesting of items&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgryccfbpb/"&gt;March 11, Columbus, OH, US - Monthly Meeting - Columbus Rust Society&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/276845098/"&gt;March 11, Lehi, UT, US - Show and Tell: &lt;code&gt;rustdoc&lt;/code&gt; - Utah Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/276759349/"&gt;March 11, San Diego, CA, US - March 2021 Tele-Meetup - San Diego Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chemnitzer.linux-tage.de/2021/en/programm/beitrag/135"&gt;March 13th, DE - Chemnitzer Linux Tage - Talk on Rust and its ecosystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/kcfpzryccfbpb/"&gt;March 16, Washington, DC, US - Rust and Tell Lightning Talks - Rust DC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/npqfbsyccfbwb/"&gt;March 17, Vancouver, BC, US - Rust Study/Hack/Hang-out night&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-manchester/events/276567843/"&gt;March 18, Manchester, UK - Rust Manchester Opening Night - Rust Manchester&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/txcprryccfbxb/"&gt;March 18, Berlin, DE - Rust Hack and Learn - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustlab.it/en/agenda/from-c-to-rust/"&gt;March 18, Florence, IT - Rewriting of a small component from C to Rust - RustLab 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://berline.rs/2021/03/23/rust-and-tell.html"&gt;March 23, Berlin, DE - Rust and Tell - 2021 Kickoff - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/es-ES/BcnRust/events/276796209/"&gt;March 25. Barcelona, ES - BcnRust Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;e.ventures&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://old.reddit.com/r/rust/comments/lhvipu/official_rrust_whos_hiring_thread_for_jobseekers/gn3p99j/"&gt;Rust software engineer (Remote, the Americas)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Launchbadge, LLC.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ziprecruiter.com/jobs/launchbadge-5e5a2369/rust-software-engineer-72eb7f1b"&gt;Rust software engineer (Citrus Heights, CA, US)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Manta Network&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/manta-network/jobs/1182625-backend-distributed-systems-engineer-rust"&gt;Backend/Distributed Systems Engineer (Rust) (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tweede golf&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/vacatures/2/lead-developer-embedded-rust"&gt;Lead Developer Embedded Rust (Nijmegen, NL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/vacatures/11/medior-embedded-engineer"&gt;Embedded Rust Engineer (Nijmegen, NL)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Parity&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/apply/?gh_jid=4385365003"&gt;Rust Performance Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/apply/?gh_jid=4347843003"&gt;Rust P2P Network Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#jobs"&gt;and several other Rust Positions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;it's funny, every time I run into a baffling borrow error, it's preventing me from committing a real, serious mistake&lt;/p&gt;
&lt;p&gt;but it can take some thinking to figure out what exactly that mistake is..&lt;/p&gt;
&lt;p&gt;sometimes the borrow checker feels like a wise sage on a mountain giving advice in riddles lol&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;‚Äì &lt;a href="https://discord.com/channels/442252698964721669/443150878111694848/817890654779605009"&gt;Jarrett on discord&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1012"&gt;Daniel H-M&lt;/a&gt; for the suggestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/m2g9cy/this_week_in_rust_381/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 10 Mar 2021 00:00:00 -0500</pubDate><guid>tag:this-week-in-rust.org,2021-03-10:blog/2021/03/10/this-week-in-rust-381/</guid></item><item><title>This Week in Rust 380</title><link>https://this-week-in-rust.org/blog/2021/03/03/this-week-in-rust-380/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;p&gt;No newsletters this week.&lt;/p&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2021/02/26/const-generics-mvp-beta.html"&gt;Const generics MVP hits beta!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/03/03/lang-team-mar-update.html"&gt;Lang team March update&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2021/03/01/changelog-142.html"&gt;IntelliJ Rust Changelog #142&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/03/01/changelog-66.html"&gt;rust-analyzer changelog #66&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/knurling-changelog-18/"&gt;Knurling-rs changelog #18&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flott-motion.org/news/last-month-in-flott-march-2021/"&gt;Last Month in Flott - March 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flott-motion.org/news/ramp-maker-0-2/"&gt;RampMaker 0.2 - Stepper Motor Acceleration Ramp Generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://console.dev/qa/oso-sam-scott/"&gt;Why we built the core auth library in Rust (interview with CTO of Oso)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://able.bio/haixuanTao/data-manipulation-pandas-vs-rust--1d70e7fc"&gt;Data Manipulation: Pandas vs Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clux.github.io/probes/post/2021-02-28-kube-evolution/"&gt;Evolution of Kube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/luzero/temporal-rdo-update-optimization-2pf1"&gt;Temporal RDO update optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/thepuzzlemaker/introducing-the-calypso-chronicles-1ff8"&gt;Introducing The Calypso Chronicles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://d3lm.medium.com/rust-beware-of-escape-sequences-85ec90e9e243#ee0e-58229fc84d02"&gt;Rust: Beware of Escape Sequences\n&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://objectdisoriented.evokewonder.com/posts/introducing-rustybot-part-3/"&gt;Introducing Rustybot (part 3 of n)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io/2021/02/27/delete-cargo-integration-tests.html"&gt;Delete Cargo Integration Tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jduchniewicz.com/posts/2021/02/c-to-rust-or-how-to-render-your-mindset/"&gt;C++ to Rust - or how to render your mindset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/somedood/generic-impl-blocks-are-kinda-like-macros-1aa0"&gt;Generic &lt;code&gt;impl&lt;/code&gt; blocks are kinda like macros...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/xinnks/make-a-back-end-number-guessing-game-with-rust-1hkj"&gt;Make a Back-End Number Guessing Game with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fpcomplete.com/blog/captures-closures-async/"&gt;Captures in closures and async blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/test-driver-crate/"&gt;Testing a driver crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://beanseverywhere.xyz/blog/rust-lambda"&gt;Using Rust for AWS Lambdas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/edge-node-engineering/always-on-benchmarking-in-rust-d23f2bac1c1d"&gt;Always-On Benchmarking in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blogg.bekk.no/building-an-openstreetmap-app-in-rust-part-iv-d82ebc245381"&gt;Building an OpenStreetMap app in Rust, Part IV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://timvisee.com/blog/solving-aoc-2020-in-under-a-second/"&gt;Solving Advent of Code 2020 in under a second&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.novatec-gmbh.de/en/blog/the-case-for-the-typestate-pattern-introducing-algebraic-data-types/"&gt;The Case for the Typestate Pattern - Introducing Algebraic Data Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.golem.de/news/programmiersprachen-weniger-frust-mit-rust-2102-154243.html"&gt;Weniger Frust mit Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/9IbYBl48eTQ"&gt;Learning Rust: Procedural Macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/eIllaNZisiU"&gt;Rust proxy server with Warp and Hyper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/ferrocene-update-three-the-road/"&gt;Ferrocene Part 3: The Road to Rust in mission- and safety-critical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/opensource/how-our-aws-rust-team-will-contribute-to-rusts-future-successes/"&gt;How our AWS Rust team will contribute to Rust's future successes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.gnome.org/~federico/blog/librsvg-rust-and-non-mainstream-architectures.html"&gt;Librsvg, Rust, and non-mainstream architectures&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/camino"&gt;camino&lt;/a&gt;, a library with UTF-8 coded paths mimicking &lt;code&gt;std::os::Path&lt;/code&gt;'s API.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/886"&gt;piegames&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No calls for participation this week&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;402 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-02-22..2021-03-01"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82258"&gt;implement -Z hir-stats for nested foreign items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81856"&gt;suggest character encoding is incorrect when encountering random null bytes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81769"&gt;suggest &lt;code&gt;return&lt;/code&gt;ing tail expressions that match return type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81235"&gt;improve suggestion for tuple struct pattern matching errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82364"&gt;improve error message when found type is deref of expected&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82321"&gt;AST: remove some unnecessary boxes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82620"&gt;apply lint restrictions from renamed lints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/78360"&gt;remove storage markers if they won't be used during code generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82305"&gt;remove many &lt;code&gt;RefCell&lt;/code&gt;s from &lt;code&gt;DocContext&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82265"&gt;prevent computing Item attributes twice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/80475"&gt;new mir-opt pass to simplify gotos with const values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/80553"&gt;add an impl of &lt;code&gt;Error&lt;/code&gt; on &lt;code&gt;Arc&amp;lt;impl Error&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81167"&gt;make &lt;code&gt;ptr::write&lt;/code&gt; const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82078"&gt;make &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;u8&lt;/code&gt; methods const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81837"&gt;slight perf improvement on &lt;code&gt;char::to_ascii_lowercase&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81940"&gt;stabilize &lt;code&gt;str_split_once&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81874"&gt;specialize &lt;code&gt;slice::fill&lt;/code&gt; with &lt;code&gt;Copy&lt;/code&gt; type and &lt;code&gt;u8&lt;/code&gt;/&lt;code&gt;i8&lt;/code&gt;/&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2363"&gt;futures: &lt;code&gt;future::SelectAll::into_inner&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2293"&gt;futures: &lt;code&gt;futures_util::stream::SelectAll::push&lt;/code&gt; should use &lt;code&gt;&amp;amp;self&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9105"&gt;cargo: run rustdoc doctests relative to the workspace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/8939"&gt;cargo: throw error if &lt;code&gt;CARGO_TARGET_DIR&lt;/code&gt; is an empty string&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9175"&gt;cargo: add support for &lt;code&gt;[env]&lt;/code&gt; section in .cargo/config.toml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9195"&gt;cargo: make it more clear which module is being tested when running cargo test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;p&gt;Quiet week, a couple regressions and several nice improvements.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@simulacrum&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=301ad8a4fa3ea56fb980443b7997c8f9d72dd717&amp;amp;end=edeee915b1c52f97411e57ef6b1a8bd46548a37a&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;301ad8..edeee&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 Regressions, 3 Improvements, 0 Mixed&lt;/p&gt;
&lt;p&gt;0 of them in rollups&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2922"&gt;RFC - cargo templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2376"&gt;rfc: make cargo install extensible&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/82539"&gt;Deprecate &lt;code&gt;doc(include)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/82121"&gt;Implement Extend and FromIterator for OsString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/81234"&gt;Allow specifying alignment for functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/pull/79309"&gt;resolve: allow super in module in block to refer to block items&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3090"&gt;A new prelude for the 2021 edition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/txcprryccfbgb/"&gt;March 4, Berlin, DE - Rust Hack and Learn - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/Rust-Saar/events/276401469/"&gt;March 9, Saarb√ºcken, Saarland, DE - Meetup: 9u16 (virtual) - Rust Saar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/276717842/"&gt;March 9, Buffalo, NY, US - Buffalo Rust User Group - Buffalo Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gskksryccfbmb/"&gt;March 9, Seattle, WA, US - Monthly meetup - Seattle Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-NYC/events/276666844/"&gt;March 10, New York, NY, US - Seemingly Dark Magic with Rust Types with Nikolai Vazquez - Rust NYC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgryccfbpb/"&gt;March 11, Columbus, OH, US - Monthly Meeting - Columbus Rust Society&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chemnitzer.linux-tage.de/2021/en/programm/beitrag/135"&gt;March 13th, DE - Chemnitzer Linux Tage - Talk on Rust and its ecosystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/kcfpzryccfbpb/"&gt;March 16, Washington, DC, US - Rust and Tell Lightning Talks - Rust DC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/npqfbsyccfbwb/"&gt;March 17, Vancouver, BC, US - Rust Study/Hack/Hang-out night&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/qxqdgryccfbnb/"&gt;March 10, Atlanta, GA, US - Grab a beer with fellow Rustaceans - Rust Atlanta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Crown&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.crown.de/lang/en/company/career/software-developer-rust.html"&gt;Rust Software Engineer (Karlsruhe, DE)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Polymath&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://polymath.bamboohr.com/jobs/view.php?id=80&amp;amp;source=aWQ9NQ%3D%3D"&gt;Sr. Back End Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tweede golf&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/vacatures/2/lead-developer-embedded-rust"&gt;Lead Developer Embedded Rust (Nijmegen, NL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/vacatures/11/medior-embedded-engineer"&gt;Embedded Rust Engineer (Nijmegen, NL)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;It's a great example of the different attitudes of C/C++ and Rust: In C/C++ something is correct when someone can use it correctly, but in Rust something is correct when someone can't use it incorrectly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;‚Äì &lt;a href="https://www.reddit.com/r/rust/comments/lt4u85/const_generics_mvp_hits_beta/goyg3v4/"&gt;/u/Janohard on /r/rust&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1007"&gt;Vlad Frolov&lt;/a&gt; for the suggestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://this-week-in-rust.org/blog/2021/03/03/this-week-in-rust-380/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 03 Mar 2021 00:00:00 -0500</pubDate><guid>tag:this-week-in-rust.org,2021-03-03:blog/2021/03/03/this-week-in-rust-380/</guid></item></channel></rss>