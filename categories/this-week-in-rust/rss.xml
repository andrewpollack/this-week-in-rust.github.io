<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>This Week in Rust</title><link>https://this-week-in-rust.org/</link><description></description><atom:link href="https://this-week-in-rust.org/categories/this-week-in-rust/rss.xml" rel="self"></atom:link><lastBuildDate>Tue, 25 Jun 2019 00:00:00 -0400</lastBuildDate><item><title>This Week in Rust 292</title><link>https://this-week-in-rust.org/blog/2019/06/25/this-week-in-rust-292/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://unhandledexpression.com/general/2019/06/17/nom-5-is-here.html"&gt;nom parser combinators 5.0 release: replace macros with functions, better errors&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cliffle.com/blog/rust-typestate/"&gt;The typestate pattern in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redox-os.org/news/rsoc-ptrace-0/"&gt;Implementing ptrace for Redox OS - part 0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2019.jsconf.eu/jason-williams/lets-build-a-javascript-engine.html"&gt;Let's build a JavaScript engine (in Rust)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.japaric.io/multicore-rtfm/"&gt;Real Time for the Masses (RTFM) goes multi-core&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yoshuawuyts.com/rust-streams/"&gt;Rust streams&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dentrassi.de/2019/06/16/rust-on-the-esp-and-how-to-get-started/"&gt;Rust on the ESP32/ESP8266 and how to get started&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ntcore.com/?p=641"&gt;Rust for closed-source projects&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mtak-blog.github.io/are-we-lock-free-yet"&gt;swym: Are we lock-free yet&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/rust-windowing/winit"&gt;winit&lt;/a&gt;, a pure-rust cross-platform window initialization library. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/572"&gt;Osspial&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cfp.rust-belt-rust.com/"&gt;Call for Proposals is open for Rust Belt Rust 2019 until 1 July&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/winit-0-20-the-state-of-windowing-in-rust-and-a-request-for-help/29485"&gt;Winit 0.20, the state of windowing in Rust, and a request for help&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dtolnay/request-for-implementation/"&gt;Request for implementation&lt;/a&gt; - Crates that don't exist but should. Suggest your own design and someone will pick it up.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Frommi/miniz_oxide/issues/14"&gt;miniz_oxide: Some Panics cause segfaults in jemalloc when called from flate2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;172 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-06-17..2019-06-24"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60861"&gt;Introduce &lt;code&gt;Let(..)&lt;/code&gt; in AST, remove &lt;code&gt;IfLet&lt;/code&gt; + &lt;code&gt;WhileLet&lt;/code&gt; and parse let chains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61547"&gt;Support &lt;code&gt;cfg&lt;/code&gt; and &lt;code&gt;cfg_attr&lt;/code&gt; on generic parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61020"&gt;librustc_data_structures: Speedup union of sparse and dense hybrid set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62081"&gt;Refactor miri pointer checks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61885"&gt;Help LLVM better optimize &lt;code&gt;slice::Iter&lt;/code&gt;(&lt;code&gt;Mut&lt;/code&gt;)&lt;code&gt;::len&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61874"&gt;Remove the default type of &lt;code&gt;Rem::Output&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61864"&gt;Make use of &lt;code&gt;ptr::null&lt;/code&gt;(&lt;code&gt;_mut&lt;/code&gt;) instead of casting zero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61802"&gt;Make &lt;code&gt;MaybeUninit&lt;/code&gt; &lt;code&gt;#[repr(transparent)]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60772"&gt;Implement &lt;code&gt;nth_back&lt;/code&gt; for &lt;code&gt;slice::&lt;/code&gt;{&lt;code&gt;Iter&lt;/code&gt;, &lt;code&gt;IterMut&lt;/code&gt;}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60454"&gt;Add custom &lt;code&gt;nth_back&lt;/code&gt; to &lt;code&gt;Skip&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60667"&gt;Add functions for building raw slices to libcore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61505"&gt;rustdoc: Only show methods that appear in &lt;code&gt;impl&lt;/code&gt; blocks in the Implementors sections of trait doc pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60293"&gt;rustdoc: Generate implementors for all auto traits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2359"&gt;Finalize syntax for slice patterns with subslices&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2707"&gt;Make &lt;code&gt;..&lt;/code&gt; a pattern syntactically&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61682"&gt;Stabilize &lt;code&gt;type_alias_enum_variants&lt;/code&gt; in Rust 1.37.0&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2714"&gt;RFC for Vec::append_from_within()&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="africa"&gt;Africa&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/dgqmbryzkbfb/"&gt;Jul  3. Johannesburg, ZA - Johannesburg Rust Meetup - informal discussions on topics related to the language&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/2824830874225735/"&gt;Jun 29. Taipei, TW - Rust Taiwan Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/259480968/"&gt;Jul  1. Auckland, NZ - Rust AKL - WASM - Implementing a scalable omiscient debugger in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.connpass.com/event/133657/"&gt;Jul  3. Tokyo, JP - Tokyo Rust Meetup - Rust LT #6&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSeyDIRlKFE0h4gJ8cxL6tz_3G4p7k4okZZBNhGbuitlOqBJOg/viewform"&gt;Jul 10. Petaling Jaya, MY - Rust Meetup July 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.rustlab.it/"&gt;Jun 28-29. Firenze, IT - RustLab 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzkbnb/"&gt;Jul 10. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/kkzkxqyzkbfb/"&gt;Jul  3. Atlanta, GA, US - Grab a beer with fellow Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/mffbtpyzkbfb/"&gt;Jul  3. Indianapolis, IN, US - Indy.rs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gfnncryzkbmb/"&gt;Jul  9. Redmond, WA, US - Seattle Rust Meetup - Monthly meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzkbnb/"&gt;Jul 10. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dbcfrpyzkbpb/"&gt;Jul 11. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://iota.bamboohr.com/jobs/view.php?id=90"&gt;Senior Software Engineer (Rust) at IOTA, Remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;why doesn't 'static, the largest lifetime, not simply eat all the others&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://twitter.com/mountain_ghosts/status/1133406976002674688?s=09"&gt;@mountain_ghosts on twitter&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@mountain_ghosts 'static is biggest but actually,, weakest of lifetimes, becuase it is subtype of every lifetime&lt;/p&gt;
&lt;p&gt;'static is big soft friend&lt;/p&gt;
&lt;p&gt;pls love and protect it&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://twitter.com/Gankro/status/1133435497806815232?s=09"&gt;@gankro on twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/654"&gt;Christopher Durham&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/c5u30f/this_week_in_rust_292/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 25 Jun 2019 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2019-06-25:blog/2019/06/25/this-week-in-rust-292/</guid></item><item><title>This Week in Rust 291</title><link>https://this-week-in-rust.org/blog/2019/06/18/this-week-in-rust-291/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gfx-rs.github.io/2019/06/12/anniversary-5.html"&gt;gfx-rs: 5 year anniversary&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cfsamson.gitbook.io/green-threads-explained-in-200-lines-of-rust/"&gt;Green threads explained in 200 lines of Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.libra.org/docs/community/coding-guidelines"&gt;Facebook's new cryptocurrency Libra uses Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://press.vimeo.com/61553-vimeo-introduces-support-for-royalty-free-video-codec-av1"&gt;Vimeo introduces support for AV1 using rav1e, a Rust library&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amethyst.rs/posts/release-0-11"&gt;Amethyst v0.11.0 released, now supporting gfx-hal with Rendy&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.gnome.org/~federico/blog/bzip2-in-rust-randomization-table.html"&gt;Bzip2 in Rust: porting the randomization table&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://content.riscv.org/wp-content/uploads/2019/06/14.05-building_secure_systems-1.pdf"&gt;Building secure systems using RISC-V and Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/Centril/rust-safe"&gt;safe&lt;/a&gt;, a &lt;code&gt;#[safe]&lt;/code&gt; attribute for explaining why &lt;code&gt;unsafe { ... }&lt;/code&gt; is OK. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/569"&gt;Michael-F-Bryan&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://internals.rust-lang.org/t/final-async-await-testing-push/10423"&gt;Final async/await testing push&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mckeogh.tech/help-wanted-ble/"&gt;Rubble: Help wanted solving our BLE stack problem&lt;/a&gt;. Rubble is a Bluetooth Low Energy compatible protocol stack for embedded Rust.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vorner/contrie/issues/3"&gt;contrie: Rayon support: FromParallelIterator &amp;amp; ParallelExtend&lt;/a&gt;. ConTrie is a concurrent hash-trie map &amp;amp; set.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;205 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-06-10..2019-06-17"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61398"&gt;Stabilize copy_within&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61347"&gt;Stabilize underscore_const_names in 1.37.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60376"&gt;Stabilize Option::xor&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61722"&gt;rustc: replace &lt;code&gt;TyCtxt&amp;lt;'a, 'gcx, 'tcx&amp;gt;&lt;/code&gt; with &lt;code&gt;TyCtxt&amp;lt;'gcx, 'tcx&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61817"&gt;Unify all uses of 'gcx and 'tcx&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61757"&gt;Deprecate ONCE_INIT in future 1.38 release&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60463"&gt;Implement RFC 2645 (transparent enums and unions)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60669"&gt;Allow attributes in formal function parameters&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61348"&gt;Implement Clone::clone_from for Option and Result&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61671"&gt;Implement nth_back for Range(Inclusive)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61568"&gt;Use Symbol, Span in libfmt_macros&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61698"&gt;typeck: Fix const generic in repeat param ICE&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61629"&gt;Hygienize macros in the standard library&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60730"&gt;Optimize matches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61143"&gt;When suggesting borrow, remove useless clones&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60793"&gt;lexer: Disallow bare CR in raw byte strings&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60187"&gt;Generator optimization: Overlap locals that never have storage live at the same time&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/776"&gt;Implement unchecked_{add,sub,mul} intrinsics&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/59752"&gt;Limit dylib symbols&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No issues are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="africa"&gt;Africa&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/dgqmbryzkbfb/"&gt;Jul  3. Johannesburg, ZA - Johannesburg Rust Meetup - informal discussions on topics related to the language&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Sydney/events/262194894/"&gt;Jun 24. Sydney, AU - Rust Sydney - Meetup 17&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Seoul-Meetup/events/srxvzqyzjbhc/"&gt;Jun 25. Seoul, KR - Seoul Rust Meetup, Hapjeong - Deep dive into Rusts standard library&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/2824830874225735/"&gt;Jun 29. Taipei, TW - Rust Taiwan Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/259480968/"&gt;Jul  1. Auckland, NZ - Rust AKL - WASM - Implementing a scalable omiscient debugger in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.connpass.com/event/133657/"&gt;Jul  7. Tokyo, JP - Tokyo Rust Meetup - Rust LT #6&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzjbjc/"&gt;Jun 26. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-language-milano/events/262155219"&gt;Jun 26. Milano, IT - Rust Language Milano - Fun with Rusty Robots&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rustlab.it/"&gt;Jun 28-29. Firenze, IT - RustLab 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpyzjbgc/"&gt;Jun 24. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmyzjbhc/"&gt;Jun 25. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Ann-Arbor-Rust-Meetup/events/vsncvqyzjbjc/"&gt;Jun 26. Ann Arbor, US - Ann Arbor Rust Meetup - Monthly Gathering&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzjbjc/"&gt;Jun 26. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/kkzkxqyzkbfb/"&gt;Jul  3. Atlanta, GA, US - Grab a beer with fellow Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/mffbtpyzkbfb/"&gt;Jul  3. Indianapolis, IN, US - Indy.rs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;No quote was selected for QotW.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/c2mbim/this_week_in_rust_291/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 18 Jun 2019 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2019-06-18:blog/2019/06/18/this-week-in-rust-291/</guid></item><item><title>This Week in Rust 290</title><link>https://this-week-in-rust.org/blog/2019/06/11/this-week-in-rust-290/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/sealed-rust-the-pitch/"&gt;Sealed Rust - A plan to bring Rust to safety critical software domains&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-embedded.github.io/blog/embedded-rust-in-2019/"&gt;Embedded WG: Embedded Rust in 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nannou.cc/posts/nannou_v0.9"&gt;Nannou update - Vulkan, LASERs and more&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Bzip2-Revival-2019"&gt;Bzip2 to see revival under new maintainership, experimental porting to Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gill.net.in/posts/auth-microservice-rust-actix-web1.0-diesel-complete-tutorial/"&gt;Auth web microservice with Rust using actix-web 1.0 - complete tutorial&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/bzkhmt/how_to_use_gtkrs_on_windows_using_the_msvc/"&gt;How to use gtk-rs on Windows using the MSVC toolchain&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ly.lee/hosting-embedded-rust-apps-on-apache-mynewt-with-stm32-blue-pill-c86b119fe5f?sk=f58f4cf6c608fded4b354063e474a93b"&gt;Hosting embedded Rust apps on Apache Mynewt with STM32 Blue Pill&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://estada.ch/2019/6/7/rusts-hidden-talents/"&gt;Speeding up builds and managing versions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/uom"&gt;uom&lt;/a&gt;, Units of measurement is a crate that does automatic type-safe zero-cost dimensional analysis. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/562"&gt;ehsanmok&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/oezgurmakkurt/blasoxide/issues/3"&gt;blasoxide: Add more tests for level2 and level3&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;242 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-06-03..2019-06-10"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61620"&gt;Stabilize Cell::from_mut and as_slice_of_cells&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61229"&gt;Stabilize #![feature(repr_align_enum)] in Rust 1.37.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/57428"&gt;Implementation of RFC 2289 (associated_type_bounds)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6869"&gt;Import the cargo-vendor subcommand into Cargo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60932"&gt;Support ? Kleene macro operator in 2015&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61130"&gt;Add std::mem::take as suggested in #61129&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61209"&gt;Make tuple constructors real const fns&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61669"&gt;syntax: Remove &lt;code&gt;Deref&lt;/code&gt; impl from &lt;code&gt;Token&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61635"&gt;Make &lt;code&gt;i*::signum&lt;/code&gt; a &lt;code&gt;const fn&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61646"&gt;Remove useless allocations in macro_rules follow logic&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61660"&gt;Minimize use of &lt;code&gt;#![feature(custom_attribute)]&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61616"&gt;parser: Remove &lt;code&gt;Deref&lt;/code&gt; impl from &lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61554"&gt;Change visit api&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61536"&gt;Don't allow using const fn arguments as "args_required_const"&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61532"&gt;Support Rvalue::{Ref,Len} and Deref&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61454"&gt;Fix integer overflow in rotate_left&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61446"&gt;On TerminatorKind::DropAndReplace still handle unused_mut correctly&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61408"&gt;Use LLVM intrinsics for floating-point min/max&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61407"&gt;Add new diagnostic writer using annotate-snippet library&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61376"&gt;Add Bound::cloned()&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/59331"&gt;Refactor &lt;code&gt;TypeVariableOrigin&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/59600"&gt;Replace linear token counting macros with optimized implementation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61444"&gt;Suggest using &lt;code&gt;as_ref&lt;/code&gt; on &lt;code&gt;*const T&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61413"&gt;Re-implement async fn drop order lowering&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61541"&gt;syntax: Keep token span as a part of &lt;code&gt;Token&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/issues/1428"&gt;Expose the type_name intrinsic&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61547"&gt;Support &lt;code&gt;cfg&lt;/code&gt; and &lt;code&gt;cfg_attr&lt;/code&gt; on generic parameters&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61347"&gt;Stabilize underscore_const_names in 1.37.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61268"&gt;Stabilize support for Profile-guided Optimization&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2708"&gt;Generic Pointer to Field&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/mad-rs/events/262191938/"&gt;Jun 15. Chennai, IN - Rust Chennai - Monthly meetup - June&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Seoul-Meetup/events/srxvzqyzjbhc/"&gt;Jun 25. Seoul, KR - Seoul Rust Meetup, Hapjeong - Deep dive into Rusts standard library&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-London-User-Group/events/262000795/"&gt;Jun 18. London, UK - Rust London User Group - LDN Talks June 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzjbjc/"&gt;Jun 26. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-language-milano/events/262155219"&gt;Jun 26. Milano, IT - Rust Language Milano - Fun with Rusty Robots&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rustlab.it/"&gt;Jun 28-29. Firenze, IT - RustLab 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/261595821/"&gt;Jun 13. San Diego, CA, US - San Diego Rust May Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/261239650"&gt;Jun 13. Arlington, VA, US - Rust DC — Mid-month Rustful&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dbcfrpyzjbrb/"&gt;Jun 13. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/262109363"&gt;Jun 13. Lehi, UT, US - Utah Rust - Meetup #13: Serde, Serde, and More Serde&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Boulder-Denver/events/259124426/"&gt;Jun 18. Denver, CO, US - Rust Boulder/Denver - Rust Meetup for June&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-MX/events/261739565/"&gt;Jun 19. Mexico City, MX - Rust MX - Reunión junio: Hablemos de Fuchsia OS y WebAssembly&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpyzjbgc/"&gt;Jun 24. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmyzjbhc/"&gt;Jun 25. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Ann-Arbor-Rust-Meetup/events/vsncvqyzjbjc/"&gt;Jun 26. Ann Arbor, US - Ann Arbor Rust Meetup - Monthly Gathering&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzjbjc/"&gt;Jun 26. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;No quote was selected for QotW.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/bzqagg/this_week_in_rust_290/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 11 Jun 2019 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2019-06-11:blog/2019/06/11/this-week-in-rust-290/</guid></item><item><title>This Week in Rust 289</title><link>https://this-week-in-rust.org/blog/2019/06/04/this-week-in-rust-289/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://os.phil-opp.com/status-update/2019-06-03/"&gt;Writing an OS in Rust: Updates in May 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-lang.github.io/unsafe-code-guidelines/"&gt;Unsafe Code Guidelines Reference now available online&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actix/actix-web/blob/master/CHANGES.md"&gt;Actix-web 1.0 released&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://astonbitecode.github.io/blog/post/j4rs_0.6.0/"&gt;j4rs - calling Java code from Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/06/03/governance-wg-announcement.html"&gt;The Governance WG is going public&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.gnome.org/~federico/blog/bzip2-in-rust-basic-infra.html"&gt;Bzip2 in Rust - basic infrastructure and CRC32 computation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amethyst.rs/posts/evoli-an-official-amethyst-showcase-game"&gt;Evoli - an official Amethyst showcase game&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://svartalf.info/posts/2019-05-31-poking-the-macos-io-kit-with-rust/"&gt;Poking the macOS IO Kit with Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/calebwin/emu"&gt;emu&lt;/a&gt;, a Rust-based language for programming GPUs. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/561"&gt;Caleb Winston&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6967#issuecomment-497764185"&gt;Cargo: Less duplication in activate&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;283 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-05-27..2019-06-03"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/57967"&gt;Introduce Rust symbol mangling scheme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61389"&gt;Remove &lt;code&gt;GlobalArenas&lt;/code&gt; and use &lt;code&gt;Arena&lt;/code&gt; instead&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60967"&gt;Short circuit &lt;code&gt;Send&lt;/code&gt; and &lt;code&gt;Sync&lt;/code&gt; impls for &lt;code&gt;TokenTree&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61374"&gt;Explicitly suggest &lt;code&gt;type_ascription&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61331"&gt;Recover gracefully from argument with missing type or param name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61147"&gt;When encountering move error on an &lt;code&gt;Option&lt;/code&gt;, suggest using &lt;code&gt;as_ref&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61140"&gt;Reword malformed attribute input diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61100"&gt;Apply &lt;code&gt;#[must_use]&lt;/code&gt; lint to components of tuples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/748"&gt;miri: Tag static/const allocations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61384"&gt;Update LLVM to include fmin/fmax optimisations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61364"&gt;Stabilize &lt;code&gt;reverse_bits&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61363"&gt;Stabilize &lt;code&gt;iter_nth_back&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60850"&gt;Stabilize &lt;code&gt;RefCell::try_borrow_unguarded&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60766"&gt;&lt;code&gt;Weak::into_raw&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/58975"&gt;Implement &lt;code&gt;iter::Sum&lt;/code&gt; and &lt;code&gt;iter::Product&lt;/code&gt; for &lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60542"&gt;Add &lt;code&gt;Step::sub_usize&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61157"&gt;&lt;code&gt;BufReader&lt;/code&gt;: In Seek impl, remove extra discard_buffer call&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60549"&gt;Do not print panic message on doctest failures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6980"&gt;cargo: Test the Resolver against the varisat Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2678"&gt;RFC 2678: Named custom cargo profiles&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/43038"&gt;Tracking issue for RFC 1789: Conversions from &lt;code&gt;&amp;amp;mut T&lt;/code&gt; to &lt;code&gt;&amp;amp;Cell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61398"&gt;Stabilize copy_within&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61268"&gt;Stabilize support for Profile-guided Optimization&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61229"&gt;Stabilize &lt;code&gt;#![feature(repr_align_enum)]&lt;/code&gt; in Rust 1.37.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61130"&gt;Add std::mem::take as suggested in #61129&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60932"&gt;Support ? Kleene macro operator in 2015&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2706"&gt;Get type of an arbitrary expression&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2707"&gt;Make &lt;code&gt;..&lt;/code&gt; a pattern syntactically&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2705"&gt;Amend RFC2603 to allow mangled identifiers to start with a digit&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/259480660/"&gt;Jun 10. Auckland, NZ - Rust AKL - WASM - the past, present and future&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Melbourne/events/261628621/"&gt;Jun 12. Melbourne, AU - Rust Melbourne meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wroclaw/events/261283360/"&gt;Jun  6. Wroclaw, PL - Rust Wroclaw Meetup #11&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzjbqb/"&gt;Jun 12. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-detroit/events/244855856/"&gt;Jun 11. Detroit, MI, US - Detroit Rust - June Detroit Rust at Bamboo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/nzfspqyzjbpb/"&gt;Jun 11. Redmond, WA, US - Seattle Rust Meetup - Monthly meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/BostonRust/events/260834642/"&gt;Jun 12. Boston, MA, US - Boston Rust Meetup at MassRobotics&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/261595821/"&gt;Jun 13. San Diego, CA, US - San Diego Rust May Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/261239650"&gt;Jun 13. Arlington, VA, US - Rust DC — Mid-month Rustful&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dbcfrpyzjbrb/"&gt;Jun 13. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzjbqb/"&gt;Jun 12. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Boulder-Denver/events/259124426/"&gt;Jun 18. Denver, CO, US - Rust Boulder/Denver - Rust Meetup for June&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-MX/events/261739565/"&gt;Jun 19. Mexico City, MX - Rust MX - Reunión junio: Hablemos de Fuchsia OS y WebAssembly&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://3dsig.com/positions/software-engineer/"&gt;Software Engineer at 3DSignals, Kfar Saba, IL&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;apparently I wrote Building Git to explain a complex problem to rust devs who could then help me build it in rust&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://twitter.com/mountain_ghosts/status/1134739348593827841"&gt;/dev/horse @ jsconf eu (mountain_ghosts) on twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/656"&gt;Dos Moonen&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/bx3gqx/this_week_in_rust_289/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 04 Jun 2019 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2019-06-04:blog/2019/06/04/this-week-in-rust-289/</guid></item></channel></rss>