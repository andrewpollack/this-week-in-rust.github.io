<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>This Week in Rust - This Week in Rust</title><link href="https://this-week-in-rust.org/" rel="alternate"></link><link href="https://this-week-in-rust.org/categories/this-week-in-rust/atom.xml" rel="self"></link><id>https://this-week-in-rust.org/</id><updated>2022-11-09T00:00:00-05:00</updated><entry><title>This Week in Rust 468</title><link href="https://this-week-in-rust.org/blog/2022/11/09/this-week-in-rust-468/" rel="alternate"></link><published>2022-11-09T00:00:00-05:00</published><updated>2022-11-09T00:00:00-05:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2022-11-09:/blog/2022/11/09/this-week-in-rust-468/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2022/11/03/Rust-1.65.0.html"&gt;Announcing Rust 1.65.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2022/11/07/changelog-154.html"&gt;rust-analyzer changelog #154&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2022/11/07/changelog-182.html"&gt;IntelliJ Rust Changelog #182&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-osdev.com/this-month/2022-10/"&gt;This Month in Rust OSDev: October 2022 | Rust OSDev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fyrox.rs/blog/post/twif/"&gt;This Week in Fyrox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dwrensha.github.io/capnproto-rust/2022/11/03/0.15-release.html"&gt;Cap'n Proto - Generic Associated Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Byron/gitoxide/discussions/579"&gt;Gitoxide - Cloning the Linux kernel in under a minute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/news/this-week-in-fluvio-0048/"&gt;This week in Fluvio #48: The programmable streaming platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wishawa.github.io/posts/thread-scoped-async/"&gt;Scoped threads in Rust, and why its async counterpart would be unsound&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/34-must-know-terms-for-embedded-rust-newbies"&gt;34 Must Know Terms for Embedded Rust Newbies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cohost.org/myrrlyn/post/197200-what-if-pointer-prop"&gt;what if pointer properties were in the rust type system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vgel.me/posts/mmap-arena-alloc/"&gt;mmap(1Tb): A Rust arena allocator (ab)using Linux overcommit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oG-JshUmkuA"&gt;Contributing to Rust: Bootstrapping the Rust Compiler (rustc)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wired.com/story/rust-secure-programming-language-memory-safe/"&gt;The ‘Viral’ Secure Programming Language That’s Taking Over Tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[FR] &lt;a href="https://lafor.ge/rust/move/"&gt;Rust par le Métal : move, clone, copy&lt;/a&gt; (series)&lt;/li&gt;
&lt;li&gt;[FR] &lt;a href="https://lafor.ge/rust/annex_bases/"&gt;Rust par le Métal (Annexe) : Les bases de nombres&lt;/a&gt; (series)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://betterprogramming.pub/tauri-vs-electron-for-tray-apps-ed15974f35ce"&gt;Tauri vs. Electron for Tray Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@shyamsundarb/running-rust-in-aws-lambda-with-sam-part-1-2b7a6963a2ef"&gt;Running Rust in AWS Lambda with SAM — Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://heikoseeberger.de/2022/10/23/2022-10-23-tower-2/"&gt;Tower, Episode 2: calling a Tower Service &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://konghq.com/blog/writing-an-ebpf-xdp-load-balancer-in-rust"&gt;Writing an eBPF/XDP Load-Balancer in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/CrockAgile/09065649ae5a52629599ebc5645922d6"&gt;Floating Point Arcade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=UkfO5KBFSpY"&gt;Cost-Efficient Rust in Practice, Rust Tokyo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@adetaylor/can-rust-wrapped-c-offer-stability-and-performance-benefits-e140b7ca1ba9"&gt;Can Rust-wrapped C++ offer performance and stability benefits?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.lynx.com/press-releases/rust-compiler-support"&gt;Lynx Joins AdaCore and Ferrous Systems to Bring Rust to Embedded Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=U-5_bumwH9w"&gt;RUST 1.65 - let-else statements - new language feature!!!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=GtRo-eF8-TE"&gt;The Rust Programming Language for Game Tooling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=Xw9loUatF7k"&gt;Bencher—Catch Performance Regressions in CI @ Rust DC, September 20, 2022 w/ Everett Pompeii&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=UgQUvD9gyMk"&gt;Impractical Rust: The HATETRIS World Record @ Rust DC, October 18, 2022 w/Dave Freiberg+Felipe Suero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/news/Programmiersprache-Rust-1-65-fuehrt-Generic-Associated-Types-ein-7329903.html"&gt;Programmiersprache Rust 1.65 führt Generic Associated Types ein&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/hintergrund/Ferris-Talk-12-Web-APIs-mit-Rust-erstellen-7321340.html"&gt;Ferris Talk #12: Web-APIs mit Rust erstellen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/enum_delegate"&gt;enum_delegate&lt;/a&gt;, a crate to replace dynamic dispatch with enum dispatch.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1120"&gt;Devin Brite&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;!-- CFPs go here, use this format: * [project name - title of issue](link to issue) --&gt;
&lt;p&gt;&lt;a href="https://rust-fosdem.github.io"&gt;FOSDEM 2023 Rust devroom CFP&lt;/a&gt;&lt;/p&gt;
&lt;!-- * [ - ]() --&gt;

&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;396 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-10-31..2022-11-07"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103590"&gt;&lt;code&gt;(almost)&lt;/code&gt; always use &lt;code&gt;ObligationCtxt&lt;/code&gt; when dealing with canonical queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99801"&gt;&lt;code&gt;fix(generic_const_exprs):&lt;/code&gt;fix predicate inheritance for children of opaque types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103691"&gt;make cpp-like debuginfo type names for slices and str consistent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103217"&gt;track where diagnostics were created&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103496"&gt;&lt;code&gt;rustc_metadata&lt;/code&gt;: encode even less doc comments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103638"&gt;add &lt;code&gt;multivalue&lt;/code&gt; target feature to WASM target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103610"&gt;allow use of &lt;code&gt;-Clto=thin&lt;/code&gt; with &lt;code&gt;-Ccodegen-units=1&lt;/code&gt; in general&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103720"&gt;lint against usages of &lt;code&gt;struct_span_lint_hir&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103859"&gt;stable Lower lint level for &lt;code&gt;read_zero_byte_vec&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103749"&gt;reduce span of let else &lt;code&gt;irrefutable_let_patterns&lt;/code&gt; warning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103012"&gt;suggest use &lt;code&gt;..&lt;/code&gt; to fill in the rest of the struct fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103772"&gt;better error for &lt;code&gt;rustc_strict_coherence&lt;/code&gt; misuse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103621"&gt;correctly resolve Inherent Associated Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103986"&gt;don't silently eat label before block in block-like expr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103729"&gt;interpret: fix &lt;code&gt;align_of_val&lt;/code&gt; on packed types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84022"&gt;make &lt;code&gt;proc_macro_derive_resolution_fallback&lt;/code&gt; a hard error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103914"&gt;make &lt;code&gt;underscore_literal_suffix&lt;/code&gt; a hard error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/104038"&gt;normalize types when deducing closure signature from supertraits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2638"&gt;miri: implement condvars for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2641"&gt;miri: initOnce: synchronize with completion when already complete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103061"&gt;rewrite implementation of &lt;code&gt;#[alloc_error_handler]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103584"&gt;remove bounds check when array is indexed by enum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102458"&gt;stabilize the &lt;code&gt;instruction_set&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99943"&gt;implement &lt;code&gt;std::marker::Tuple&lt;/code&gt;, use it in &lt;code&gt;extern "rust-call"&lt;/code&gt; and &lt;code&gt;Fn&lt;/code&gt;-family traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2662"&gt;futures: do not require &lt;code&gt;Clone&lt;/code&gt; for &lt;code&gt;Shared::peek&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103681"&gt;libtest: run all tests in their own thread, if supported by the host&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103886"&gt;rustdoc: fix merge of attributes for reexports of local items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103690"&gt;rustdoc: make &lt;code&gt;Item::visibility&lt;/code&gt; computed on-demand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-bindgen/pull/2334"&gt;bindgen: add support for the &lt;code&gt;"C-unwind"&lt;/code&gt; ABI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-bindgen/pull/2329"&gt;bindgen: add the &lt;code&gt;--override-abi&lt;/code&gt; option&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-bindgen/pull/2330"&gt;bindgen: allow callback composition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-bindgen/pull/2266"&gt;bindgen: wrap unsafe function's bodies in unsafe blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9797"&gt;clippy: add &lt;code&gt;allow-print-in-tests&lt;/code&gt; config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9760"&gt;clippy: add new lint &lt;code&gt;let_underscore_future&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8744"&gt;clippy: extend &lt;code&gt;needless_collect&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9773"&gt;clippy: fix ICE in &lt;code&gt;redundant_allocation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9779"&gt;clippy: fix &lt;code&gt;unnecessary_join&lt;/code&gt; turbofish in suggest message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9743"&gt;clippy: improve &lt;code&gt;needless_lifetimes&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9705"&gt;clippy: move &lt;code&gt;needless_collect&lt;/code&gt; to nursery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9772"&gt;clippy: shrink &lt;code&gt;missing_&lt;/code&gt;{&lt;code&gt;safety&lt;/code&gt;, &lt;code&gt;errors&lt;/code&gt;, &lt;code&gt;panics&lt;/code&gt;}&lt;code&gt;_doc&lt;/code&gt; spans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13516"&gt;rust-analyzer: add "Convert match to &lt;code&gt;let-else&lt;/code&gt;" assist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13359"&gt;rust-analyzer: add config for inserting &lt;code&gt;must_use&lt;/code&gt; in &lt;code&gt;generate_enum_as_method&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/12991"&gt;rust-analyzer: extracted method from trait impl is placed in existing impl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13545"&gt;rust-analyzer: generalize reborrow hints as adjustment hints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13525"&gt;rust-analyzer: show signature help when calling generic types implementing &lt;code&gt;FnOnce&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13568"&gt;rust-analyzer: fix the length displayed for byte string literals with escaped newlines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13508"&gt;rust-analyzer: async trait method for &lt;code&gt;unnecessary_async&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13549"&gt;rust-analyzer: fix reference searching only accounting substrings instead of whole identifiers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13517"&gt;rust-analyzer: make custom expr prefix completions to understand refs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13454"&gt;rust-analyzer: fixed local shadowing the caller's argument issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13546"&gt;rust-analyzer: lower unsafety of fn pointer and fn item types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13435"&gt;rust-analyzer: migrate assists to format args captures, part 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13456"&gt;rust-analyzer: scip: generate symbols for local crates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;A relatively noisy week (most of those have been dropped below, and comments
left on GitHub), but otherwise a quiet one in terms of performance changes,
with essentially no significant changes occuring.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@simulacrum&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=822f8c22f540b12f296d844ad5bf39aaa47bfeb4&amp;amp;end=57d3c58ed6e0faf89a62411f96c000ffc9fd3937&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;822f8c2..57d3c58&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 Regressions, 2 Improvements, 3 Mixed; 3 of them in rollups
39 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-11-08.md"&gt;full report&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2947"&gt;crates.io token scopes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rfcs/pull/3283"&gt;RFC 3283: Backward compatible default features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rfcs/pull/3266"&gt;RFC: Rust SemVer 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: postpone] &lt;a href="https://github.com/rust-lang/rfcs/pull/3074"&gt;Add named path bases to cargo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3346"&gt;Create an Operational Semantics Team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3344"&gt;Add a &lt;code&gt;--compile-time-deps&lt;/code&gt; build flag to &lt;code&gt;cargo build&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3342"&gt;RFC: Anonymous Associated Types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2022-11-09 - 2022-12-07 🦀&lt;/p&gt;
&lt;h3&gt;Virtual&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-09 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/289052285/"&gt;&lt;strong&gt;Introduction to Rust Atomics&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-09 | Virtual (Darmstadt, DE) | &lt;a href="https://www.bettercode.eu/"&gt;betterCode&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust.bettercode.eu/"&gt;&lt;strong&gt;betterCode Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-09 | Virtual (Malaysia, MY) | &lt;a href="https://forms.gle/zWXcMDAnnibiL4ni9"&gt;Rust Malaysia&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/9Xj8H2EXTD"&gt;&lt;strong&gt;Rust Meetup November 2022 - a couple of lightning talks&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-10 | Virtual (Budapest, HU) | &lt;a href="https://www.meetup.com/hwswfree/"&gt;HWSW free!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/hwswfree/events/289044458/"&gt;&lt;strong&gt;RUST! RUST! RUST! meetup (online formában!)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-10 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/hlvbvsydcpbnb/"&gt;&lt;strong&gt;Rust Nürnberg online #19&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-12 | Virtual | &lt;a href="https://gamedev.rs/"&gt;Rust GameDev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?q=https%3A%2F%2Fdiscord.gg%2FyNtPTb2&amp;amp;sa=D&amp;amp;ust=1666661760000000&amp;amp;usg=AOvVaw13uHY9m-8bJJwgeP58VS8l"&gt;&lt;strong&gt;Rust GameDev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-15 | Virtual (Nairobi, KE / New York, NY, US)| &lt;a href="https://www.meetup.com/data-umbrella-africa2/"&gt;Data Umbrella Africa&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/data-umbrella-africa2/events/289308825/"&gt;&lt;strong&gt;Online: Introduction to Rust Programming&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/data-umbrella/events/289308172/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-15 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc//"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/289015883/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-16 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/tqvhxsydcpbvb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-17 | Virtual (Amsterdam, NL) | &lt;a href="https://www.meetup.com/itgilde-cooperatie-amsterdam-unix-linux-meetups"&gt;ITGilde Tech-Talks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/itgilde-cooperatie-amsterdam-unix-linux-meetups/events/289167373/"&gt;&lt;strong&gt;Introduction “Rust” an ITGilde Tech Talk delivered by Pascal van Dam&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-17 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/qtvtvsydcpbwb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-21 | Virtual (Paris, FR) | &lt;a href="https://www.meetup.com/meetup-paris-ecole-superieur-du-genie-informatique"&gt;Meetup Paris - École Supérieure de Génie Informatique (ESGI)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/meetup-paris-ecole-superieur-du-genie-informatique/events/289112753/"&gt;&lt;strong&gt;Découverte de WebAssembly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-22 | Virtual (Berlin, DE) | &lt;a href="https://berline.rs/"&gt;Berlin.rs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://berline.rs/2022/11/22/rust-hack-and-learn.html"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-24 | Virtual (Linz, AT) | &lt;a href="https://www.meetup.com/rust-linz/"&gt;Rust Linz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-linz/events/289251460/"&gt;&lt;strong&gt;Rust Meetup Linz - 27th Edition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-29 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsydcpbmc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-30 | Virtual (Munich, DE) | &lt;a href="https://www.meetup.com/rust-munich/"&gt;Rust Munich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-munich/events/289065390/"&gt;&lt;strong&gt;Rust Munich 2022 / 3 - hybrid&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-12-01 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/289563986/"&gt;&lt;strong&gt;Exploring USB with Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-12-06 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/hlgvxsydcqbjb/"&gt;&lt;strong&gt;Buffalo Rust User Group, First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-12-07 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/287027660/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-15 | Tampere, FI | &lt;a href="https://www.rust-finland.org/"&gt;Rust Finland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.lyyti.fi/reg/Finland_Rustlang_Group_meetup_2564"&gt;&lt;strong&gt;Rust Meetup in Tampere&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-16 | Paris, FR | &lt;a href="https://www.eventbrite.fr/o/stockly-42274765293"&gt;Stockly&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.fr/e/rust-meetup-in-paris-hosted-by-stockly-tickets-444152621447?aff=ebdssbdestsearch"&gt;&lt;strong&gt;Rust Meetup in Paris - hosted by Stockly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-23 | Bratislava, SK | &lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/"&gt;Bratislava Rust Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/events/289028178/"&gt;&lt;strong&gt;Initial Meet and Greet Rust meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-24 | København, DK | &lt;a href="https://cph.rs/"&gt;Copenhagen Rust Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/events/288179132/"&gt;&lt;strong&gt;Hack Night #31&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-30 | Amsterdam, NL | &lt;a href="https://www.meetup.com/rust-nederland/"&gt;Rust Nederland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/289204146/"&gt;&lt;strong&gt;Rust in Critical Infrastructure&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-30 | Lille, FR | &lt;a href="https://www.meetup.com/meetup-group-zgphbyet"&gt;Rust Lille&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/meetup-group-zgphbyet/events/289620614/"&gt;&lt;strong&gt;Rust Lille #1&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-30 | Munich, DE + Virtual | &lt;a href="https://www.meetup.com/rust-munich/"&gt;Rust Munich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-munich/events/289065390/"&gt;&lt;strong&gt;Rust Munich 2022 / 3 - hybrid&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-10 | Columbus, OH, US | &lt;a href="https://www.meetup.com/columbus-rs/events/"&gt;Columbus Rust Society&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrydcpbnb/"&gt;&lt;strong&gt;Monthly Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-15 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/wjkjssydcpbtb/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-29 | Austin, TX, US | &lt;a href="https://www.meetup.com/atx-rustaceans/"&gt;ATX Rustaceans&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/atx-rustaceans/events/289594614/"&gt;&lt;strong&gt;Atx Rustaceans Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-12-01 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/dsbpxsydcpbgc/"&gt;&lt;strong&gt;Utah Rust meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Oceania&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-09 | Sydney, NSW, AU | &lt;a href="https://www.meetup.com/rust-sydney/"&gt;Rust Sydney&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-sydney/events/289061840/"&gt;&lt;strong&gt;RustAU Sydney - Last physical for 2022 !&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-22 | Canberra, ACT, AU | &lt;a href="https://www.meetup.com/rust-canberra/"&gt;Canberra Rust User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-canberra/events/288615873/"&gt;&lt;strong&gt;November Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;h2&gt;Jobs&lt;/h2&gt;
&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/ymepy8/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Meanwhile the Rust shop has covers on everything and tag-out to even change settings of the multi-axis laser cutter, but you get trusted with said laser cutter on your first day, and if someone gets hurt people wonder how to make the shop safer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://www.reddit.com/r/rust/comments/yo6ju6/comment/ivdxbdw"&gt;masklinn on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1329"&gt;Anton Fetisov&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/yr1z35/this_week_in_rust_468/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</content><category term="This Week in Rust"></category></entry><entry><title>This Week in Rust 467</title><link href="https://this-week-in-rust.org/blog/2022/11/02/this-week-in-rust-467/" rel="alternate"></link><published>2022-11-02T00:00:00-04:00</published><updated>2022-11-02T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2022-11-02:/blog/2022/11/02/this-week-in-rust-467/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2022/10/28/gats-stabilization.html"&gt;Generic associated types to be stable in Rust 1.65&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Foundation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/project-grants-application-deadline-extended-to-november-7-2022/"&gt;Project Grants Application Deadline Extended to November 7, 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/q3-2022-update-a-recap-from-rebecca-rumb/"&gt;Q3 2022 Recap: A summary from Rebecca Rumbul&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tokio.rs/blog/2022-10-announcing-async-backtrace"&gt;Announcing async-backtrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seanmonstar.com/post/699744578823127040/this-month-in-hyper-october-2022"&gt;This Month in hyper: October 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2022/10/31/changelog-153.html"&gt;rust-analyzer changelog #153&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.antoyo.xyz/rustc_codegen_gcc-progress-report-17"&gt;rustc_codegen_gcc: Progress Report #17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://model-checking.github.io/kani-verifier-blog/2022/10/27/using-kani-with-the-bolero-property-testing-framework.html"&gt;From Fuzzing to Proof: Using Kani with the Bolero Property-Testing Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coreylowman.github.io/2022/10/30/release-0.10.0.html"&gt;dfdx v0.10.0 - deep learning now with even more const generic goodness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sea-ql.org/blog/2022-10-31-whats-new-in-seaquery-0.27.0/"&gt;SeaQuery 0.27.0 - A dynamic query builder for SeaORM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slint-ui.com/thisweek/2022-10-31.html"&gt;Slint 0.3.1 - GUI framework in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://agile-perception.ghost.io/headtail-head-tail-simultaneously/"&gt;headtail: head &amp;amp; tail simultaneously, written in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ncameron.org/blog/mini-post-the-role-of-rusts-teams/"&gt;Mini-post: the role of Rust's teams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.m-ou.se/rust-standard/"&gt;Do we need a "Rust Standard"?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swatinem.de/blog/fix-rustdoc/"&gt;Rustdoc doctests need fixing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cohost.org/oli-obk/post/148312-ranged-integers"&gt;Ranged integers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cohost.org/oli-obk/post/165584-ranged-integers-via"&gt;Ranged integers via subtypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://morestina.net/blog/1843/the-stable-hashmap-trap"&gt;The stable HashMap trap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yoshuawuyts.com/const-syntax/"&gt;Const Syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nnethercote.github.io/2022/10/27/how-to-speed-up-the-rust-compiler-in-october-2022.html"&gt;How to speed up the Rust compiler in October 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kobzol.github.io/rust/rustc/2022/10/27/speeding-rustc-without-changing-its-code.html"&gt;Speeding up the Rust compiler without changing its code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/weborama/introduction-to-the-rust-programming-language-4dbf8f3016de"&gt;Exploring technologies at Weborama: The Rust language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kurtlawrence.info/blog/lock-free-webserver-using-channels-in-rust"&gt;Lock-free webserver using channels in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=rOFlUvMfOHQ"&gt;A Cellular Automaton with Rust and Bevy - Diemo Heuer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=7igpsgCZJY4"&gt;AMD Hypervisor with Rust - Matthias Heiden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=DEE1GKMbtgw"&gt;Boxes, Heaps, and Stacks - Tim McNamara&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=IgC2HvBesms"&gt;Rustberry Pi: Baby-steps in Embedded Rust - Lisa Passing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=jB7aJDAvSuo"&gt;Workshop: Rust for Artists - Lisa Passing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=z78_RnUPnpY"&gt;Intro to Tower and the Service Trait - Stefan Baumgartner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=q8irLfXwaFM"&gt;Rust Before Main - Ryan Levick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://fasterthanli.me/videos/how-does-the-detour-crate-work"&gt;How does the detour crate work?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://geo-ant.github.io/blog/2022/implementing-parallel-iterators-rayon/"&gt;Implementing Rayon’s Parallel Iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://heikoseeberger.de/2022/10/21/2022-10-21-tower-1/"&gt;Tower, Episode 1: your Service as a Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/rust-microservices-server-side-webassembly/"&gt;Rust microservices in server-side WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/4-simple-steps-for-creating-a-platform-agnostic-driver-in-rust"&gt;4 Simple Steps for Creating a Platform Agnostic Driver in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=P5lab7t1hVM"&gt;Work on gpu library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://geeklaunch.net/blog/fathomable-rust-macros/"&gt;Fathomable Rust Macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.greyblake.com/blog/property-based-testing-in-rust-with-arbitrary/"&gt;Property-Based Testing in Rust with Arbitrary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2210.12996"&gt;Static Information Flow Control Made Simpler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2211.00111"&gt;Unsafe's Betrayal: Abusing Unsafe Rust in Binary Reverse Engineering toward Finding Memory-safety Bugs via Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.golem.de/news/programmierung-rust-koennte-offizielle-spezifikation-bekommen-2210-169286.html"&gt;Rust könnte offizielle Spezifikation bekommen&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[video] &lt;a href="https://www.youtube.com/watch?v=bT2SeYXpQm8"&gt;Programming Veloren - the multiplayer voxel RPG written in Rust&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/type_description"&gt;type_description&lt;/a&gt;, a crate to make types discoverable for users by explaining them in a way that a user can understand without knowing implementation details.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1119"&gt;musicmatze&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;!-- CFPs go here, use this format: * [project name - title of issue](link to issue) --&gt;
&lt;!-- * [ - ]() --&gt;

&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;433 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-10-24..2022-10-31"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102689"&gt;add a tier 3 target for the Sony PlayStation 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103544"&gt;add flag to forbid recovery in the parser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93582"&gt;allow &lt;code&gt;impl Fn() -&amp;gt; impl Trait&lt;/code&gt; in return position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102721"&gt;prevent foreign Rust exceptions from being caught&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103140"&gt;add diagnostic for calling a function with the same name with unresolved Macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103283"&gt;add suggestions for unsafe impl error codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103350"&gt;change terminology for assoc method suggestions when they are not called&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103209"&gt;diagnostic derives: allow specifying multiple alternative suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103550"&gt;diagnostics: do not suggest static candidates as traits to import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103609"&gt;emit a nicer error on &lt;code&gt;impl Self {&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103699"&gt;emit proper error when casting to &lt;code&gt;dyn*&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/97971"&gt;enable varargs support for calling conventions other than C or cdecl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103035"&gt;even nicer errors from &lt;code&gt;assert_unsafe_precondition&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103415"&gt;filter candidates in pick probe for diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103338"&gt;fix &lt;code&gt;unreachable_pub&lt;/code&gt; suggestion for enum with fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103416"&gt;name the &lt;code&gt;impl Trait&lt;/code&gt; in region bound suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103608"&gt;remap early bound lifetimes in return-position &lt;code&gt;impl Trait&lt;/code&gt; in traits too&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103444"&gt;remove extra type error after missing semicolon error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103689"&gt;libtest: do fewer passes and generally be more efficient when filtering tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99939"&gt;libtest: sort tests at compile time, not at startup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102951"&gt;suggest type annotation for local statement initialed by ref expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2624"&gt;miri: implement &lt;code&gt;ptr_mask&lt;/code&gt; intrinsic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2630"&gt;miri: implement thread parking for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2636"&gt;miri: stacked Borrows:  make scalar field retagging the default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2631"&gt;miri: support timeouts with monotonic clocks even when isolation is enabled&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2621"&gt;miri: test on windows-gnu target&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103331"&gt;use &lt;code&gt;br&lt;/code&gt; instead of &lt;code&gt;switch&lt;/code&gt; in more cases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103158"&gt;perf improvements for effective visibility calculating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102698"&gt;introduce UnordMap, UnordSet, and UnordBag (MCP 533)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103549"&gt;llvm-16: don't initialize removed legacy passes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc_codegen_gcc/pull/232"&gt;codegen_gcc: add missing register class conversion for inline asm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc_codegen_gcc/pull/238"&gt;codegen_gcc: fix gcc build instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102961"&gt;make &lt;code&gt;CStr::from_ptr&lt;/code&gt; &lt;code&gt;const&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/100006"&gt;make &lt;code&gt;core::mem::copy&lt;/code&gt; &lt;code&gt;const&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102737"&gt;&lt;code&gt;poll_fn&lt;/code&gt; and Unpin:  fix pinning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98204"&gt;stabilize &lt;code&gt;Option::unzip()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/95710"&gt;stabilize &lt;code&gt;arbitrary_enum_discriminant,&lt;/code&gt; take 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102271"&gt;stabilize &lt;code&gt;duration_checked_float&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/portable-simd/pull/287"&gt;simd: vectors of pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/1341"&gt;stdarch: fix undefined behavior in SSE4.2 test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11292"&gt;cargo: add Accept-Encoding request header to enable compression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11283"&gt;cargo: fix confusing error messages when using &lt;code&gt;-Zsparse-registry&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11280"&gt;cargo: improve the error message if &lt;code&gt;publish&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; or empty list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11270"&gt;cargo: report crate size on package and publish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103746"&gt;rustdoc: add support for incoherent impls on structs and traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103254"&gt;rustdoc: do not filter out cross-crate &lt;code&gt;Self:  Sized&lt;/code&gt; bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103432"&gt;rustdoc: don't mark &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; as &lt;code&gt;Iterator&lt;/code&gt;, &lt;code&gt;Read&lt;/code&gt;, etc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9738"&gt;clippy: &lt;code&gt;bool_to_int_with_if&lt;/code&gt; do not lint in const context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9747"&gt;clippy: &lt;code&gt;option_if_let_else&lt;/code&gt; do not lint if any arm has guard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9722"&gt;clippy: &lt;code&gt;question_mark&lt;/code&gt; don't lint on &lt;code&gt;if let Err&lt;/code&gt; with &lt;code&gt;else&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9704"&gt;clippy: &lt;code&gt;use_self&lt;/code&gt; fix FP when trait impl defined in macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9726"&gt;clippy: &lt;code&gt;use_self&lt;/code&gt; fix suggestion when full path to struct was given&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9506"&gt;clippy: add lint for confusing use of &lt;code&gt;^&lt;/code&gt; instead of &lt;code&gt;.pow&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8437"&gt;clippy: add lint to tell about the &lt;code&gt;let else&lt;/code&gt; pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9667"&gt;clippy: add new lint &lt;code&gt;seek_to_start_instead_of_rewind&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9681"&gt;clippy: add new lint &lt;code&gt;seek_from_current&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9733"&gt;clippy: ensure &lt;code&gt;new_ret_no_self&lt;/code&gt; is not fired if &lt;code&gt;impl Trait&amp;lt;Self&amp;gt;&lt;/code&gt; is returned&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9714"&gt;clippy: fix &lt;code&gt;bool_to_int_with_if&lt;/code&gt; false positive with &lt;code&gt;if let&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9674"&gt;clippy: fix &lt;code&gt;needless_borrow&lt;/code&gt; false positive&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/rust-lang/rust-clippy/pull/9711"&gt;fix another &lt;code&gt;needless_borrow&lt;/code&gt; false positive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9741"&gt;clippy: fix the &lt;code&gt;string-extend-chars&lt;/code&gt; suggestion on slice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9692"&gt;clippy: make ignored internally mutable types for &lt;code&gt;mutable-key&lt;/code&gt; configurable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9728"&gt;clippy: move &lt;code&gt;uninlined_format_args&lt;/code&gt; to pedantic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9717"&gt;clippy: remove note mentioning configuration changes need cargo clean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9755"&gt;clippy: warn when &lt;code&gt;clippy::restriction&lt;/code&gt; is enabled via the command line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13510"&gt;rust-analyzer: clicking the status bar item stops and starts the server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13494"&gt;rust-analyzer: type inference for generic associated types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13523"&gt;rust-analyzer: disregard type variable expectation for if expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13476"&gt;rust-analyzer: don't respond with an error when requesting a shutdown while starting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13478"&gt;rust-analyzer: fix standard flycheck command not being executed in the workspace it is being invoked for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13475"&gt;rust-analyzer: test all generic args for trait when finding matching impl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;Noise continues to make triaging a bit tedious. We've become good at identifying noise, but we may need to invest in trying to reduce it or automate some of the triaging needed to identify it. In terms of performance, this week ending up being positive albeit with improvements only outweighing regressions by a little. Some of the largest improvements were in reverts of previous regressions as well.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=629a414d7ba4caa3ca28b0a46c478e2ecb4c0059&amp;amp;end=822f8c22f540b12f296d844ad5bf39aaa47bfeb4&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;629a414d..822f8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;(instructions:u)&lt;/th&gt;
&lt;th align="center"&gt;mean&lt;/th&gt;
&lt;th align="center"&gt;range&lt;/th&gt;
&lt;th align="center"&gt;count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;1.7%&lt;/td&gt;
&lt;td align="center"&gt;[0.2%, 7.9%]&lt;/td&gt;
&lt;td align="center"&gt;28&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Regressions ❌ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;1.7%&lt;/td&gt;
&lt;td align="center"&gt;[0.2%, 7.0%]&lt;/td&gt;
&lt;td align="center"&gt;97&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (primary)&lt;/td&gt;
&lt;td align="center"&gt;-1.2%&lt;/td&gt;
&lt;td align="center"&gt;[-4.6%, -0.2%]&lt;/td&gt;
&lt;td align="center"&gt;73&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Improvements ✅ &lt;br /&gt; (secondary)&lt;/td&gt;
&lt;td align="center"&gt;-1.3%&lt;/td&gt;
&lt;td align="center"&gt;[-2.6%, -0.3%]&lt;/td&gt;
&lt;td align="center"&gt;61&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;All ❌✅ (primary)&lt;/td&gt;
&lt;td align="center"&gt;-0.4%&lt;/td&gt;
&lt;td align="center"&gt;[-4.6%, 7.9%]&lt;/td&gt;
&lt;td align="center"&gt;101&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;13 Regressions, 9 Improvements, 5 Mixed; 9 of them in rollups
41 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-11-02.md"&gt;full report&lt;/a&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/issues/9507#issuecomment-1296058029"&gt;Have &lt;code&gt;cargo publish&lt;/code&gt; block until crate is published&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3327"&gt;Add lang-team advisors team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3324"&gt;Support upcasting of dyn Trait values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rfcs/pull/3267"&gt;Short Macro Invocation Syntax: m!123 and m!"abc"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2947"&gt;crates.io token scopes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/102944"&gt;Use &lt;code&gt;token::Lit&lt;/code&gt; in &lt;code&gt;ast::ExprKind::Lit&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/100386"&gt;Make &lt;code&gt;Sized&lt;/code&gt; coinductive, again&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/102470"&gt;Stabilize const char convert&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3340"&gt;Add &lt;code&gt;exhaustive_match_output&lt;/code&gt; RFC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3339"&gt;Update the RFC template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3338"&gt;Style evolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3336"&gt;MaybeDangling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2022-11-02 - 2022-11-30 🦀&lt;/p&gt;
&lt;h3&gt;Virtual&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-02 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsydcpbdb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-02 | Virtual (Redmond, WA, US / San Francisco, SF, US / New York, NY, US / Toronto, CA / London, UK) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/288475833/"&gt;&lt;strong&gt;Getting Started with Rust: From Java Dev to Rust Developer&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/288475838/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/288475839/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-toronto/events/288475836/"&gt;&lt;strong&gt;Toronto Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-london/events/288475832/"&gt;&lt;strong&gt;London Mirror&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-08 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/289211414/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-08 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/vndgwsydcpblb/"&gt;&lt;strong&gt;Second Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-08 | Virtual (Rostock, DE) | &lt;a href="https://www.meetup.com/altow-academy/"&gt;Altow Academy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/altow-academy/events/289352420/"&gt;&lt;strong&gt;Rust Meetup Rostock&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-08 | Virtual (Stockholm, SE) | &lt;a href="https://www.meetup.com/func-prog-sweden/"&gt;Func Prog Sweden&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/func-prog-sweden/events/288323896/"&gt;&lt;strong&gt;Tenth Func Prog Sweden MeetUp 2022 – Online (with "Ready for Rust" by Erik Dörnenburg)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-09 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/289052285/"&gt;&lt;strong&gt;Introduction to Rust Atomics&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-09 | Virtual (Darmstadt, DE) | &lt;a href="https://www.bettercode.eu/"&gt;betterCode&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust.bettercode.eu/"&gt;&lt;strong&gt;betterCode Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-09 | Virtual (Malaysia, MY) | &lt;a href="https://forms.gle/zWXcMDAnnibiL4ni9"&gt;Rust Malaysia&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/9Xj8H2EXTD"&gt;&lt;strong&gt;Rust Meetup November 2022 - a couple of lightning talks&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-10 | Virtual (Budapest, HU) | &lt;a href="https://www.meetup.com/hwswfree/"&gt;HWSW free!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/hwswfree/events/289044458/"&gt;&lt;strong&gt;RUST! RUST! RUST! meetup (online formában!)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-10 | Virtual (Nürnberg, DE) | &lt;a href="https://www.meetup.com/rust-noris/"&gt;Rust Nuremberg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/hlvbvsydcpbnb/"&gt;&lt;strong&gt;Rust Nürnberg online #19&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-12 | Virtual | &lt;a href="https://gamedev.rs/"&gt;Rust GameDev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?q=https%3A%2F%2Fdiscord.gg%2FyNtPTb2&amp;amp;sa=D&amp;amp;ust=1666661760000000&amp;amp;usg=AOvVaw13uHY9m-8bJJwgeP58VS8l"&gt;&lt;strong&gt;Rust GameDev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-15 | Virtual (Nairobi, KE / New York, NY, US)| &lt;a href="https://www.meetup.com/data-umbrella-africa2/"&gt;Data Umbrella Africa&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/data-umbrella-africa2/events/289308825/"&gt;&lt;strong&gt;Online: Introduction to Rust Programming&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/data-umbrella/events/289308172/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-15 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc//"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/289015883/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-16 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/tqvhxsydcpbvb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-17 | Virtual (Amsterdam, NL) | &lt;a href="https://www.meetup.com/itgilde-cooperatie-amsterdam-unix-linux-meetups"&gt;ITGilde Tech-Talks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/itgilde-cooperatie-amsterdam-unix-linux-meetups/events/289167373/"&gt;&lt;strong&gt;Introduction “Rust” an ITGilde Tech Talk delivered by Pascal van Dam&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-17 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/qtvtvsydcpbwb/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-21 | Virtual (Paris, FR) | &lt;a href="https://www.meetup.com/meetup-paris-ecole-superieur-du-genie-informatique"&gt;Meetup Paris - École Supérieure de Génie Informatique (ESGI)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/meetup-paris-ecole-superieur-du-genie-informatique/events/289112753/"&gt;&lt;strong&gt;Découverte de WebAssembly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-24 | Virtual (Linz, AT) | &lt;a href="https://www.meetup.com/rust-linz/"&gt;Rust Linz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-linz/events/289251460/"&gt;&lt;strong&gt;Rust Meetup Linz - 27th Edition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-29 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsydcpbmc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-30 | Virtual (Munich, DE) | &lt;a href="https://www.meetup.com/rust-munich/"&gt;Rust Munich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-munich/events/289065390/"&gt;&lt;strong&gt;Rust Munich 2022 / 3 - hybrid&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Asia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-08 | Bangkok, TH | &lt;a href="https://www.meetup.com/techatagoda/"&gt;Tech@Agoda&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/techatagoda/events/289329464/"&gt;&lt;strong&gt;Rustacean Bangkok 5.0.0&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-16 | Paris, FR | &lt;a href="https://www.eventbrite.fr/o/stockly-42274765293"&gt;Stockly&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eventbrite.fr/e/rust-meetup-in-paris-hosted-by-stockly-tickets-444152621447?aff=ebdssbdestsearch"&gt;&lt;strong&gt;Rust Meetup in Paris - hosted by Stockly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-23 | Bratislava, SK | &lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/"&gt;Bratislava Rust Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/events/289028178/"&gt;&lt;strong&gt;Initial Meet and Greet Rust meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-24 | København, DK | &lt;a href="https://cph.rs/"&gt;Copenhagen Rust Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/events/288179132/"&gt;&lt;strong&gt;Hack Night #31&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-30 | Amsterdam, NL | &lt;a href="https://www.meetup.com/rust-nederland/"&gt;Rust Nederland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nederland/events/289204146/"&gt;&lt;strong&gt;Rust in Critical Infrastructure&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-30 | Munich, DE + Virtual | &lt;a href="https://www.meetup.com/rust-munich/"&gt;Rust Munich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-munich/events/289065390/"&gt;&lt;strong&gt;Rust Munich 2022 / 3 - hybrid&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-10 | Columbus, OH, US | &lt;a href="https://www.meetup.com/columbus-rs/events/"&gt;Columbus Rust Society&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrydcpbnb/"&gt;&lt;strong&gt;Monthly Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-15 | San Francisco, CA, US | &lt;a href="https://www.meetup.com/san-francisco-rust-study-group/"&gt;San Francisco Rust Study Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/wjkjssydcpbtb/"&gt;&lt;strong&gt;Rust Hacking in Person&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Oceania&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-09 | Sydney, NSW, AU | &lt;a href="https://www.meetup.com/rust-sydney/"&gt;Rust Sydney&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-sydney/events/289061840/"&gt;&lt;strong&gt;RustAU Sydney - Last physical for 2022 !&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-22 | Canberra, ACT, AU | &lt;a href="https://www.meetup.com/rust-canberra/"&gt;Canberra Rust User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-canberra/events/288615873/"&gt;&lt;strong&gt;November Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;South America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-05 | São Paulo, SP, BR | &lt;a href="https://www.meetup.com/rust-sao-paulo-meetup/"&gt;Rust São Paulo Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-sao-paulo-meetup/events/289176073/"&gt;&lt;strong&gt;Rust-SP meetup Outubro 2022&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;h2&gt;Jobs&lt;/h2&gt;
&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/xldzbl/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm getting more convinced that Rust code is generally going to end up faster than C++ code every day I work on optimizations.&lt;/p&gt;
&lt;p&gt;Strong immutability and no-alias guarantees are a game-changer and we've only really begun to scratch the surface of what can be done.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://twitter.com/pcwalton/status/1585709621955526657?s=20&amp;amp;t=Ij5ODVKJERjZXOEh2Nzplg"&gt;Patrick Walton on twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;llogiq is exceedingly pleased with his suggestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/ykp3c9/this_week_in_rust_467/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</content><category term="This Week in Rust"></category></entry><entry><title>This Week in Rust 466</title><link href="https://this-week-in-rust.org/blog/2022/10/26/this-week-in-rust-466/" rel="alternate"></link><published>2022-10-26T00:00:00-04:00</published><updated>2022-10-26T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2022-10-26:/blog/2022/10/26/this-week-in-rust-466/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;
&lt;h3&gt;Foundation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/news/implementing-the-network-time-protocol-ntp-in-rust/"&gt;Implementing the Network Time Protocol (NTP) in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2022/10/24/changelog-152.html"&gt;rust-analyzer changelog #152&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2022/10/24/changelog-181.html"&gt;IntelliJ Rust Changelog #181&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://metalbear.co/blog/mirrord-3.0-is-out/"&gt;mirrord 3.0 is out!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Byron/gitoxide/discussions/564"&gt;gix credential and diffing with similar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gtk-rs.org/blog/2022/10/18/new-release.html"&gt;New release – gtk-rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zellij.dev/news/config-command-layouts/"&gt;Zellij 0.32.0: YAML =&amp;gt; KDL, actions through CLI, command panes and a new layout system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://santiagopastorino.com/2022/10/20/what-rpits-rpitits-and-afits-and-their-relationship"&gt;RPITs, RPITITs and AFITs and their relationship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/rust/2022/10/24/evaluating-build-scripts-in-the-intellij-rust-plugin/"&gt;Evaluating Build Scripts in the IntelliJ Rust Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.adacore.com/adding-ada-to-rust"&gt;Adding Ada to Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boa-dev.github.io/posts/2022-10-24-boa-usage/"&gt;Adding a JavaScript interpreter to your Rust project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.memorysafety.org/blog/rust-in-linux-just-the-beginning/"&gt;Rust in the Linux Kernel: Just the Beginning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwn.net/Articles/909887/"&gt;A deeper look into the GCC Rust front-end&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/the-http-crash-course-nobody-asked-for"&gt;The HTTP crash course nobody asked for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://belmoussaoui.com/blog/15-making-rust-attractive-for-writing-gtk-applications/"&gt;Making Rust attractive for writing GTK applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kentiklabs.com/blog/adventures-in-cross-compilation/"&gt;Adventures In Cross Compilation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rodrigodd.github.io/2022/10/21/bf_compiler-part1.html"&gt;Compiling Brainfuck code - Part 1: A Optimized Interpreter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/rust-embedded-graphics-with-the-max7219"&gt;Rust Embedded Graphics with the MAX7219&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexgaynor.net/2022/oct/23/buffers-on-the-edge/"&gt;Buffers on the edge: Python and Rust · Alex Gaynor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notado.substack.com/p/writing-better-integration-tests"&gt;Writing Better Integration Tests with RAII&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://morestina.net/blog/1827/multi-threaded-regex"&gt;Contention on multi-threaded regex matching&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.dzejkop.space/posts/serde-by-example-2.html"&gt;Serde by Example 2: OpenStreetMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://serokell.io/blog/enums-and-pattern-matching"&gt;Enums and Pattern Matching in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://imajindevon.hashnode.dev/rust-rocket-song-request-api"&gt;Creating a minimal RESTful song request API using Rocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gendignoux.com/blog/2022/10/24/rust-library-android.html"&gt;Compiling Rust libraries for Android apps: a deep dive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yoshuawuyts.com/inline-crates/"&gt;Inline Crates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ecton.dev/writing-a-hashmap-without-unsafe/"&gt;Writing a HashMap in Rust without unsafe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://woile.dev/posts/web-app-with-template-in-rust/"&gt;A Rust web app with HTML templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/nine-rules-for-creating-procedural-macros-in-rust-595aa476a7ff"&gt;Nine Rules for Creating Procedural Macros in Rust: Practical Lessons from anyinput, a New Macro for Easily Accepting String/Path/Iterator/Array-Like Inputs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[series] &lt;a href="https://freemasen.com/blog/sqlite-parser-pt4/index.html"&gt;Sqlite File Parser Pt 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tfpk.github.io/macrokata/"&gt;MacroKata: Rustlings style exercises for learning macros&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=y10jJX35shE"&gt;Web-native Rust apps (what will YOU build?)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=X7Dsu0oRk0U"&gt;Rapid Prototyping in Rust: Write fast like Python; Run fast like C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=GnrtYcqPOI8"&gt;Let our rusty crab explore the depths of the C by Yvan Sraka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=OAGuoKa1Gm8"&gt;Case Study: Rust in axle OS by Philip Tennen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=t996ZkbWnEs"&gt;Aya: Extending the Linux Kernel with eBPF and Rust by Michal Rostecki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=BbLGqTxTRp0"&gt;Building a Lightweight IR and Backend for YJIT / Maxime Chevalier-Boisvert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=TGxio7A0SfI"&gt;RustcContributor::explore: @compiler-errors session - RPITIT deep dive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oZa6UY9gzLw"&gt;Step-by-step guide to building a web-crawler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vLcoW408QvE"&gt;SQLx in 12 minutes - Rust + Actix Web + PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bbBh3oKibkE"&gt;Bevy Basics Scenes(re-upload)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://lib.rs/crates/humantime"&gt;humantime&lt;/a&gt;, a parser and formatter for &lt;code&gt;std::time::&lt;/code&gt;{&lt;code&gt;Duration&lt;/code&gt;, &lt;code&gt;SystemTime&lt;/code&gt;}.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1116"&gt;Aleksey Kladov&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/zerocopy/issues/85"&gt;zerocopy - Optimize caching in CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22%2CHacktoberfest%2CE-Easy%2C%22good+first+issue%22+no%3Aassignee"&gt;boa - hacktoberfest issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boa-dev/boa/issues?q=is%3Aissue+is%3Aopen+panic+no%3Aassignee"&gt;boa - bugs that cause boa to panic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3739"&gt;Ockam - Show "help" output when no args passed on subscription show clap command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3701"&gt;Ockam - Add argument to node create clap command to terminate on EOF on STDIN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3742"&gt;Ockam - Extract duplicated code into a shared helper function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;398 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-10-17..2022-10-24"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103092"&gt;linker: fix weak lang item linking with combination windows-gnu + LLD + LTO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101293"&gt;recover when unclosed char literal is parsed as a lifetime in some positions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103239"&gt;allow &lt;code&gt;#[unstable]&lt;/code&gt; impls for fn() with unstable abi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103153"&gt;allow &lt;code&gt;Vec::leak&lt;/code&gt; when using &lt;code&gt;no_global_oom_handling&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103224"&gt;allow semicolon after closure within parentheses in macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103399"&gt;change &lt;code&gt;unknown_lint&lt;/code&gt; applicability to &lt;code&gt;MaybeIncorrect&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103351"&gt;require &lt;code&gt;Drop&lt;/code&gt; impls to have the same constness on its bounds as the bounds on the struct have&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102417"&gt;require lifetime bounds for opaque types in order to allow hidden types to capture said lifetimes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101263"&gt;add default trait implementations for "c-unwind" ABI function pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102922"&gt;filtering spans when emitting json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101908"&gt;suggest let for assignment, and some code refactor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103328"&gt;do not suggest trivially false const predicates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102863"&gt;standardize "use parentheses to call" suggestions between typeck and trait selection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103354"&gt;escape string literals when fixing overlong char literal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103355"&gt;handle return-position &lt;code&gt;impl Trait&lt;/code&gt; in traits properly in &lt;code&gt;register_hidden_type&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103319"&gt;improve "&lt;code&gt;~const&lt;/code&gt; is not allowed here" message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103140"&gt;add diagnostic for calling a function with the same name with unresolved Macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/781"&gt;chalk: consider ADT's generic parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2600"&gt;miri: fix ICE when trying to GC a Stack with an unknown bottom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/2613"&gt;miri: add &lt;code&gt;scalar-abi-only&lt;/code&gt; field retagging option&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103276"&gt;erase regions before checking for &lt;code&gt;Default&lt;/code&gt; in uninitialized binding error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103172"&gt;introduce deduced parameter attributes, and use them for deducing &lt;code&gt;readonly&lt;/code&gt; on indirect immutable freeze by-value function parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103034"&gt;let expressions on RHS shouldn't be terminating scopes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103142"&gt;make diagnostic for unsatisfied &lt;code&gt;Termination&lt;/code&gt; bounds more precise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102635"&gt;make &lt;code&gt;order_dependent_trait_objects&lt;/code&gt; show up in future-breakage reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103360"&gt;reduce false positives in msys2 detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101403"&gt;enable LTO for &lt;code&gt;rustc_driver.so&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103231"&gt;remove byte swap of valtree hash on big endian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98450"&gt;remove more attributes from metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103214"&gt;use Set instead of Vec in &lt;code&gt;transitive_relation&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/99939"&gt;sort tests at compile time, not at startup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103223"&gt;use already checked RHS ty for LHS deref suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103197"&gt;stabilize &lt;code&gt;proc_macro::Span::source_text&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102271"&gt;stabilize &lt;code&gt;duration_checked_float&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103168"&gt;stabilize &lt;code&gt;asm_sym&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103127"&gt;make transpose const and inline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103308"&gt;mark &lt;code&gt;std::os::wasi::io::AsFd&lt;/code&gt; etc. as stable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103137"&gt;eliminate 280-byte memset from &lt;code&gt;ReadDir&lt;/code&gt; iterator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103166"&gt;optimize &lt;code&gt;slice_iter.copied().next_chunk()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103280"&gt;implement &lt;code&gt;String::leak&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103346"&gt;adjust argument type for mutable &lt;code&gt;with_metadata_of&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/368"&gt;hashbrown: add support for 16-bit targets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2656"&gt;futures: do not store items field in &lt;code&gt;ReadyChunks&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11268"&gt;cargo: fix publishing with a dependency on a sparse registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11280"&gt;cargo: improve the error message if &lt;code&gt;publish&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; or empty list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11255"&gt;cargo: publish: check remote git registry more than once post-publish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103192"&gt;rustdoc: eliminate uses of &lt;code&gt;EarlyDocLinkResolver::all_traits&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103254"&gt;rustdoc: do not filter out cross-crate &lt;code&gt;Self: Sized&lt;/code&gt; bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/crates.io/pull/5294"&gt;crates.io: introduce daily limit of published versions per crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/docs.rs/pull/1887"&gt;docs.rs: perf: change the link in the topbar to avoid a redirect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-bindgen/pull/2323"&gt;bindgen: avoid suppressing panic messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-bindgen/pull/2317"&gt;bindgen: use panic hooks instead of using &lt;code&gt;catch_unwind&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9670"&gt;clippy: add &lt;code&gt;missing_trait_methods&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8437"&gt;clippy: add lint to tell about let else pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9654"&gt;clippy: enable test &lt;code&gt;no_std_main_recursion&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9630"&gt;clippy: fix &lt;code&gt;allow_attributes_without_reason&lt;/code&gt; applying to external crate macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9635"&gt;clippy: fix ICE due to out-of-bounds array access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9368"&gt;clippy: improvement for  &lt;code&gt;equatable_if_let&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9685"&gt;clippy: &lt;code&gt;collapsible_match&lt;/code&gt; specify field name when destructuring structs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9686"&gt;clippy: &lt;code&gt;unwrap_used&lt;/code&gt;, &lt;code&gt;expect_used&lt;/code&gt; do not lint in &lt;code&gt;test&lt;/code&gt; cfg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9684"&gt;clippy: &lt;code&gt;ref_option_ref&lt;/code&gt; do not lint when inner reference is mutable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9690"&gt;clippy: add &lt;code&gt;from_raw_with_void_ptr&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9622"&gt;clippy: fix &lt;code&gt;box-default&lt;/code&gt; ignoring trait objects' types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9689"&gt;clippy: support &lt;code&gt;map_or&lt;/code&gt; for &lt;code&gt;or_fun_call&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13463"&gt;rust-analyzer: support const generics for builtin derive macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13448"&gt;rust-analyzer: workaround the python vscode extension's polyfill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13365"&gt;rust-analyzer: add multiple getters mode in &lt;code&gt;generate_getter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13444"&gt;rust-analyzer: don't catch the server activation error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13476"&gt;rust-analyzer: don't respond with an error when requesting a shutdown while starting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13447"&gt;rust-analyzer: fix &lt;code&gt;DidSaveDocument&lt;/code&gt; requests blocking the server on startup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13478"&gt;rust-analyzer: fix standard flycheck command not being executed in the workspace it is being invoked for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13471"&gt;rust-analyzer: handle multiple projects sharing dependency correctly in &lt;code&gt;once&lt;/code&gt; strategy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;An amazing week. We saw more wins than losses; I want to call out specifically
the wins from removing attributes from metadata (up to 8.2% faster builds for 18
benchmarks) and from enabling LTO for rustc_driver.so (up to 9.6% faster builds
for an epic 230 benchmarks, with &lt;em&gt;zero&lt;/em&gt; regressions).&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@pnkfelix&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=e0f8e60dddfecfc9093ee9d9f42557d8260c0355&amp;amp;end=629a414d7ba4caa3ca28b0a46c478e2ecb4c0059&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;e0f8e60d..629a414d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 Regressions, 6 Improvements, 2 Mixed; 2 of them in rollups
53 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-10-26.md"&gt;full report&lt;/a&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84022"&gt;Make PROC_MACRO_DERIVE_RESOLUTION_FALLBACK a hard error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/101834"&gt;Elaborate supertrait obligations when deducing closure signatures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/70887"&gt;Tracking Issue for Integer::{ilog,ilog2,ilog10}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/pull/83850"&gt;Propagate deref coercion into block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/103084"&gt;Derive &lt;code&gt;Eq&lt;/code&gt; and &lt;code&gt;Hash&lt;/code&gt; for &lt;code&gt;ControlFlow&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3335"&gt;Warning on unintended implicit drops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3334"&gt;Niches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3331"&gt;Deprecate PhantomData dropck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2022-10-26 - 2022-11-23 🦀&lt;/p&gt;
&lt;h3&gt;Virtual&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-10-26 | Virtual (Redmond, WA, US / New York, NY, US / Toronto, CA / Stockholm, SE / London, UK) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/288475815/"&gt;&lt;strong&gt;Your First Rust Project: Rust Basics&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/288475839/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-toronto/events/288475818/"&gt;&lt;strong&gt;Toronto Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/events/288475819/"&gt;&lt;strong&gt;Stockholm Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-london/events/288475821/"&gt;&lt;strong&gt;London Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-27 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/288867237/"&gt;&lt;strong&gt;Using Applicative Functors to parse command line options&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-27 | Virtual (Karlsruhe, DE) | &lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/"&gt;The Karlsruhe Functional Programmers Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/events/288972651/"&gt;&lt;strong&gt;Stammtisch (gemeinsam mit der C++ UG KA) (various topics, from C++ to Rust...)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-27 | Virtual (Linz, AT) | &lt;a href="https://www.meetup.com/rust-linz/"&gt;Rust Linz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-linz/events/289212637/"&gt;&lt;strong&gt;Rust Meetup Linz - 26th Edition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-29 | Virtual (Ludwigslust, DE) | &lt;a href="https://www.meetup.com/ludwigslust-rust-meetup/"&gt;Ludwigslust Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/ludwigslust-rust-meetup/events/289168194/"&gt;&lt;strong&gt;Von Nullen und Einsen | Rust Meetup Ludwigslust #1&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-01 | Virtual (Beijing, CN) | &lt;a href="https://www.meetup.com/wasm-rust-meetup/events/289066646/"&gt;WebAssembly and Rust Meetup (Rustlang)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/wasm-rust-meetup/events/289066646/"&gt;&lt;strong&gt;Monthly WasmEdge Community Meeting, a CNCF sandbox WebAssembly runtime&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-01 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/hlgvxsydcpbcb/"&gt;&lt;strong&gt;Buffalo Rust User Group, First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-02 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/289052285/"&gt;&lt;strong&gt;Rust and C++ Cardiff Virtual Meet&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-02 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsydcpbdb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-02 | Virtual (Redmond, WA, US / San Francisco, SF, US / New York, NY, US / Toronto, CA / London, UK) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/288475833/"&gt;&lt;strong&gt;Getting Started with Rust: From Java Dev to Rust Developer&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/288475838/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/288475839/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-toronto/events/288475836/"&gt;&lt;strong&gt;Toronto Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-london/events/288475832/"&gt;&lt;strong&gt;London Mirror&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-02 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/289092511/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-08 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/289211414/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-08 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/vndgwsydcpblb/"&gt;&lt;strong&gt;Second Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-08 | Virtual (Rostock, DE) | &lt;a href="https://www.meetup.com/altow-academy/"&gt;Altow Academy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/altow-academy/events/289352420/"&gt;&lt;strong&gt;Rust Meetup Rostock&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-08 | Virtual (Stockholm, SE) | &lt;a href="https://www.meetup.com/func-prog-sweden/"&gt;Func Prog Sweden&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/func-prog-sweden/events/288323896/"&gt;&lt;strong&gt;Tenth Func Prog Sweden MeetUp 2022 – Online (with "Ready for Rust" by Erik Dörnenburg)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-09 | Virtual (Malaysia, MY) | &lt;a href="https://forms.gle/zWXcMDAnnibiL4ni9"&gt;Rust Malaysia&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discord.gg/9Xj8H2EXTD"&gt;&lt;strong&gt;Rust Meetup November 2022 - a couple of lightning talks&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-10 | Virtual (Budapest, HU) | &lt;a href="https://www.meetup.com/hwswfree/"&gt;HWSW free!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/hwswfree/events/289044458/"&gt;&lt;strong&gt;RUST! RUST! RUST! meetup (online formában!)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-12 | Virtual | &lt;a href="https://gamedev.rs/"&gt;Rust GameDev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?q=https%3A%2F%2Fdiscord.gg%2FyNtPTb2&amp;amp;sa=D&amp;amp;ust=1666661760000000&amp;amp;usg=AOvVaw13uHY9m-8bJJwgeP58VS8l"&gt;&lt;strong&gt;Rust GameDev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-15 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc//"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/289015883/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-15 | Virtual (Nairobi, KE / New York, NY, US)| &lt;a href="https://www.meetup.com/data-umbrella-africa2/"&gt;Data Umbrella Africa&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/data-umbrella-africa2/events/289308825/"&gt;&lt;strong&gt;Online: Introduction to Rust Programming&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/data-umbrella/events/289308172/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-16 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/tqvhxsydcpbvb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-17 | Virtual (Amsterdam, NL) | &lt;a href="https://www.meetup.com/itgilde-cooperatie-amsterdam-unix-linux-meetups"&gt;ITGilde Tech-Talks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/itgilde-cooperatie-amsterdam-unix-linux-meetups/events/289167373/"&gt;&lt;strong&gt;Introduction “Rust” an ITGilde Tech Talk delivered by Pascal van Dam&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-21 | Virtual (Paris, FR) | &lt;a href="https://www.meetup.com/meetup-paris-ecole-superieur-du-genie-informatique"&gt;Meetup Paris - École Supérieure de Génie Informatique (ESGI)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/meetup-paris-ecole-superieur-du-genie-informatique/events/289112753/"&gt;&lt;strong&gt;Découverte de WebAssembly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Asia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-08 | Bangkok, TH | &lt;a href="https://www.meetup.com/techatagoda/"&gt;Tech@Agoda&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/techatagoda/events/289329464/"&gt;&lt;strong&gt;Rustacean Bangkok 5.0.0&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-10-26 | London, UK | &lt;a href="https://www.meetup.com/rust-london-user-group/"&gt;Rust London User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-london-user-group/events/289023932/"&gt;&lt;strong&gt;LDN Talks October 2022: Host by Amazon Prime Video&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-26 | Bristol, UK | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff/Rust Bristol&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/289204085/"&gt;&lt;strong&gt;Programming Veloren &amp;amp; Rust for a living&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-27 | København, DK | &lt;a href="https://cph.rs/"&gt;Copenhagen Rust Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/events/288179125/"&gt;&lt;strong&gt;Hack Night #30&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-23 | Bratislava, SK | &lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/"&gt;Bratislava Rust Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bratislava-rust-meetup-group/events/289028178/"&gt;&lt;strong&gt;Initial Meet and Greet Rust meetup&lt;/strong&gt;&lt;/a&gt;    &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-10-27 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/dsbpxsydcnbkc/"&gt;&lt;strong&gt;Bevy Crash Course with Nathan and Food!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-10 | Columbus, OH, US | &lt;a href="https://www.meetup.com/columbus-rs/events/"&gt;Columbus Rust Society&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrydcpbnb/"&gt;&lt;strong&gt;Monthly Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Oceania&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-09 | Sydney, NSW, AU | &lt;a href="https://www.meetup.com/rust-sydney/"&gt;Rust Sydney&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-sydney/events/289061840/"&gt;&lt;strong&gt;RustAU Sydney - Last physical for 2022 !&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-22 | Canberra, ACT, AU | &lt;a href="https://www.meetup.com/rust-canberra/"&gt;Canberra Rust User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-canberra/events/288615873/"&gt;&lt;strong&gt;November Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;South America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-05 | São Paulo, SP, BR | &lt;a href="https://www.meetup.com/rust-sao-paulo-meetup/"&gt;Rust São Paulo Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-sao-paulo-meetup/events/289176073/"&gt;&lt;strong&gt;Rust-SP meetup Outubro 2022&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;h2&gt;Jobs&lt;/h2&gt;
&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/xldzbl/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Also, I don't know how much of this is because Rust is special or because BurntSushi is a national treasure and his CSV library is impeccably constructed and documented.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://github.com/losvedir/transit-lang-cmp/#rust"&gt;Gabe Durazo on github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1319"&gt;scottmcm&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/yeghtr/this_week_in_rust_466/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</content><category term="This Week in Rust"></category></entry><entry><title>This Week in Rust 465</title><link href="https://this-week-in-rust.org/blog/2022/10/19/this-week-in-rust-465/" rel="alternate"></link><published>2022-10-19T00:00:00-04:00</published><updated>2022-10-19T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2022-10-19:/blog/2022/10/19/this-week-in-rust-465/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;!--

Dear community contributors:
Please read README.md for guidance on submissions.
Each submitted link should be of the form:

* [Title of the Linked Page](https://example.com/my_article)

If you don't know which category to use, feel free to submit a PR anyway
and just ask the editors to select the category.

--&gt;

&lt;h3&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gamedev.rs/news/038/"&gt;This Month in Rust GameDev #38 - September 2022&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bjorn3.github.io/2022/10/12/progress-report-okt-2022.html"&gt;Progress report on rustc_codegen_cranelift (Okt 2022)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.googleblog.com/2022/10/announcing-kataos-and-sparrow.html"&gt;Announcing KataOS and Sparrow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2022/10/17/changelog-151.html"&gt;rust-analyzer changelog #151&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.memorysafety.org/blog/memory-safe-ntp/"&gt;A Memory Safe Implementation of the Network Time Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenoh.io/blog/2022-09-30-zenoh-bahamut/"&gt;Zenoh 0.6.0, a Pub/Sub/Query protocol, was released and it is packed with new features.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gluesql/gluesql/releases/tag/v0.13.0"&gt;GlueSQL v0.13 - FSM based SQL query builder is newly added&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mabez.dev/blog/posts/esp-rust-17-10-2022/"&gt;Rust on Espressif chips - 17-10-2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mithrilsecurity.io/introducing-bastionai/"&gt;Introducing BastionAI, an open-source privacy-friendly AI training framework in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apollolabsblog.hashnode.dev/platform-agnostic-drivers-in-rust-publishing-to-cratesio"&gt;Platform Agnostic Drivers in Rust: Publishing to Crates.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwn.net/SubscriberLink/910762/0ebbdbf4b6f481d3/"&gt;A first look at Rust in the 6.1 kernel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opensource.com/article/22/10/asynchronous-programming-rust"&gt;Asynchronous programming in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rerun.io/blog/why-rust"&gt;Why Rust?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://laurmaedje.github.io/posts/comemo/"&gt;What If LaTeX Had Instant Preview?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lunatic.solutions/blog/magic-handler-functions-in-rust/"&gt;Magical handler functions in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://valand.dev/blog/post/rust-type-concealment-with-any-trait-and-fnmut/"&gt;Rust: Type Concealment With Any Trait and FnMut&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://naiveai.hashnode.dev/practical-parsing-nom"&gt;Practical Parsing in Rust with nom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://felix-knorr.net/posts/2022-10-14-proc-macros.html"&gt;The Little Joys of Code: Proc Macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-build-a-machine-learning-model-in-rust/"&gt;How to Build a Machine Learning Model in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=BY_ZjPGqJJk"&gt;Building Awesome Desktop App with Rust, Tauri, and SurrealDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=4YAmpHMl1Z0"&gt;AsRef/Borrow Traits, and the ?Sized Marker - Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rusty-ferris.pages.dev/blog/using-nvim-for-rust-development/"&gt;Using Neovim for Rust Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freemasen.com/blog/sqlite-parser-pt-3/index.html"&gt;[series] Sqlite File Parser Pt 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@adetaylor/are-we-reference-yet-c-references-in-rust-72c1c6c7015a"&gt;Simulating C++ references in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/It4innovations/hyperqueue"&gt;HyperQueue&lt;/a&gt;, a runtime for ergonomic execution of programs on a distributed cluster.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1113"&gt;Jakub Beránek&lt;/a&gt; for the self-suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/zerocopy/issues/64"&gt;zerocopy - Add defensive programming in FromBytes::new_box_slice_zeroed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/zerocopy/issues/17"&gt;zerocopy - Add tests for compilation failure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hannobraun/Fornjot/issues/1231"&gt;Fornjot - export-validator does not support Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3683"&gt;Ockam - Add clap based ockam sub command to create a vault without creating a node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3685"&gt;Ockam - Add clap based ockam sub command to rotate identity keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/build-trust/ockam/issues/3619"&gt;Ockam - Partition rust test jobs with nextest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;388 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-10-10..2022-10-17"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102641"&gt;support casting boxes to dyn*&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101679"&gt;support default-body trait functions with return-position &lt;code&gt;impl Trait&lt;/code&gt; in traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103089"&gt;mark derived &lt;code&gt;StructuralEq&lt;/code&gt; as automatically derived&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102372"&gt;allow compiling the &lt;code&gt;wasm32-wasi&lt;/code&gt; std library with atomics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102529"&gt;detect and reject out-of-range integers in format string literals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102998"&gt;drop temporaries created in a condition, even if it's a let chain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102927"&gt;fix &lt;code&gt;let&lt;/code&gt; keyword removal suggestion in structs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101832"&gt;make &lt;code&gt;dyn*&lt;/code&gt; casts into a coercion, allow &lt;code&gt;dyn*&lt;/code&gt; upcasting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102931"&gt;make &lt;code&gt;overlapping_impls&lt;/code&gt; not generic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101360"&gt;point out incompatible closure bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102026"&gt;populate effective visibilities in &lt;code&gt;rustc_resolve&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102904"&gt;print return-position &lt;code&gt;impl Trait&lt;/code&gt; in trait verbosely if &lt;code&gt;-Zverbose&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103000"&gt;add suggestion to the "missing native library" error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102765"&gt;suggest &lt;code&gt;==&lt;/code&gt; to the first expr which has &lt;code&gt;ExprKind::Assign&lt;/code&gt; kind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102876"&gt;suggest candidates for unresolved import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102454"&gt;suggest parentheses for possible range method calling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103031"&gt;suppress irrefutable let patterns lint for prefixes in match guards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102830"&gt;unify &lt;code&gt;tcx.constness&lt;/code&gt; query and param env constness checks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102355"&gt;remove type traversal for mir constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102589"&gt;scoped threads: pass closure through MaybeUninit to avoid invalid dangling references&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102412"&gt;never panic in &lt;code&gt;thread::park&lt;/code&gt; and &lt;code&gt;thread::park_timeout&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102773"&gt;use semaphores for thread parking on Apple platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102732"&gt;nicer errors from &lt;code&gt;assert_unsafe_precondition&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102655"&gt;optimize TLS on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101727"&gt;stabilize &lt;code&gt;map_first_last&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101030"&gt;constify &lt;code&gt;Location&lt;/code&gt; methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102023"&gt;add &lt;code&gt;MaybeUninit&lt;/code&gt; array transpose &lt;code&gt;From&lt;/code&gt; impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101837"&gt;add &lt;code&gt;Box&amp;lt;[T; N]&amp;gt;: TryFrom&amp;lt;Vec&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/98033"&gt;add &lt;code&gt;IsTerminal&lt;/code&gt; trait to determine if a descriptor or handle is a terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102445"&gt;add &lt;code&gt;is_empty()&lt;/code&gt; method to &lt;code&gt;core::ffi::CStr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102578"&gt;panic for invalid arguments of &lt;code&gt;{integer primitive}::ilog{,2,10}&lt;/code&gt; in all modes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102847"&gt;impl &lt;code&gt;AsFd&lt;/code&gt; and &lt;code&gt;AsRawFd&lt;/code&gt; for &lt;code&gt;io::&lt;/code&gt;{&lt;code&gt;Stdin&lt;/code&gt;, &lt;code&gt;Stdout&lt;/code&gt;, &lt;code&gt;Stderr&lt;/code&gt;}, not the sys versions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/102460"&gt;prevent UB in child process after calling &lt;code&gt;libc::fork&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/103059"&gt;fix &lt;code&gt;Duration::{try_,}from_secs_f{32,64}(-0.0)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/portable-simd/pull/309"&gt;SIMD: mark more mask functions inline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2649"&gt;futures: fix soundness hole in join macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11205"&gt;cargo: fix deadlock when build scripts are waiting for input on stdin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/11230"&gt;cargo: support 'publish.timeout' config behind '-Zpublish-timeout'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/101720"&gt;rustdoc: change default level of &lt;code&gt;invalid_html_tags&lt;/code&gt; to warning and stabilize it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9572"&gt;clippy: add &lt;code&gt;as_ptr_cast_mut&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9637"&gt;clippy: add &lt;code&gt;unused_format_specs&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9649"&gt;clippy: add a suggestion and a note about orphan rules for &lt;code&gt;from_over_into&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9658"&gt;clippy: add new lint &lt;code&gt;partial_pub_fields&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9600"&gt;clippy: change &lt;code&gt;uninlined_format_args&lt;/code&gt; into a style lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9645"&gt;clippy: don't lint &lt;code&gt;ptr_arg&lt;/code&gt; when used as an incompatible trait object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9590"&gt;clippy: fix &lt;code&gt;to_string_in_format_args&lt;/code&gt; in parens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9636"&gt;clippy: don't lint &lt;code&gt;default_numeric_fallback&lt;/code&gt; on constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9609"&gt;clippy: don't lint &lt;code&gt;unnecessary_cast&lt;/code&gt; on negative hexadecimal literals when cast as floats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9652"&gt;clippy: &lt;code&gt;zero_prefixed_literal&lt;/code&gt;: Do not advise to use octal form if not possible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9617"&gt;clippy: add &lt;code&gt;cast-nan-to-int&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9655"&gt;clippy: fix &lt;code&gt;box-default&lt;/code&gt; linting &lt;code&gt;no_std&lt;/code&gt; non-boxes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/9605"&gt;clippy: fix: &lt;code&gt;uninlined_format_args&lt;/code&gt; shouldn't inline panic! before 2021 edition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13399"&gt;rust-analyzer: migrate assists to format args captures, part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13354"&gt;rust-analyzer: diagnose some incorrect usages of the question mark operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-analyzer/pull/13428"&gt;rust-analyzer: fix formatting requests hanging when r-a is still starting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;Overall a fairly busy week, with many improvements and regressions, though the
net result ends up being a small regression. Pretty busy week in terms of
regressions in rollups as well, which unfortunately mostly were not followed up
on prior to the report being put together, despite the relative ease of running
perf against individual PRs now.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@simulacrum&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=1e926f06528ecb2503f026e2fd53cb735d487b10&amp;amp;end=e0f8e60dddfecfc9093ee9d9f42557d8260c0355&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;1e926f06..e0f8e60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 Regressions, 4 Improvements, 4 Mixed; 4 of them in rollups
47 artifact comparisons made in total&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-10-18.md"&gt;full report&lt;/a&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/issues?q=label%3Acall-for-testing"&gt;Call for Testing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An important step for RFC implementation is for people to experiment with the
implementation and give feedback, especially before stabilization.  The following
RFCs would benefit from user testing before moving forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs issued a call for testing this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a feature implementer and would like your RFC to appear on the above list, add the new &lt;code&gt;call-for-testing&lt;/code&gt;
label to your RFC along with a comment providing testing instructions and/or guidance on which aspect(s) of the feature
need testing.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week, &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the 'final comment period' for RFCs and key PRs
which are reaching a decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No Tracking Issues or PRs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3329"&gt;Add RFC for calling default trait methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3327"&gt;Add lang-team advisors team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2022-10-19 - 2022-11-16 🦀&lt;/p&gt;
&lt;h3&gt;Virtual&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-10-19 | Virtual (Boulder, CO, US) | &lt;a href="https://www.meetup.com/boulder-elixir-rust/"&gt;Boulder Elixir and Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/zvxcsrydcnbqb/"&gt;&lt;strong&gt;Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-19 | Virtual (Chennai, IN) | &lt;a href="https://www.meetup.com/techceleration/"&gt;Techceleration at Toyota Connected&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/techceleration/events/288942414/"&gt;&lt;strong&gt;Techceleration's! Let's Talk Tech! Rust | BreakTheCode Contest - 14th Edition&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-19 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust/"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/288641106/"&gt;&lt;strong&gt;Rapid Prototyping in Rust: Write fast like Python; Run fast like C&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-19 | Virtual | &lt;a href="https://www.meetup.com/meetup-group-boston-nosql-database-group/"&gt;Boston NoSQL Database Group (ScyllaDB)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/meetup-group-boston-nosql-database-group/events/288464419/"&gt;&lt;strong&gt;p99 Conf: All Things Performance (including talks on Rust) - Free&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.p99conf.io"&gt;&lt;strong&gt;Official conference page&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-20 | Virtual (Bellingham, WA, US) | &lt;a href="https://www.meetup.com/bellinghamcodes/"&gt;bellingham.codes&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/bellinghamcodes/events/288766996/"&gt;&lt;strong&gt;Software Forum 8 (with Language small groups: Rust)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-20 | Virtual (Buenos Aires, AR) | &lt;a href="https://nerdear.la"&gt;Nerdearla&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://app.swapcard.com/widget/event/nerdearla-2022/planning/UGxhbm5pbmdfMTAxMzQzOQ=="&gt;&lt;strong&gt;Rust y el desarrollo de software en la próxima década&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-20 | Virtual (México City, MX) | &lt;a href="https://www.meetup.com/rust-mx/"&gt;Rust MX&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-mx/events/289023645/"&gt;&lt;strong&gt;Graphul, un web framework escrito en Rust&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-20 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/qtvtvsydcnbbc/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-25 | Virtual (Berlin, DE) | &lt;a href="https://www.meetup.com/opentechschool-berlin/"&gt;OpenTechSchool Berlin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/288925790/"&gt;&lt;strong&gt;Rust Hack and Learn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-25 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/qndgwsydcnbhc/"&gt;&lt;strong&gt;Last Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-26 | Virtual (Redmond, WA, US / New York, NY, US / Toronto, CA / Stockholm, SE / London, UK) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/288475815/"&gt;&lt;strong&gt;Your First Rust Project: Rust Basics&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/288475839/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-toronto/events/288475818/"&gt;&lt;strong&gt;Toronto Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-stockholm/events/288475819/"&gt;&lt;strong&gt;Stockholm Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-london/events/288475821/"&gt;&lt;strong&gt;London Mirror&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-27 | Virtual (Charlottesville, VA, US) | &lt;a href="https://www.meetup.com/charlottesville-rust-meetup/"&gt;Charlottesville Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/charlottesville-rust-meetup/events/288867237/"&gt;&lt;strong&gt;Using Applicative Functors to parse command line options&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-27 | Virtual (Karlsruhe, DE) | &lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/"&gt;The Karlsruhe Functional Programmers Meetup Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/the-karlsruhe-functional-programmers-meetup-group/events/288972651/"&gt;&lt;strong&gt;Stammtisch (gemeinsam mit der C++ UG KA) (various topics, from C++ to Rust...)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-29 | Virtual (Ludwigslust, DE) | &lt;a href="https://www.meetup.com/ludwigslust-rust-meetup/"&gt;Ludwigslust Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/ludwigslust-rust-meetup/events/289168194/"&gt;&lt;strong&gt;Von Nullen und Einsen | Rust Meetup Ludwigslust #1&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-01 | Virtual (Beijing, CN) | &lt;a href="https://www.meetup.com/wasm-rust-meetup/events/289066646/"&gt;WebAssembly and Rust Meetup (Rustlang)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/wasm-rust-meetup/events/289066646/"&gt;&lt;strong&gt;Monthly WasmEdge Community Meeting, a CNCF sandbox WebAssembly runtime&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-01 | Virtual (Buffalo, NY, US) | &lt;a href="https://www.meetup.com/buffalo-rust-meetup/"&gt;Buffalo Rust Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/buffalo-rust-meetup/events/hlgvxsydcpbcb/"&gt;&lt;strong&gt;Buffalo Rust User Group, First Tuesdays&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-02 | Virtual (Cardiff, UK) | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/289052285/"&gt;&lt;strong&gt;Rust and C++ Cardiff Virtual Meet&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-02 | Virtual (Indianapolis, IN, US) | &lt;a href="https://www.meetup.com/indyrs/"&gt;Indy Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/qwtdjsydcpbdb/"&gt;&lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-02 | Virtual (Redmond, WA, US / San Francisco, SF, US / New York, NY, US / Toronto, CA / London, UK) | &lt;a href="https://www.meetup.com/microsoft-reactor-redmond/"&gt;Microsoft Reactor Redmond&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/microsoft-reactor-redmond/events/288475833/"&gt;&lt;strong&gt;Getting Started with Rust: From Java Dev to Rust Developer&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-san-francisco/events/288475838/"&gt;&lt;strong&gt;San Francisco Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-new-york/events/288475839/"&gt;&lt;strong&gt;New York Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-toronto/events/288475836/"&gt;&lt;strong&gt;Toronto Mirror&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://www.meetup.com/microsoft-reactor-london/events/288475832/"&gt;&lt;strong&gt;London Mirror&lt;/strong&gt;&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-02 | Virtual (Stuttgart, DE) | &lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/"&gt;Rust Community Stuttgart&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-community-stuttgart/events/289092511/"&gt;&lt;strong&gt;Rust-Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-08 | Virtual (Dallas, TX, US) | &lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;Dallas Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/dallas-rust/events/vndgwsydcpblb/"&gt;&lt;strong&gt;Second Tuesday&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-08 | Virtual (Stockholm, SE) | &lt;a href="https://www.meetup.com/func-prog-sweden/"&gt;Func Prog Sweden&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/func-prog-sweden/events/288323896/"&gt;&lt;strong&gt;Tenth Func Prog Sweden MeetUp 2022 – Online (with "Ready for Rust" by Erik Dörnenburg)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-10 | Virtual (Budapest, HU) | &lt;a href="https://www.meetup.com/hwswfree/"&gt;HWSW free!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/hwswfree/events/289044458/"&gt;&lt;strong&gt;RUST! RUST! RUST! meetup (online formában!)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-12 | Virtual | &lt;a href="https://gamedev.rs/"&gt;Rust GameDev&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?q=https%3A%2F%2Fdiscord.gg%2FyNtPTb2&amp;amp;sa=D&amp;amp;ust=1666661760000000&amp;amp;usg=AOvVaw13uHY9m-8bJJwgeP58VS8l"&gt;&lt;strong&gt;Rust GameDev Monthly Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-15 | Virtual (Washington, DC, US) | &lt;a href="https://www.meetup.com/rustdc//"&gt;Rust DC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustdc/events/289015883/"&gt;&lt;strong&gt;Mid-month Rustful&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-16 | Virtual (Vancouver, BC, CA) | &lt;a href="https://www.meetup.com/vancouver-rust"&gt;Vancouver Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/vancouver-rust/events/tqvhxsydcpbvb/"&gt;&lt;strong&gt;Rust Study/Hack/Hang-out&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-10-20 | London, UK | &lt;a href="https://www.meetup.com/rust-london-user-group/"&gt;Rust London User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-london-user-group/events/289027990/"&gt;&lt;strong&gt;Rust London x JFrog SwampUP After Party&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-25 | Paris, FR | &lt;a href="https://www.meetup.com/rust-paris/"&gt;Rust Paris&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-paris/events/288735204/"&gt;&lt;strong&gt;Rust Paris meetup #53&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-25 | Roma, IT | &lt;a href="https://www.meetup.com/rust-roma/"&gt;Rust Roma&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-roma/events/289109555/"&gt;&lt;strong&gt;Meetup Golang Roma - Go + Rust Hacknight - Hacktoberfest 2022&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-26 | London, UK | &lt;a href="https://www.meetup.com/rust-london-user-group/"&gt;Rust London User Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-london-user-group/events/289023932/"&gt;&lt;strong&gt;LDN Talks October 2022: Host by Amazon Prime Video&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-26 | Bristol, UK | &lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"&gt;Rust and C++ Cardiff/Rust Bristol&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/289204085/"&gt;&lt;strong&gt;Programming Veloren &amp;amp; Rust for a living&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-27 | København, DK | &lt;a href="https://cph.rs/"&gt;Copenhagen Rust Group&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/copenhagen-rust-meetup-group/events/288179125/"&gt;&lt;strong&gt;Hack Night #30&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-10-20 | New York, NY, US | &lt;a href="https://www.meetup.com/rust-nyc/"&gt;Rust NYC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-nyc/events/288756215/"&gt;&lt;strong&gt;Anyhow ? Turbofish ::&amp;lt;&amp;gt; / HTTP calls and errors in Rust.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-20 | New York, NY, US | &lt;a href="https://www.meetup.com/cloud-native-new-york/"&gt;Cloud Native New York&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/cloud-native-new-york/events/288818963/"&gt;&lt;strong&gt;Cloud-native Search Engine for Log Management and Analytics.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-25 | Toronto, ON, CA | &lt;a href="https://www.meetup.com/rust-toronto/"&gt;Rust Toronto&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-toronto/events/288589539/"&gt;&lt;strong&gt;Rust DHCP&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-27 | Lehi, UT, US | &lt;a href="https://www.meetup.com/utah-rust/"&gt;Utah Rust&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/dsbpxsydcnbkc/"&gt;&lt;strong&gt;Bevy Crash Course with Nathan and Food!&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-10 | Columbus, OH, US | &lt;a href="https://www.meetup.com/columbus-rs/events/"&gt;Columbus Rust Society&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrydcpbnb/"&gt;&lt;strong&gt;Monthly Meeting&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Oceania&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-10-20 | Brisbane, QLD, AU | &lt;a href="https://www.meetup.com/rust-brisbane/"&gt;Rust Brisbane&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-brisbane/events/289041763/"&gt;&lt;strong&gt;October Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-20 | Wellington, NZ | &lt;a href="https://www.meetup.com/rust-wellington/"&gt;Rust Wellington&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-wellington/events/288738684/"&gt;&lt;strong&gt;Tune Up Edition: software engineering management&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-10-25 | Melbourne, VIC, AU | &lt;a href="https://www.meetup.com/rust-melbourne"&gt;Rust Melbourne&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-melbourne/events/289185465/"&gt;&lt;strong&gt;October 2022 Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2022-11-09 | Sydney, NSW, AU | &lt;a href="https://www.meetup.com/rust-sydney/"&gt;Rust Sydney&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-sydney/events/289061840/"&gt;&lt;strong&gt;RustAU Sydney - Last physical for 2022 !&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;South America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2022-11-05 | São Paulo, SP, BR | &lt;a href="https://www.meetup.com/rust-sao-paulo-meetup/"&gt;Rust São Paulo Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-sao-paulo-meetup/events/289176073/"&gt;&lt;strong&gt;Rust-SP meetup Outubro 2022&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;!--

Rust Jobs:

TWiR has stopped featuring individual job postings. You can read more about this change here:

https://github.com/rust-lang/this-week-in-rust/issues/3412

--&gt;

&lt;h2&gt;Jobs&lt;/h2&gt;
&lt;p&gt;Please see the latest &lt;a href="https://www.reddit.com/r/rust/comments/xldzbl/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Who's Hiring thread on r/rust&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I think it's worth noting that the fact that this program fails to compile whereas the analogous Python runs but gives the wrong answer is &lt;em&gt;exactly what Rust's ownership and borrowing system is about&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://users.rust-lang.org/t/capturing-a-copy-of-a-local-variable-for-a-lambda/82522/5"&gt;Kevin Reid on rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1310"&gt;Kill The Mule&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;, &lt;a href="https://github.com/bennyvasquez"&gt;bennyvasquez&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/y8n5ap/this_week_in_rust_465/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</content><category term="This Week in Rust"></category></entry></feed>