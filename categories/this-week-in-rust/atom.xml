<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>This Week in Rust</title><link href="https://this-week-in-rust.org/" rel="alternate"></link><link href="https://this-week-in-rust.org/categories/this-week-in-rust/atom.xml" rel="self"></link><id>https://this-week-in-rust.org/</id><updated>2019-11-26T00:00:00-05:00</updated><entry><title>This Week in Rust 314</title><link href="https://this-week-in-rust.org/blog/2019/11/26/this-week-in-rust-314/" rel="alternate"></link><updated>2019-11-26T00:00:00-05:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-11-26:blog/2019/11/26/this-week-in-rust-314/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tokio.rs/blog/2019-11-tokio-0-2/"&gt;Tokio roadmap to 1.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pietroalbini.org/blog/shipping-a-compiler-every-six-weeks/"&gt;Shipping a compiler every six weeks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2019/11/25/const-if-match.html"&gt;&lt;code&gt;if&lt;/code&gt; and &lt;code&gt;match&lt;/code&gt; in constants on nightly rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raphlinus.github.io/ui/druid/2019/11/22/reactive-ui.html"&gt;Towards a unified theory of reactive UI&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yoshuawuyts.com/error-handling-survey/"&gt;Surveying error handling libraries&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.gnome.org/~federico/blog/refactoring-the-length-type.html"&gt;Porting librsvg to Rust: Refactoring the Length type&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://immunant.com/blog/2019/11/rust2020/"&gt;Lessons learned by transpiling C to Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ralfj.de/blog/2019/11/25/how-to-panic-in-rust.html"&gt;How to panic in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.seantheprogrammer.com/neat-rust-tricks-passing-rust-closures-to-c"&gt;Neat Rust tricks: Passing Rust closures to C&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.gnome.org/~federico/blog/moving-gnome-shell-styles-to-rust.html"&gt;Moving gnome-shell's styles to Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zupzup.org/async-awaitify-rust-cli/"&gt;Async-awaitifying a Rust CLI App&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ly.lee/building-a-rust-driver-for-pinetimes-touch-controller-cbc1a5d5d3e9"&gt;Building a Rust driver for PineTimeâ€™s touch controller&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rustfest.eu/this-week-in-rustfest-barcelona-videos"&gt;RustFest Barcelona talk recordings are now available&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cryptowat.ch/2019/11/25/sponsoring-rust-gui-library-iced/"&gt;Cryptowatch is sponsoring development of Rust GUI library iced&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust2020"&gt;#Rust2020&lt;/h3&gt;
&lt;p&gt;Find all #Rust2020 posts at &lt;a href="https://readrust.net/rust-2020/"&gt;Read Rust&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/google/rerast"&gt;rerast&lt;/a&gt;, a rule-based Rust code transformation tool.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/674"&gt;Jan Riemer&lt;/a&gt; for the suggestions!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[seeking input] &lt;a href="https://github.com/time-rs/time/issues/190"&gt;Time v0.2 pre-release feedback&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/imsnif/what/issues/17"&gt;what: Shared os behaviour&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imsnif/what/issues/16"&gt;what: Listen on all interfaces&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/crates.io/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3AE-mentor"&gt;crates.io: carols10cents will be mentoring multiple issues for the month of November &amp;amp; December&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;260 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-11-18..2019-11-25"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65355"&gt;stabilize &lt;code&gt;!&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61351"&gt;stabilize &lt;code&gt;cfg(doc)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66597"&gt;debuginfo: support for &lt;code&gt;std::collections::Hash*&lt;/code&gt; in windows debuggers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66576"&gt;make gdb pretty-printing more robust when printing uninitialized &lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66532"&gt;generate DWARF address ranges for faster lookups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66594"&gt;fix cycle when debug-printing opaque types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66529"&gt;resolve: give derive helpers highest priority during resolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66575"&gt;remove pretty printing of specific nodes in AST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66539"&gt;point at type in &lt;code&gt;let&lt;/code&gt; assignment on type errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66239"&gt;suggest calling async closure when needed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66206"&gt;suggest &lt;code&gt;#[repr(C)]&lt;/code&gt; instead of &lt;code&gt;#[repr(C, packed, ...)]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/58281"&gt;add outlives suggestions for some lifetime errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66540"&gt;use a &lt;code&gt;SmallVec&lt;/code&gt; for &lt;code&gt;Candidate::match_pairs&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1067"&gt;miri: add &lt;code&gt;acos&lt;/code&gt;, &lt;code&gt;asin&lt;/code&gt;, and &lt;code&gt;atan&lt;/code&gt; foreign functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66282"&gt;mir-opt: asking &lt;code&gt;?&lt;/code&gt;s in a more optimized fashion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66074"&gt;mir-opt: turn on the &lt;code&gt;ConstProp&lt;/code&gt; pass by default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/693"&gt;miri: support unwinding after a panic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66587"&gt;handle statics in MIR as const pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66537"&gt;delay an &lt;code&gt;is_local_ever_initialized&lt;/code&gt; call&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66515"&gt;reduce size of &lt;code&gt;hir::Expr&lt;/code&gt; by boxing more of &lt;code&gt;hir::InlineAsm&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66279"&gt;use proc-macro to derive HashStable everywhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66538"&gt;remove &lt;code&gt;compiler_builtins_lib&lt;/code&gt; feature from libstd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66511"&gt;std::error::Chain: remove &lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65821"&gt;use &lt;code&gt;drop_in_place&lt;/code&gt; in &lt;code&gt;array::IntoIter::drop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66322"&gt;stabilize &lt;code&gt;Result::map_or_else&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/libc/pull/1574"&gt;libc: deprecate vfork&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/libc/pull/1567"&gt;libc: add initial support for sparc-unknown-linux-gnu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7616"&gt;cargo: extend documentation on security concerns of crate names in a registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7579"&gt;cargo: turn the new lock file format on by default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7560"&gt;cargo: stabilize install-upgrade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66238"&gt;rustdoc: stabilize &lt;code&gt;edition&lt;/code&gt; annotation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65613"&gt;rustdoc: preserve whitespace inside one-backtick codeblocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/measureme/pull/88"&gt;measureme: optimize FileSerializationSink by using parking_lot::Mutex and avoiding heap allocations in write_atomic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/65778"&gt;Stabilize &lt;code&gt;std::{rc,sync}::Weak::{weak_count, strong_count}&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/50540"&gt;Tracking issue for extra floating-point logarithm constants&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/65013"&gt;Implement Debug for MaybeUninit&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/pull/64315"&gt;Fixes soundness bug 18510 by aborting on unwind from safe extern "C" functions only&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2820"&gt;Box error alias&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/scy/advent-of-code"&gt;Dec  1. "Advent of Code" livestream in German&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="africa"&gt;Africa&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/cpdtkryzqbgb/"&gt;Dec  4. Johannesburg, ZA - Johannesburg Rust Meetup - Time for Some Highbrow FP in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/259481456/"&gt;Dec  2. Auckland, NZ - Rust AKL - Introduction to Rust (part 3)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lugsapienza.altervista.org/corsorust-nov2019"&gt;Nov 26+28, Rome, Italy - Weekly Rust course at "La Sapienza" University: 2nd lesson&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cph.rs/"&gt;Nov 27. Copenhagen, DK - Copenhagen Rust Hack Night #20&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/571415073420154/"&gt;Nov 30. Kharkiv, UA - Peer Lab Kharkiv #Rust: Algorithmic problems solving&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Hack-Learn-Karlsruhe/events/266554688/"&gt;Dec  2. Karlsruhe, DE - Rust Hack &amp;amp; Learn Karlsruhe - Rust Meet-up&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wroclaw/events/266756721/"&gt;Dec  4. Wroclaw, PL - Rust Wroclaw Meetup #15&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustCologne/events/tnrnbryzqbgb/"&gt;Dec  4. Cologne, DE - Rust Cologne - Advent of .await&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/nxdpgryzqbpb/"&gt;Dec 11. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/1173477969528421/"&gt;Dec 12. Kyiv, UA - Rails Reactor - Rust Ukraine Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Mozilla-Torino/events/266750624"&gt;Dec 12. Turin, IT - Mozilla Torino - Gruppo di studio Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Bay-Area/events/266571982"&gt;Dec  3. San Francisco, CA, US - Rust Bay Area - [@ Cloudflare] Declarative UIs in Rust and Real-world production CLIs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/mffbtpyzqbgb/"&gt;Dec  4. Indianapolis, IN, US - Indy.rs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/PDXRust/events/264733991/"&gt;Dec  4. Portland, OR, US - PDXRust - macros_rule!&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/prbtdryzqbnb/"&gt;Dec 10. Seattle, WA, US - Seattle Rust Meetup - Monthly meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Desert-Rustaceans/events/wmmphryzpbkc/"&gt;Dec 11. Mesa, AZ, US - Desert Rust - Rust: Crates and Organization&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/rwcpfryzqbpb/"&gt;Dec 11. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/266502136/"&gt;Dec 12. San Diego, CA, US - San Diego Rust December Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgryzqbqb/"&gt;Dec 12. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/265905262/"&gt;Dec 12. Lehi, UT, US - Utah Rust - December 2019 Regular Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/jobs-phd-postdoc-intern-positions-in-rustbelt-and-iris-projects-at-max-planck/35016"&gt;PhD, postdoc &amp;amp; intern positions in RustBelt and Iris projects at Max Planck&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://consensys.net/open-roles/1792013/"&gt;Senior Software Engineer at ConsenSys R&amp;amp;D, Remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I said it before, and I'll say it again: If one views Rust as a critique on C++, one should view it as a constructive critique.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;â€“ &lt;a href="https://www.reddit.com/r/rust/comments/dyr8ps/rust_from_a_cc_point_of_view_viceversa/f835w7h"&gt;llogiq on /r/rust&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/741"&gt;Dmitry Kashitsyn&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/e2ivns/this_week_in_rust_314/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 313</title><link href="https://this-week-in-rust.org/blog/2019/11/19/this-week-in-rust-313/" rel="alternate"></link><updated>2019-11-19T00:00:00-05:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-11-19:blog/2019/11/19/this-week-in-rust-313/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ralfj.de/blog/2019/11/18/stacked-borrows-paper.html"&gt;Stacked borrows: An aliasing model for Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adventures.michaelfbryan.com/posts/const-arrayvec/"&gt;Implementing ArrayVec using const generics&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lukaskalbertodt.github.io/2019/11/14/thoughts-on-error-handling-in-rust.html"&gt;Thoughts on error handling in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.joshmcguigan.com/blog/understanding-serde/"&gt;Understanding Serde&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/2019/11/13/find-usages.html"&gt;rust-analyzer: Find usages&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boats.gitlab.io/blog/post/global-executors/"&gt;Global executors&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2019/11/14/evaluating-github-actions.html"&gt;Rust Infrastructure team: Evaluating GitHub Actions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/"&gt;Rust bug minimization patterns&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/swlh/sneak-peek-of-pinetime-smart-watch-and-why-its-perfect-for-teaching-iot-81b74161c159"&gt;Teaching Rust in IoT with PineTime smart watch&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust2020"&gt;#Rust2020&lt;/h3&gt;
&lt;p&gt;Find all #Rust2020 posts at &lt;a href="https://readrust.net/rust-2020/"&gt;Read Rust&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/bytecodealliance/wasmtime"&gt;wasmtime&lt;/a&gt;, a standalone JIT-style runtime for WebAssembly.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/671"&gt;Josh Triplett&lt;/a&gt; for the suggestions!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2019/11/13/goverance-wg-cfp.html"&gt;Governance WG call for participation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/async-rs/async-std/issues/564"&gt;async-std: Add Future::timeout&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/crates.io/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3AE-mentor"&gt;crates.io: carols10cents will be mentoring multiple issues for the month of November &amp;amp; December&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;252 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-11-11..2019-11-18"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66297"&gt;add a callback that allows compiler consumers to override queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66318"&gt;update LLVM submodule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66349"&gt;expand source_util macros with def-site context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66253"&gt;improve errors after re rebalance coherence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66334"&gt;move &lt;code&gt;Session&lt;/code&gt; fields to &lt;code&gt;CrateStore&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66330"&gt;improve non-exhaustiveness handling in usefulness checking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66326"&gt;refactor integer range handling in the usefulness algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66398"&gt;remove some stack frames from &lt;code&gt;.async&lt;/code&gt; calls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66013"&gt;avoid hashing the key twice in &lt;code&gt;get_query()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66419"&gt;don't warn labels beginning with &lt;code&gt;_&lt;/code&gt; on unused_labels lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7570"&gt;only include "already existing ..." comment in gitignore on conflict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65456"&gt;suggest borrowing when it would satisfy an unmet trait bound&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64694"&gt;fully integrate derive helpers into name resolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66197"&gt;push &lt;code&gt;ast::{ItemKind, ImplItemKind}::OpaqueTy&lt;/code&gt; hack down into lowering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66170"&gt;add a HIR pass to check consts for &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;, etc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65608"&gt;fix MIR lowering evaluation order and soundness bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66233"&gt;split &lt;code&gt;ConstValue&lt;/code&gt; into two enums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66394"&gt;fix two OOM issues related to &lt;code&gt;ConstProp&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66385"&gt;make dataflow-based const qualification the canonical one&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1056"&gt;miri: use new isize_max method in FS accesses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66466"&gt;miri panic_unwind: fix hack for SEH platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/284"&gt;make chalk-rust-ir generic over type-family&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/283"&gt;chalk: refactor fold&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/282"&gt;chalk: implement &lt;code&gt;zip_binders&lt;/code&gt; and add some &lt;code&gt;dyn Trait&lt;/code&gt;/&lt;code&gt;impl Trait&lt;/code&gt; tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66292"&gt;add &lt;code&gt;Result::map_or&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66280"&gt;fix &lt;code&gt;HashSet::union&lt;/code&gt; performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66248"&gt;add raw ptr variant of &lt;code&gt;UnsafeCell::get&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65637"&gt;proposal for &lt;code&gt;BTree&lt;/code&gt;{&lt;code&gt;Map&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;}&lt;code&gt;::&lt;/code&gt;{&lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64432"&gt;make the semantics of &lt;code&gt;Vec::truncate(_)&lt;/code&gt; consistent with slices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/libc/pull/1536"&gt;libc: add support for making functions &lt;code&gt;const&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7580"&gt;cargo: Don't panic when parsing &lt;code&gt;/proc/stat&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/54733"&gt;stabilize rustdoc theme options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup/pull/2122"&gt;rustup build: make clippy faster by using checking before that operation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup/pull/2121"&gt;rustup: retry downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup/pull/2043"&gt;rustup: fix/improve human-readable units&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/measureme/pull/86"&gt;measureme: only use 48 bits for encoding timestamps and 32 bits for encoding thread IDs in &lt;code&gt;RawEvent&lt;/code&gt; in order to make it smaller&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/66322"&gt;Stabilize Result::map_or_else&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/64856"&gt;Scope format! temporaries&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/61351"&gt;Stabilize cfg(doc)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2818"&gt;A macro to get the current function name&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/scy/advent-of-code"&gt;Dec  1. "Advent of Code" livestream in German&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="africa"&gt;Africa&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/cpdtkryzqbgb/"&gt;Dec  4. Johannesburg, ZA - Johannesburg Rust Meetup - Time for Some Highbrow FP in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/259481456/"&gt;Dec  2. Auckland, NZ - Rust AKL - Introduction to Rust (part 3)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Mozilla-Torino/events/265961100"&gt;Nov 21. Turin, IT - Mozilla Torino - Gruppo di studio Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Vienna/events/266365092/"&gt;Nov 26. Vienna, AT - Rust Vienna - El rust de vienna&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/nxdpgryzpbkc/"&gt;Nov 27. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cph.rs/"&gt;Nov 27. Copenhagen, DK - Copenhagen Rust Hack Night #20&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpyzpbhc/"&gt;Nov 25. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmyzpbjc/"&gt;Nov 26. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/rwcpfryzpbkc/"&gt;Nov 27. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Desert-Rustaceans/events/wmmphryzpbkc/"&gt;Nov 27. Mesa, AZ, US - Desert Rust - Rust: Crates and Organization&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Bay-Area/events/266571982"&gt;Dec  3. San Francisco, CA, US - Rust Bay Area - [@ Cloudflare] Declarative UIs in Rust and Real-world production CLIs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/mffbtpyzqbgb/"&gt;Dec  4. Indianapolis, IN, US - Indy.rs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/PDXRust/events/264733991/"&gt;Dec  4. Portland, OR, US - PDXRust - macros_rule!&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/dvxw6u/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Official /r/rust "Who's Hiring" thread for job-seekers and job-offerers [Rust 1.39]&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://consensys.net/open-roles/1792013/"&gt;Senior Software Engineer at ConsenSys R&amp;amp;D, Remote&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apply.workable.com/sense/j/ADDB5A7717/"&gt;Embedded Software Engineer at Sense (Rust/C/Python), Cambridge, MA, US&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/"&gt;Rust/Core Developer at Parity, Berlin, DE (Remote available)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/jobs/296070/senior-rust-webgl-developer-luna"&gt;Senior Rust WebGL Developer at Luna, KrakÃ³w, PL (Remote available)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;p&gt;This week, we have two quotes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Telling a programmer there's already a library to do X is like telling a songwriter there's already a song about love.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;â€“ &lt;a href="https://twitter.com/petecordell/status/428542622844477441"&gt;PeteCordell on twitter&lt;/a&gt;, as &lt;a href="https://www.youtube.com/watch?v=lpOg2nl3kr0"&gt;quoted in a recent Rust Gamedev meetup&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Well a Museum purpose is also memory safety, I guess.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;â€“ &lt;a href="https://www.reddit.com/r/rust/comments/dxh6pg/why_is_trpl_sold_in_the_gift_shop_at_the_spy/f7r8d3k?utm_source=share&amp;amp;utm_medium=web2x"&gt;/u/xav_19 on /r/rust&lt;/a&gt; commenting on a post asking why "The Rust Programming Language" is sold in Washington D.C.'s spy museum's gift shop&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/737"&gt;Matthieu M.&lt;/a&gt; and &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/739"&gt;ZiCog&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/dz3uvq/this_week_in_rust_313/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 312</title><link href="https://this-week-in-rust.org/blog/2019/11/12/this-week-in-rust-312/" rel="alternate"></link><updated>2019-11-12T00:00:00-05:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-11-12:blog/2019/11/12/this-week-in-rust-312/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ðŸŽˆðŸŽ‰ &lt;a href="https://blog.rust-lang.org/2019/11/07/Rust-1.39.0.html"&gt;Announcing Rust 1.39.0&lt;/a&gt;. ðŸŽ‰ðŸŽˆ&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/11/07/Async-await-stable.html"&gt;Async-await on stable Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://async.rs/blog/announcing-async-std-1-0/"&gt;Announcing async-std 1.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang-nursery/futures-rs/releases/tag/0.3.0"&gt;Futures 0.3 released (with async/await support)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://parallel-rust-cpp.github.io/"&gt;Comparing parallel Rust and C++&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.auxon.io/2019/10/25/type-level-registers/"&gt;Using type-level programming in Rust to make safer hardware abstractions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/teh-cmc/rust-async/blob/master/README.md"&gt;Demystifying asynchronous Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.gnome.org/~federico/blog/css-in-librsvg-is-now-in-rust.html"&gt;CSS in librsvg is now in Rust, courtesy of Mozilla Servo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gankra.github.io/blah/swift-abi/"&gt;How Swift achieved dynamic linking where Rust couldn't&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc-blog.microsoft.com/2019/11/07/using-rust-in-windows/"&gt;Experimental rewrite of a low-level system component of the Windows codebase&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boats.gitlab.io/blog/post/iou/"&gt;iou: Rust bindings for liburing&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://samsartor.com/coroutines-1/"&gt;Generalizing coroutines in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gankra.github.io/blah/rust-layouts-and-abis/"&gt;Notes on type layouts and ABIs in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.redsift.com/labs/putting-rust-in-the-kernel-with-ebpf/"&gt;Putting Rust in the kernel with eBPF&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adventures.michaelfbryan.com/posts/working-with-gcode/"&gt;Adventures in Motion Control: Working With G-Code&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.meilisearch.com/search-rust-crates-meili/"&gt;Search for Rust crates with Meili&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust2020"&gt;#Rust2020&lt;/h3&gt;
&lt;p&gt;Find all #Rust2020 posts at &lt;a href="https://readrust.net/rust-2020/"&gt;Read Rust&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week has multiple crates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://crates.io/crates/accurate"&gt;accurate&lt;/a&gt;, accumulator types for more accurate (or even provably correct) sum and dot product of floating-point numbers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dureuill/transfer"&gt;transfer&lt;/a&gt;, a crate to transfer values between pinned instances.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whatisaphone/genawaiter"&gt;genawaiter&lt;/a&gt;, a crate to allow generators on stable Rust.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/666"&gt;Nestor Demeure&lt;/a&gt; and &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/669"&gt;Willi Kappler&lt;/a&gt; for the suggestions!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/crates.io/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3AE-mentor"&gt;crates.io: carols10cents will be mentoring multiple issues for the month of November &amp;amp; December&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jackmott/simdeez/issues/17"&gt;simdeez: Create SIMD sin/cos/log etc functions as in agner fog's vector libraries&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vorner/spirit/issues/45"&gt;Spirit: Tokio 0.2 and hyper 0.13 support&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vorner/spirit/issues/46"&gt;Spirit: Support for slog&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;310 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-11-04..2019-11-11"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/compiler-builtins/pull/324"&gt;compiler-builtins: Gate atomic intrinsics on presence of instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66050"&gt;Fix C aggregate-passing ABI on powerpc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65838"&gt;Reduce amount of errors given unclosed delimiter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65835"&gt;Remove LintBuffer from Session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66188"&gt;Rename &lt;code&gt;MethodSig&lt;/code&gt; â†’ &lt;code&gt;FnSig&lt;/code&gt; and use it in &lt;code&gt;ItemKind::Fn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65750"&gt;Cheaper doc comments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/276"&gt;Chalk: Implement lowering errors manually&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65933"&gt;Use &lt;code&gt;ptr::drop_in_place&lt;/code&gt; for &lt;code&gt;VecDeque::&lt;/code&gt;{&lt;code&gt;truncate&lt;/code&gt;, &lt;code&gt;clear&lt;/code&gt;}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65879"&gt;Stabilize the &lt;code&gt;re_rebalance_coherence&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65580"&gt;Add &lt;code&gt;MaybeUninit&lt;/code&gt; methods &lt;code&gt;uninit_array&lt;/code&gt;, &lt;code&gt;slice_get_ref&lt;/code&gt;, &lt;code&gt;slice_get_mut&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/123"&gt;hashbrown: Remove BuildHasher requirement from raw entry APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/130"&gt;hashbrown: Optimize set union and intersection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/4714"&gt;clippy: Remove plugin interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/65355"&gt;Stabilize &lt;code&gt;!&lt;/code&gt; in Rust 1.41.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/66322"&gt;Stabilize Result::map_or_else&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2811"&gt;Generic parameters in derive&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2814"&gt;Adding is_zero() to core::time::Duration&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Zurich/events/265593126/"&gt;Nov 14. Zurich, CH - Rust Zurich - RustFest Decompression ZÃ¼rich&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/ru-RU/Rust-%D0%B2-%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B5/events/266184946/"&gt;Nov 14. Moscow, RU - Rust Moscow November 2019 Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Zagreb-Rust-Meetup/events/266226748"&gt;Nov 14. Zagreb, HR - impl Zagreb for Rust - Rust Meetup 201911: Proceduralni makroi&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Barcelona-Free-Software/events/265596417/"&gt;Nov 15. Barcelona, ES - Rust GTK/GStreamer Workshop at Linux Application Summit 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lugsapienza.altervista.org/corsorust-nov2019"&gt;Nov 19-21, Rome, Italy - Weekly Rust course at "La Sapienza" University&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Mozilla-Torino/events/265961100"&gt;Nov 21. Turin, IT - Mozilla Torino - Gruppo di studio Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/nxdpgryzpbkc/"&gt;Nov 27. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/265981542/"&gt;Nov 14. San Diego, CA, US - San Diego Rust November Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/265905259/"&gt;Nov 14. Lehi, UT, US - Utah Rust - November 2019 Regular Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgryzpbsb/"&gt;Nov 14. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Montreal/events/prvrjryzpbqb/"&gt;Nov 14. Montreal, QC, CA - Montreal Rust Meetup - November 2019 RustMTL: November Common Traits &amp;amp; Causal Profiling&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/265769078"&gt;Nov 14. Arlington, VA, US - Rust DC â€” Mid-month Rustful&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/PDXRust/events/265998640/"&gt;Nov 20. Portland, OR, US - PDXRust - Hack Night&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Ann-Arbor-Rust-Meetup/events/zdfscryzpbkc/"&gt;Nov 20. Ann Arbor, MI, US - Ann Arbor Rust Meetup - Monthly Gathering&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Chicago-Rust-Meetup/events/266237535/"&gt;Nov 20. Chicago, IL, US - Chicago Rust Meetup - Constructing a Repl(like) from scratch&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpyzpbhc/"&gt;Nov 25. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmyzpbjc/"&gt;Nov 26. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/rwcpfryzpbkc/"&gt;Nov 27. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://careers.mozilla.org/position/gh/1948149/"&gt;Rust Team Engineer at Mozilla, multiple locations &amp;amp; remote&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#undefined-rust-core-developer"&gt;Rust/Core Developer at Parity, Berlin, DE (Remote available)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;In my experience, prayers are not a very effective concurrency primitive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;â€“ &lt;a href="https://lord.io/blog/2019/text-editing-hates-you-too/"&gt;Robert Lord on his blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/727"&gt;Stephan Sokolow&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/dvsuio/this_week_in_rust_312/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 311</title><link href="https://this-week-in-rust.org/blog/2019/11/05/this-week-in-rust-311/" rel="alternate"></link><updated>2019-11-05T00:00:00-05:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-11-05:blog/2019/11/05/this-week-in-rust-311/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/11/01/nll-hard-errors.html"&gt;Completing the transition to the new borrow checker&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kennykerr.ca/2019/11/05/rust/"&gt;Rust support for Windows Runtime in the works by the author of C++ WinRT&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/dp3s25/psa_you_probably_didnt_want_into_itercloned/"&gt;You probably didn't want &lt;code&gt;.into_iter().cloned()&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2019/11/04/Clippy-removes-plugin-interface.html"&gt;Clippy is removing its plugin interface&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@polyglot_factotum/rust-concurrency-patterns-condvars-and-locks-e278f18db74f"&gt;Rust concurrency patterns: condvars and locks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://about.houqp.me/posts/rusty-c/"&gt;How to make your C codebase rusty: rewriting keyboard firmware keymap in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fitzgeraldnick.com/2019/11/01/always-bump-downwards.html"&gt;When writing a bump allocator, always bump downwards&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adventures.michaelfbryan.com/posts/initial-motion-system/"&gt;Adventures in motion control: initial motion system&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2019/10/30/compiler-team-meeting.html"&gt;2019-10-24 compiler team triage meeting&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust2020"&gt;#Rust2020&lt;/h3&gt;
&lt;p&gt;Find all #Rust2020 posts at &lt;a href="https://readrust.net/rust-2020/"&gt;Read Rust&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/yaahc/displaydoc"&gt;displaydoc&lt;/a&gt;, a procedural derive macro to implement &lt;code&gt;Display&lt;/code&gt; by string-interpolating the doc comment.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/652"&gt;Willi Kappler&lt;/a&gt; for the suggesion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-secure-code/safety-dance"&gt;Announcing safety-dance: removing unnecessary unsafe code from popular crates&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2801"&gt;RFC: make Cargo embed dependency versions in the compiled binary&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/holmgr/cargo-sweep/issues/26"&gt;cargo-sweep: Could cargo-sweep work without rustup&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/jonas-schievink/rubble/issues/89"&gt;Rubble: Add a function for reading the device address to rubble-nrf52&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/jonas-schievink/rubble/issues/77"&gt;Rubble: Don't give up when missing the initial transmit window&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/jonas-schievink/rubble/issues/74"&gt;Rubble: LLCP updates are not applied when the event is missed&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/jonas-schievink/rubble/issues/69"&gt;Rubble: Log buffer overflow on nrf52832&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/jonas-schievink/rubble/issues/53"&gt;Rubble: Try out &lt;code&gt;scroll&lt;/code&gt; or &lt;code&gt;zerocopy&lt;/code&gt; for de/encoding of PDUs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/jonas-schievink/rubble/issues/49"&gt;Rubble: Only reply to LL_VERSION_IND once&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;217 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-10-28..2019-11-04"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65646"&gt;Allow foreign exceptions to unwind through Rust code and Rust panics to unwind through FFI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66078"&gt;expand: Feature gate out-of-line modules in proc macro input&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65294"&gt;Lint ignored &lt;code&gt;#[inline]&lt;/code&gt; on function prototypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65562"&gt;Improve the "try using a variant of the expected type" hint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65640"&gt;Use heuristics to recover parsing of missing &lt;code&gt;;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65421"&gt;Point at local similarly named element and tweak references to variants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65068"&gt;Custom lifetime error for &lt;code&gt;impl&lt;/code&gt; item doesn't conform to &lt;code&gt;trait&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65112"&gt;Add lint and tests for unnecessary parens around types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65643"&gt;Correct handling of type flags with &lt;code&gt;ConstValue::Placeholder&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65914"&gt;Use structured suggestion for unnecessary bounds in type aliases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65936"&gt;save-analysis: Account for async desugaring in async fn return types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65979"&gt;Switch CrateMetadata's source_map_import_info from RwLock to Once&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65927"&gt;Don't use &lt;code&gt;eval_always&lt;/code&gt; for miri queries used from codegen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65825"&gt;rustc: use IndexVec&lt;DefIndex, T&gt; instead of Vec&lt;T&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65946"&gt;Make &lt;code&gt;promote_consts&lt;/code&gt; emit the errors when required promotion fails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65091"&gt;Implement ordered/sorted iterators on &lt;code&gt;BinaryHeap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/63810"&gt;Make &lt;code&gt;*&lt;/code&gt;{&lt;code&gt;const&lt;/code&gt;, &lt;code&gt;mut&lt;/code&gt;} &lt;code&gt;T&amp;gt;::offset_from&lt;/code&gt; const fn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66002"&gt;Stabilize &lt;code&gt;float_to_from_bytes&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/125"&gt;hashbrown: Introduce &lt;code&gt;ahash-compile-time-rng&lt;/code&gt; feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7376"&gt;cargo: Add --filter-platform to &lt;code&gt;cargo metadata&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7550"&gt;cargo: Fix &lt;code&gt;cargo fix&lt;/code&gt; not showing colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/270"&gt;chalk: Remove delayed literals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/269"&gt;chalk: Add TypeName::Error variant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/263"&gt;chalk: Output multiple solutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/63803"&gt;rustdoc: Stabilize &lt;code&gt;cfg(doctest)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2797"&gt;Announcing the FFI-unwinding Project Group&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: postpone] &lt;a href="https://github.com/rust-lang/rfcs/pull/2474"&gt;Signing registry index commits&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/64882"&gt;Stabilize --extern flag without a path&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/64694"&gt;Fully integrate derive helpers into name resolution&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/64432"&gt;Make the semantics of Vec::truncate(N) consistent with slices&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/65933"&gt;Use ptr::drop_in_place for VecDeque::truncate and VecDeque::clear&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2799"&gt;Add method Result::into_ok&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2801"&gt;Make Cargo embed dependency versions in the compiled binary&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2802"&gt;Vec::recycle&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2803"&gt;Target tier policy&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2806"&gt;[T]::rejoin&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSfZM9XYmBXq9tjqRziR-O3vBmm4rt1Ltnc9bGcleVrLmZHrSg/viewform"&gt;Nov 13. Selangor, MY - Rust Malaysia Meetup November 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://barcelona.rustfest.eu/"&gt;Nov 9 &amp;amp; 10. Barcelona, ES - RustFest Barcelona 2019&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Meetup-Hamburg/events/265899865/"&gt;Nov 12. Hamburg, DE - Rust Hack &amp;amp; Learn November 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wroclaw/events/265813648/"&gt;Nov 13. WrocÅ‚aw, PL - Rust WrocÅ‚aw Meetup #14&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/nxdpgryzpbrb/"&gt;Nov 13. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Zurich/events/265593126/"&gt;Nov 14. Zurich, CH - Rust Zurich - RustFest Decompression ZÃ¼rich&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/ru-RU/Rust-%D0%B2-%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B5/events/266184946/"&gt;Nov 14. Moscow, RU - Rust Moscow November 2019 Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Barcelona-Free-Software/events/265596417/"&gt;Nov 15. Barcelona, ES - Rust GTK/GStreamer Workshop at Linux Application Summit 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Mozilla-Torino/events/265961100"&gt;Nov 21. Turin, IT - Mozilla Torino - Gruppo di studio Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/prbtdryzpbqb/"&gt;Nov 12. Seattle, WA, US - Seattle Rust Meetup - Monthly meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/qxqdgryzpbrb/"&gt;Nov 13. Atlanta, GA, US - Grab a beer with fellow Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/rwcpfryzpbrb/"&gt;Nov 13. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/265981542/"&gt;Nov 14. San Diego, CA, US - San Diego Rust November Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/265905259/"&gt;Nov 14. Lehi, UT, US - Utah Rust - November 2019 Regular Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgryzpbsb/"&gt;Nov 14. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Montreal/events/prvrjryzpbqb/"&gt;Nov 14. Montreal, QC, CA - Montreal Rust Meetup - November 2019 RustMTL: November Common Traits &amp;amp; Causal Profiling&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/PDXRust/events/265998640/"&gt;Nov 20. Portland, OR, US - PDXRust - Hack Night&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.commure.com/#jobSection"&gt;Rust Engineer at Commure, Inc. (San Francisco, Boston, Montreal)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.swiftnav.com/join-us/jobs-listing?gh_jid=4369805002"&gt;Data Analysis Software Engineer at Swift Navigation, San Francisco, US&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#undefined-rust-core-developer"&gt;Rust/Core Developer at Parity, Berlin, DE (Remote available)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I did manage to get this compile in the end - does anyone else find that the process of asking the question well on a public forum organizes their thoughts well enough to solve the problem?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;â€“ &lt;a href="https://users.rust-lang.org/t/std-phantomdata-and-unused-fields-in-structs/34271/3"&gt;David Mason on rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/725"&gt;Daniel H-M&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/dsj5uo/this_week_in_rust_311/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry></feed>