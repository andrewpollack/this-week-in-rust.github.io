<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>This Week in Rust</title><link>https://this-week-in-rust.org/</link><description></description><atom:link href="https://this-week-in-rust.org/rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 16 Sep 2020 00:00:00 -0400</lastBuildDate><item><title>This Week in Rust 356</title><link>https://this-week-in-rust.org/blog/2020/09/16/this-week-in-rust-356/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/emberian/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;p&gt;No newsletters this week.&lt;/p&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/09/10/survey-launch.html"&gt;Launching the 2020 State of Rust Survey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/09/14/wg-prio-call-for-contributors.html"&gt;A call for contributors from the WG-prioritization team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tooling"&gt;Tooling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/09/14/changelog-42.html"&gt;Rust Analyzer Changelog #42&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tratt.net/laurie/blog/entries/which_parsing_approach.html"&gt;Which Parsing Approach?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io//blog/2020/09/16/challeging-LR-parsing.html"&gt;Challenging LR Parsing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matej.laitl.cz/bench-rust-kotlin-microservices/"&gt;What I Learnt from Benchmarking Http4k, Ktor (Kotlin) and Actix v2, v3 (Rust) Microservices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://samsieber.tech/posts/2020/09/registry-structure-influence/"&gt;No Namespaces in Rust is a Feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ianjk.com/devserver/"&gt;Building devserver: An Ultra-Tiny Rust Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jack.wrenn.fyi/blog/rustdocing-nalgebra/"&gt;Taming nalgebra's Rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amanjeev.com/blog/rust-in-science-and-ever-changing-requirements"&gt;Rust in Science and ever-changing requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mateuscosta.me/testing-between-java-and-rust"&gt;From @Test to #[test]: an essay about testing between Java and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matej.laitl.cz/bench-rust-kotlin-microservices/"&gt;What I Learnt from Benchmarking Http4k, Ktor (Kotlin) and Actix v2, v3 (Rust) Microservices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-standard-rust"&gt;Learn Standard Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://davidmaceachern.com/posts/collecting-data-from-an-api"&gt;Collecting Data from an API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiredforge.com/blog/sqlite-parser-pt-1/index.html"&gt;SQLite File Parser Pt. 1: The Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jamesmcm.github.io/blog/2020/07/25/intro-dod/"&gt;An introduction to Data Oriented Design with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.codecentric.de/en/2020/09/rust-for-java-developers/"&gt;Rust for Java developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://belmoussaoui.com/article/13-oxidizing-portals"&gt;Oxidizing portals with zbus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-more-rust"&gt;Learn More Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dpbriggs.ca/blog/Implementing-Method-Calls-In-x7"&gt;Implementing Records in x7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tjtelan/let-s-build-a-single-binary-grpc-server-client-with-rust-in-2020-part-4-3k9f"&gt;Let's build a single binary gRPC server-client with Rust in 2020 - Part 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arzg.github.io/lang/3/"&gt;Make A Language - Part Three: Defining variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexliesenfeld.com/posts/2020/rust-http-testing-with-httpmock/"&gt;Rust HTTP Testing with httpmock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-updates"&gt;Project Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.eldruin.com/ccs811-indoor-air-quality-sensor-driver-in-rust/"&gt;Announcing the CCS811 indoor air quality sensor driver&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwn.net/SubscriberLink/830902/b751810a99460a39/"&gt;OpenPGP in Rust: the Sequoia project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/dotxlem/assemblylift-v0-2-preview-rpc-based-io-modules-2d38"&gt;AssemblyLift v0.2 preview: RPC-based IO modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://paper.dropbox.com/published/Announcing-Actix-Web-v3.0-QOXXb1lXgTubzXHzUq9ONY5"&gt;Announcing Actix Web v3.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io//2020/09/13/your-language-sucks.html"&gt;Your Language Sucks, It Doesn't Matter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tiobe.com/tiobe-index/"&gt;Rust is #18 in the TIOBE Index for September 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shift.click/blog/github-actions-rust/"&gt;A Few Github Action "Recipes" for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vmm.dev/en/rust/krabs.md"&gt;Writing an x86 bootloader in Rust that can launch vmlinux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/ukVqQGbxM9A"&gt;GOTO 2020 - Next-Generation Programming: Rust &amp;amp; Elm - Richard Feldman&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="call-for-blog-posts"&gt;Call for Blog Posts&lt;/h1&gt;
&lt;p&gt;The Rust Core Team wants input from the community!
If you haven't already, &lt;a href="https://blog.rust-lang.org/2020/09/03/Planning-2021-Roadmap.html"&gt;read the official blog&lt;/a&gt; and submit a blog post - it will show up here!
Here are the wonderful submissions since the call for blog posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io/2020/09/12/rust-in-2021.html"&gt;Rust in 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hsivonen.fi/rust2021/"&gt;Rust 2021&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/Byron/gitoxide"&gt;gitoxide&lt;/a&gt;, an idiomatic, modern, lean, fast, safe &amp;amp; pure Rust implementation of git.&lt;/p&gt;
&lt;p&gt;Thanks again to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/812"&gt;Vlad Frolov&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No issues were proposed for CfP&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;336 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-09-07..2020-09-14"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76332"&gt;add rust-dev component to support rustc development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76658"&gt;properly encode spans with a dummy location and non-root &lt;code&gt;SyntaxContext&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75573"&gt;add &lt;code&gt;const_item_mutation&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75608"&gt;more structured suggestions for boxed trait objects instead of impl Trait on non-coerceable tail expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75611"&gt;add help note when using type in place of const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75585"&gt;do not promote &lt;code&gt;&amp;amp;mut&lt;/code&gt; of a non-ZST ever&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/602"&gt;chalk: simplify lowering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76123"&gt;inliner: emit storage markers for introduced arg temporaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76308"&gt;enable the &lt;code&gt;SimplifyArmIdentity&lt;/code&gt; MIR optimization at &lt;code&gt;mir-opt-level=1&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75740"&gt;stabilize &lt;code&gt;doc_alias&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74328"&gt;stabilize &lt;code&gt;core::future::&lt;/code&gt;{&lt;code&gt;pending&lt;/code&gt;,&lt;code&gt;ready&lt;/code&gt;}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76114"&gt;add saturating methods for &lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75021"&gt;add &lt;code&gt;slice::array_chunks_mut&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76530"&gt;eliminate mut reference UB in &lt;code&gt;Drop&lt;/code&gt; impl for &lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/73971"&gt;&lt;code&gt;BTreeMap&lt;/code&gt; mutable iterators should not take any reference to visited nodes during iteration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74437"&gt;&lt;code&gt;BTreeMap&lt;/code&gt;: move up reference to map's root from &lt;code&gt;NodeRef&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76458"&gt;add &lt;code&gt;drain_filter&lt;/code&gt; method to &lt;code&gt;HashMap&lt;/code&gt; and &lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/896"&gt;arch: AVX512F&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76484"&gt;add &lt;code&gt;MaybeUninit::assume_init_drop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76527"&gt;remove internal and unstable &lt;code&gt;MaybeUninit::UNINIT&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/8701"&gt;cargo: fix non-determinism with new feature resolver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-09-15.md"&gt;2020-09-15&lt;/a&gt;:
  0 regressions, 2 improvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A few small compile-time regressions this week. The first was
&lt;a href="https://github.com/rust-lang/rust/pull/70793"&gt;#70793&lt;/a&gt;, which added some
specializations to the standard library in order to increase runtime
performance. The second was
&lt;a href="https://github.com/rust-lang/rust/pull/73996"&gt;#73996&lt;/a&gt;, which adds an option to
the diagnostics code to print only the names of types and traits when they are
unique instead of the whole path. The third was
&lt;a href="https://github.com/rust-lang/rust/pull/75200"&gt;#75200&lt;/a&gt;, which refactored part
of &lt;code&gt;BTreeMap&lt;/code&gt; to avoid aliasing mutable references.&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2963"&gt;eRFC: Add JSON backend to Rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2977"&gt;[RFC]: Portable SIMD Libs Project Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2706"&gt;Get type of an arbitrary expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2702"&gt;Add generalized arity tuples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/76310"&gt;Add &lt;code&gt;[T; N]: TryFrom&amp;lt;Vec&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; (insta-stable)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/76275"&gt;Implementation of Write for some immutable ref structs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/76199"&gt;Permit uninhabited enums to cast into ints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/76136"&gt;Stabilize some Result methods as const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/76135"&gt;Stabilize some Option methods as const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/76119"&gt;Stabilize move_ref_pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/75454"&gt;Explicitly document the size guarantees that Option makes.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/74430"&gt;Stabilize intra-doc links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/issues/73631"&gt;target-feature 1.1: should closures inherit target-feature annotations?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/71274"&gt;might_permit_raw_init: also check aggregate fields&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2985"&gt;rustdoc edit links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/gbzjxrybcmbvb/"&gt;September 16. Vancouver, BC, CA - Vancouver Rust - Rust Study/Hack/Hang-out night&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/Rust-Linz/events/271857244/"&gt;September 17. Linz, AT - Rust Linz - Rust Meetup Linz - Meaghan Lewis on Rust, Embedded Rust with Roland Ruckerbauer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/txcprrybcmbwb/"&gt;September 17. Berlin, DE - Berline.rs - Berlin Rust Hack and Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/jqxqwrybcmbmc/"&gt;September 29. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://payward.wd1.myworkdayjobs.com/en-US/Kraken_Careers/job/EMEA---Remote/Backend-Engineer---Rust_L-42"&gt;Backend Engineer - Rust at Kraken (Remote AMER or EMEA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://payward.wd1.myworkdayjobs.com/en-US/Kraken_Careers/job/EMEA---Remote/Senior-Backend-Engineer---Rust--Remote-_R-17"&gt;Senior Backend Engineer - Rust at Kraken (Remote AMER or EMEA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://payward.wd1.myworkdayjobs.com/en-US/Kraken_Careers/job/EMEA---Remote/Backend---Quant-Developer_L-3"&gt;Backend / Quant Developer at Kraken (Remote EMEA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://payward.wd1.myworkdayjobs.com/en-US/Kraken_Careers/job/AMER---Remote/Backend-Engineer---Crypto-Payments_L-41"&gt;Backend Engineer - Crypto/Payments at Kraken (Remote AMER, APAC, EMEA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://anixe.bamboohr.com/jobs/view.php?id=130"&gt;Rust Software Engineer - Backend at ANIXE (Wrocław, PL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.purestake.com/about/careers/openings/?jobId=d2VA-4HA7Iw6&amp;amp;utm_content=138834881&amp;amp;utm_medium=social&amp;amp;utm_source=twitter&amp;amp;hss_channel=tw-1214659473123487744"&gt;Senior Blockchain Engineer at PureStake (Boston, MA, US or Madrid, ES, or Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.indeed.com/viewjob?cmp=Georg-Fischer-Signet&amp;amp;t=Senior+Embedded+Software+Engineer&amp;amp;jk=8757fb7de3b1c160&amp;amp;q=georg+fischer&amp;amp;vjs=3"&gt;Senior Embedded Software Engineer at Georg Fischer (El Monte, CA, US)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;When you have a lifetime &lt;code&gt;&amp;lt;'a&amp;gt;&lt;/code&gt; on a struct, that lifetime denotes references to values stored &lt;em&gt;outside&lt;/em&gt; of the struct. If you try to store a reference that points inside the struct rather than outside, you will run into a compiler error when the compiler notices you &lt;strong&gt;lied&lt;/strong&gt; to it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/how-to-resolve-error-e0499-cannot-borrow-as-mutable-more-than-once-at-a-time-in-this-case/48815/3"&gt;Alice Ryhl on rust-users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/939"&gt;Tom Phinney&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/iu3ge0/this_week_in_rust_356/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 16 Sep 2020 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2020-09-16:blog/2020/09/16/this-week-in-rust-356/</guid></item><item><title>This Week in Rust 355</title><link>https://this-week-in-rust.org/blog/2020/09/09/this-week-in-rust-355/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/emberian/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/09/03/Planning-2021-Roadmap.html"&gt;Planning the 2021 Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tooling"&gt;Tooling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/09/07/changelog-41.html"&gt;Rust Analyzer Changelog #41&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2020/09/07/changelog-130.html"&gt;IntelliJ Rust Changelog #130&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-gamedev.github.io/posts/newsletter-013/"&gt;This Month in Rust GameDev #13 - August 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-osdev.com/this-month/2020-08/"&gt;This Month in Rust OSDev (August 2020)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jamesmcm.github.io/blog/2020/09/05/vopono/#en"&gt;Retrospective of my first useful Rust project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-standard-rust"&gt;Learn Standard Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[TR] &lt;a href="https://tourofrust.com/00_tr.html"&gt;Rust Turu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/a-half-hour-to-learn-rust"&gt;A half-hour to learn Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/brunooliveira/rust-understanding-traits-1-45md"&gt;Rust - understanding traits 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/imaculate3/that-s-so-rusty-mutables-5b40"&gt;That's so Rusty: Mutables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=DMAnfOlhSpU"&gt;Choosing Rust - Intro to Rust and Ownership&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-more-rust"&gt;Learn More Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/linux-system-call-fork-in-rust/"&gt;Linux System Call &lt;code&gt;fork()&lt;/code&gt; in Rust &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/peeking-inside-a-rust-enum"&gt;Peeking inside a Rust enum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mozilla.org/nnethercote/2020/09/08/how-to-speed-up-the-rust-compiler-one-last-time/"&gt;How to speed up the Rust compiler one last time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.haiku-os.org/blog/nielx/2020-09-06_rust_on_haiku_the_case_of_the_disappearing_deceased_threads/"&gt;Rust on Haiku: the Case of the Disappearing Deceased Threads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@glaubercosta_11125/c-vs-rust-an-async-thread-per-core-story-28c4b43c410c"&gt;C++ vs Rust: an async Thread-per-Core story&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.digital-horror.com/twistrs/"&gt;Twistrs - Domain name enumeration library in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vorner.github.io/2020/09/03/performance-cheating.html"&gt;If you want performance, cheat!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.datalust.co/deserializing-json-really-fast/"&gt;Deserializing JSON really fast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://confused.ai/posts/intercepting-zoom-tls-encryption-bpf-uprobes"&gt;Intercepting Zoom's encrypted data with BPF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: This article uses methods that could be used illegally in many areas worldwide. Please do not use such methods illegally. The This Week in Rust team and the Rust project leadership are not responsible for any illegal activity by readers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arzg.github.io/lang/0"&gt;Make A Language - Part Zero: Getting set up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arzg.github.io/lang/1"&gt;Make A Language - Part One: A basic parser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arzg.github.io/lang/2"&gt;Make A Language - Part Two: Whitespace support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tjtelan/let-s-build-a-single-binary-grpc-server-client-with-rust-in-2020-part-3-3fo8"&gt;Let's build a singl binary gRPC server-client with Rust in 2020 - Part 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/Measter/2108508ba25ebe3978a6c10a1e01b9ad"&gt;My Adventures in MMIO Abstraction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prateeknischal.github.io/i-c-and-so-does-rust/"&gt;I C and .so does Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fpcomplete.com/blog/http-status-codes-async-rust/"&gt;HTTP Status Codes With Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PL] &lt;a href="https://postacnormalna.pl/ruch-kamery/"&gt;CrabbyBird #2 Poruszanie kamerą&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/VIZK14pnGcw"&gt;Using rust jni to call an external rust library in java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/HO-KMVXvXdA"&gt;1 - Basic Actix Web Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/p22KFotfMYg"&gt;2 - Creating the Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/tK7qt0igtZA"&gt;3 - Working with the Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/lxBxeKOZu3w"&gt;4 - Getting the links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-updates"&gt;Project Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alastairreid.github.io/why-not-both/"&gt;Rust testing or verifying: Why not both?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/knurling-sessions-introduction/"&gt;Learning Embedded Rust with Knurling-rs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.marcoieni.com/2020/09/create-an-amazing-rust-github-project-in-no-time/"&gt;Create an amazing Rust GitHub project in no time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ncameron.org/blog/leaving-the-rust-core-team/"&gt;Leaving the Rust core team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bobweb.co/article/threadripper-meets-rustc"&gt;Threadripper meets rustc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.mpi-sws.org/~jung/thesis.html"&gt;Understanding and Evolving the Rust Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.aloni.org/posts/path-trimming-in-rust-nightly/"&gt;Path Trimming in Nightly Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://evrone.com/steve-klabnik-interview"&gt;Steve Klabnik Interview - "Rust isn't afraid to be imperfect as long as we ship something useful"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Dhghomon/programming_at_40/blob/master/README.md"&gt;On finally learning to program at the age of 40&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/1r094Uzz7A0"&gt;Iota Identity-Diff Macro - Live Stream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/pandaman64/serde-query/"&gt;serde-query&lt;/a&gt;, an efficient query language for Serde.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/810"&gt;Vlad Frolov&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No issues were proposed for CfP&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;332 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-08-31..2020-09-07"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76245"&gt;inliner: avoid query cycles when optimizing generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/73996"&gt;diagnostics: shorten paths of unique symbols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75082"&gt;add &lt;code&gt;-Z proc-macro-backtrace&lt;/code&gt; to allow showing proc-macro panics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75931"&gt;suggest &lt;code&gt;if let x = y&lt;/code&gt; when encountering &lt;code&gt;if x = y&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76067"&gt;MIR peephole optimize {Ne, Eq}(_1, false) into _1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1532"&gt;miri: move panic payload state from Machine to Thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75529"&gt;eliminate some other bound checks when index comes from an enum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76160"&gt;improve recovery on malformed &lt;code&gt;format!&lt;/code&gt; call&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70793"&gt;specialize some collection and iterator operations to run in-place&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74559"&gt;stabilize &lt;code&gt;deque_make_contiguous&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75207"&gt;add &lt;code&gt;slice::check_range&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75200"&gt;BTreeMap: introduce marker::ValMut and reserve Mut for unique access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76120"&gt;add &lt;code&gt;[T; N]::as_[mut_]slice&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74366"&gt;implement &lt;code&gt;Seek::stream_position()&lt;/code&gt; for &lt;code&gt;BufReader&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75994"&gt;&lt;code&gt;impl Rc::new_cyclic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/76139"&gt;make &lt;code&gt;cow_is_borrowed&lt;/code&gt; methods const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/compiler-builtins/pull/332"&gt;compiler-builtins: greatly improve division performance for u128 and other cases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/890"&gt;stdarch: bye bye MMX!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/891"&gt;stdarch: AVX512&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2205"&gt;futures-rs: implement &lt;code&gt;FusedStream&lt;/code&gt; for &lt;code&gt;FuturesOrdered&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2206"&gt;futures-rs: fix UB due to missing &lt;code&gt;'static&lt;/code&gt; on &lt;code&gt;task::waker&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/197"&gt;hashbrown: use the alloc crate on stable Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/200"&gt;hashbrown: remove &lt;code&gt;from_key_hashed_nocheck&lt;/code&gt;'s &lt;code&gt;Q: Hash&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-09-08.md"&gt;2020-09-08&lt;/a&gt;:
  3 regressions, 0 improvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A few small compile-time regressions this week. The first was
&lt;a href="https://github.com/rust-lang/rust/pull/70793"&gt;#70793&lt;/a&gt;, which added some
specializations to the standard library in order to increase runtime
performance. The second was
&lt;a href="https://github.com/rust-lang/rust/pull/73996"&gt;#73996&lt;/a&gt;, which adds an option to
the diagnostics code to print only the names of types and traits when they are
unique instead of the whole path. The third was
&lt;a href="https://github.com/rust-lang/rust/pull/75200"&gt;#75200&lt;/a&gt;, which refactored part
of &lt;code&gt;BTreeMap&lt;/code&gt; to avoid aliasing mutable references.&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2977"&gt;[RFC]: Portable SIMD Libs Project Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2965"&gt;Establish a new error handling project group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/76310"&gt;Add &lt;code&gt;[T; N]: TryFrom&amp;lt;Vec&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; (insta-stable)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/76198"&gt;Make some Ordering methods const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/76136"&gt;Stabilize some Result methods as const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/76135"&gt;Stabilize some Option methods as const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/75502"&gt;Use implicit (not explicit) rules for promotability by default in &lt;code&gt;const fn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/74989"&gt;Implement &lt;code&gt;Index&lt;/code&gt; and &lt;code&gt;IndexMut&lt;/code&gt; for arrays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/issues/50146"&gt;Tracking issue for &lt;code&gt;#[doc(alias = "...")]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-NYC/events/272982073/"&gt;September 9. East Coast, US - Rust East Coast Virtual Talks + Q&amp;amp;A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-%D0%B2-%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B5/events/272798484/"&gt;September 11. Russia - Russian Rust Online Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/gbzjxrybcmbvb/"&gt;September 16. Vancouver, BC, CA - Vancouver Rust - Rust Study/Hack/Hang-out night&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/Rust-Linz/events/271857244/"&gt;September 17. Linz, AT - Rust Linz - Rust Meetup Linz - Meaghan Lewis on Rust, Embedded Rust with Roland Ruckerbauer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/txcprrybcmbwb/"&gt;September 17. Berlin, DE - Berline.rs - Berlin Rust Hack and Learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/qxqdgrybcmbmb/"&gt;September 9. Atlanta, GA, US - Rust Atlanta - Grab a beer with fellow Rustaceans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/268567961/"&gt;September 10. Lehi, UT, US - Utah Rust - The Blue Pill: Rust on Microcontrollers (Sept / Second Round)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;It's amazing how frequent such "rare edge cases" can be. Especially when there are millions of people using billions of files originating from God know what operating systems. Far better things are checked properly if one want robust code. As Rust uses do.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/disappointed-with-path/48148/5"&gt;ZiCog on rust-users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/938"&gt;Edoardo Morandi&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/ippv0q/this_week_in_rust_355/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 09 Sep 2020 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2020-09-09:blog/2020/09/09/this-week-in-rust-355/</guid></item><item><title>This Week in Rust 354</title><link>https://this-week-in-rust.org/blog/2020/09/04/this-week-in-rust-354/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/emberian/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/08/27/Rust-1.46.0.html"&gt;Announcing Rust 1.46.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tooling"&gt;Tooling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/08/31/changelog-40.html"&gt;Rust Analyzer Changelog #40&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kobzol.github.io/rust/intellij/2020/08/25/contributing-2-subst-assoc-type-int.html"&gt;Contributing to the IntelliJ Rust plugin: Writing an intention&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rustinblockchain.org/newsletters/2020-09-02-turbofish-in-the-blocksea/"&gt;Rust in Blockchain Newsletter #15 - Turbofish in the Blocksea&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://edfloreshz.blog/should-we-trust-rust-with-the-future-of-systems-programming"&gt;Should we trust Rust with the future of systems programming?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://andreaskroepelin.de/blog/sum_types/"&gt;Optionality in the type systems of Julia and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/e_net4/migrating-from-quick-error-to-snafu-a-story-on-revamped-error-handling-in-rust-58h9"&gt;Migrating from quick-error to SNAFU: a story on revamped error handling in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prateeknischal.github.io/go-use-those-traits/"&gt;Go use those Traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://moletrooper.github.io/blog/2020/08/starframe-1-architecture/"&gt;Starframe devlog: Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jojolepro.com/blog/2020-08-20_event_chaining/"&gt;Event Chaining as a Decoupling Method in Entity-Component-System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/rust-serialization-whats-ready-for-production-today/"&gt;Rust serialization: What's ready for production today?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/pulse/rust-goodness-case-study-matthew-sherborne"&gt;rust vs scripted languages; a short case study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/hintergrund/Entwicklung-Warum-Rust-die-Antwort-auf-miese-Software-und-Programmierfehler-ist-4879795.html"&gt;Entwicklung: Warum Rust die Antwort auf miese Software und Programmierfehler ist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/iOBXVOAbpdY"&gt;Is Rust Used Safely by Software Developers?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-standard-rust"&gt;Learn Standard Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.thomascountz.com/2018/07/09/ownership-in-rust-part-1"&gt;Ownership in Rust, Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thomascountz.com/2018/07/11/ownership-in-rust-part-2"&gt;Ownership in Rust, Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/jbachhardie/learning-rust-1-install-things-and-read-a-file-5613"&gt;Learning Rust 1: Install things and read a file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/jbachhardie/learning-rust-2-a-tiny-database-is-born-eef"&gt;Learning Rust 2: A Tiny Database is Born&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/imaculate3/that-s-so-rusty-ownership-493c"&gt;That's so Rusty: Ownership&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-more-rust"&gt;Learn More Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ecorax.net/as-above-so-below-2/"&gt;As above, so below: Bare metal Rust generics 2/2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sgolem.com/halite-iii-bot-development-kit-in-rust"&gt;Halite III Bot Development Kit in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lpalmieri.com/posts/2020-08-31-zero-to-production-3-5-html-forms-databases-integration-tests/"&gt;Zero To Production #3.5: HTML forms, Databases, Integration tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://belkadan.com/blog/2020/08/Objective-Rust/"&gt;Objective-Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/rust-web-apps-using-rocket-framework/"&gt;Building web apps with Rust using the Rocket framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hassamuddin.com/blog/rust-mqtt/channels/"&gt;Writing an asynchronous MQTT Broker in Rust - Part 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pkolaczk.github.io/multiple-threadpools-rust/"&gt;Multiple Thread Pools in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://willcrichton.net/notes/type-directed-metaprogramming-in-rust/"&gt;Type-directed metaprogramming in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rustyoctopus/generating-static-arrays-during-compile-time-in-rust-10d8"&gt;Generating static arrays during compile time in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tjtelan/let-s-build-a-single-binary-grpc-server-client-with-rust-in-2020-part-2-1i2e"&gt;Let's build a single binary gRPC server-client with Rust in 2020 - Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/rust-webassembly-serverless-tencent-cloud/"&gt;How to use Rust + WebAssembly to Perform Serverless Machine Learning and Data Visualization in the Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.darrien.dev/posts/fireworks-for-your-terminal/"&gt;Fireworks for your terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jamesmcm.github.io/blog/2020/08/29/rust-ses/#en"&gt;Serverless Data Ingestion with Rust and AWS SES&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datacrayon.com/posts/programming/rust-notebooks/box-plots-at-the-olympics/"&gt;Box Plots at the Olympics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jack.wrenn.fyi/blog/include-transmute/"&gt;Fixing include_bytes!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rustyoctopus/generating-static-arrays-during-compile-time-in-rust-10d8"&gt;Generating static arrays during compile time in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PL] &lt;a href="https://postacnormalna.pl/animacja-kraboptaka/"&gt;CrabbyBird #1 O tym, jak animować postać gracza&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/okdFx6tv7ds"&gt;FLTK Rust: Creating a music player with customized widgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-updates"&gt;Project Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alex-dukhno.github.io/2020-08-29-This-August-in-my-Database-project-written-in-rust-copy/"&gt;This August in my database project written in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kentik.com/blog/using-rust-for-kentiks-new-synthetic-network-monitoring-agent/"&gt;Using Rust for Kentik's New Synthetic Monitoring Agent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zdnet.com/article/aws-introduces-bottlerocket-a-rust-language-oriented-linux-for-containers/"&gt;AWS introduces Bottlerocket: A Rust language-oriented Linux for containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/cargo-test-with-panic-probe/"&gt;Using &lt;code&gt;cargo test&lt;/code&gt; for embedded testing with &lt;code&gt;panic-probe&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://headcrab.rs/2020/08/31/august-update.html"&gt;Headcrab: August 2020 progress report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/blog/2020/08/20/financial-report.html"&gt;Rust Analyzer 2020[..6] Financial Report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.justanotherdot.com/posts/avoid-build-cache-bloat-by-sweeping-away-artifacts.html"&gt;Avoid Build Cache Bloat By Sweeping Away Artifacts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/ijpxz2/const_fn_makes_it_too_easy_to_do_mandelbrots/"&gt;const_fn makes it too easy to do mandelbrots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Linux-Kernel-Rust-Path-LPC2020"&gt;Linux Developers Continue Evaluating The Path To Adding Rust Code To The Kernel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwn.net/SubscriberLink/829858/281103f9c6fd0dc2/"&gt;Supporting Linux kernel development in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[video] &lt;a href="https://youtu.be/FFjV9f_Ub9o"&gt;LPC 2020 - LLVM MC&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://jamesmcm.github.io/blog/2020/08/29/rust-ses/#en"&gt;Serverless Data Ingestion with Rust and AWS SES&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://immunant.com/blog/2020/09/transpiled_c_safety/"&gt;Refactoring Rust Transpiled from C&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/gluesql/gluesql"&gt;GlueSQL&lt;/a&gt;, a SQL database engine written in Rust with WebAssembly support.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/807"&gt;Taehoon Moon&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alex-dukhno/database/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;Database in Rust is looking for contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/docs.rs/issues/1013"&gt;Docs.rs is looking for help adding a changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/out-of-cheese-error/gooseberry/labels/good%20first%20issue"&gt;Gooseberry has several good first issues with mentoring available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imsnif/diskonaut/issues/68"&gt;Diskonaut - Option to delete without confirmation?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imsnif/diskonaut/issues/15"&gt;Diskonaut - Feature: only show "(x = Small files)" legend when there are small files on the screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/imsnif/diskonaut/issues/18"&gt;Diskonaut - Feature: error reporting with clean stacktraces&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;326 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-08-24..2020-08-31"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75933"&gt;point to a move-related span when pointing to closure upvars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70212"&gt;abort when foreign exceptions are caught by &lt;code&gt;catch_unwind&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75370"&gt;new pass to optimize &lt;code&gt;if&lt;/code&gt; conditions on integrals to switches on the integer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75912"&gt;suggest &lt;code&gt;mem::forget&lt;/code&gt; if &lt;code&gt;mem::ManuallyDrop::new&lt;/code&gt; isn't used&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75779"&gt;improve error message when typo is made in &lt;code&gt;format!&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75687"&gt;allow reallocation to different alignment in &lt;code&gt;AllocRef&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/884"&gt;add some avx512f intrinsics for mask, rotation, shift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75463"&gt;make some &lt;code&gt;Ordering&lt;/code&gt; methods const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75132"&gt;stabilize {&lt;code&gt;Range&lt;/code&gt;, &lt;code&gt;RangeInclusive&lt;/code&gt;}&lt;code&gt;::is_empty&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75936"&gt;get rid of bounds check in &lt;code&gt;slice::chunks_exact()&lt;/code&gt; and related functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/887"&gt;stdarch: avx512&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/195"&gt;hashbrown: make &lt;code&gt;with_hasher&lt;/code&gt; functions const fn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/190"&gt;hashbrown: implement &lt;code&gt;replace_entry_with&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/5909"&gt;clippy: add a lint for an async block/closure that yields a type that is itself awaitable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75775"&gt;use &lt;code&gt;rustc_lexer&lt;/code&gt; for rustdoc syntax highlighting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75815"&gt;report an ambiguity if both modules and primitives are in scope for intra-doc links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75330"&gt;rustdoc: improve rendering of crate features via &lt;code&gt;doc(cfg)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/docs.rs/pull/1000"&gt;docs.rs: separate metadata parsing into a library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-08-31.md"&gt;2020-08-31&lt;/a&gt;:
  1 regression, 2 improvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2964"&gt;RFC: Named arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2963"&gt;eRFC: Add JSON backend to Rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2930"&gt;RFC: Reading into uninitialized buffers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/74754"&gt;Add &lt;code&gt;#[cfg(panic = '...')]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/74160"&gt;Allow Weak::as_ptr and friends for unsized T&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/73166"&gt;Update stdarch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/issues/50146"&gt;Tracking issue for #[doc(alias = "...")]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2981"&gt;Safer Transmute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2979"&gt;[RFC]: Libs Team Governance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2977"&gt;[RFC]: Portable SIMD Libs Project Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Saar/events/272522454/"&gt;September 8. Saarbrücken, DE - Rust-Saar Meetup - &lt;code&gt;3u16.map_err(...)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gskksrybcmblb/"&gt;September 8. Seattle, WA, US - Seattle Rust Meetup - Monthly meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-NYC/events/272982073/"&gt;September 9. East Coast, US - Rust East Coast Virtual Talks + Q&amp;amp;A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-%D0%B2-%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B5/events/272798484/"&gt;September 11. Russia - Russian Rust Online Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/qxqdgrybcmbmb/"&gt;September 9. Atlanta, GA, US - Rust Atlanta - Grab a beer with fellow Rustaceans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/268567961/"&gt;September 10. Lehi, UT, US - Utah Rust - The Blue Pill: Rust on Microcontrollers (Sept / Second Round)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/266876702/"&gt;September 7. Auckland, NZ - Rust AKL - Finally, good Rust IDE support in VSCode: rust-analyzer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://payward.wd1.myworkdayjobs.com/en-US/Kraken_Careers/job/EMEA---Remote/Senior-Backend-Engineer---Rust--Remote-_R-17"&gt;Senior Backend Engineer - Rust at Kraken (Remote US, Remote EMEA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://payward.wd1.myworkdayjobs.com/en-US/Kraken_Careers/job/AMER---Remote/Backend-Engineer--Data-Processing---Rust_L-43"&gt;Backend Engineer, Data Processing – Rust at Kraken (Remote US, Remote EMEA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://payward.wd1.myworkdayjobs.com/en-US/Kraken_Careers/job/EMEA---Remote/Backend-Engineer---Rust_L-42"&gt;Backend Engineer - Rust at Kraken (Remote US, Remote EMEA)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;When the answer to your question contains the word "variance" you're probably going to have a bad time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/in-this-mesh-class-whats-wrong-with-my-use-of-lifetimes/47946/4"&gt;trentj on rust-users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/937"&gt;Michael Bryan&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/imoogj/this_week_in_rust_354/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Fri, 04 Sep 2020 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2020-09-04:blog/2020/09/04/this-week-in-rust-354/</guid></item><item><title>This Week in Rust 353</title><link>https://this-week-in-rust.org/blog/2020/08/26/this-week-in-rust-353/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/emberian/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/emberian/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;h3 id="tooling"&gt;Tooling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kobzol.github.io/rust/intellij/2020/07/31/contributing-0-setup.html"&gt;Contributing to the IntelliJ Rust plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2020/08/24/changelog-129.html"&gt;IntelliJ Rust Changelog #129&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/08/24/changelog-39.html"&gt;Rust Analyzer Changelog #39&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://veloren.net/devblog-81/"&gt;This Week in Veloren 81&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-embedded.github.io/blog/newsletter-25/"&gt;The Embedded Working Group Newsletter - 25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/pnehrer/a-story-of-rusty-containers-queues-and-the-role-of-assumed-identity-kl2"&gt;A Story of Rusty Containers, Queues, and the Role of Assumed Identity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ecorax.net/as-above-so-below-1/"&gt;As above, so below: Bare metal Rust generics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.darklang.com/first-thoughts-on-rust-vs-ocaml/"&gt;First thoughts on Rust vs OCaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.abubalay.com/blog/2020/08/22/safe-bindings-in-rust"&gt;The problem of safe FFI bindings in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/imaculate3/that-s-so-rusty-3akm"&gt;That's so Rusty!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.justanotherdot.com/posts/profiling-doesnt-always-have-to-be-fancy.html"&gt;Profiling Doesn't Always Have To Be Fancy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kai.coding.blog/why-i-like-piston"&gt;Why I like Piston, A Rust game engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://steveklabnik.com/writing/the-cxx-debate"&gt;The CXX Debate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/Z6X7Ada0ugE"&gt;Bending the curve: A personal tutor at your fingertips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-standard-rust"&gt;Learn Standard Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.christopherbiscardi.com/why-can-t-i-early-return-in-an-if-statement-in-rust"&gt;Why can't I early return in an if statement in Rust?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/bleed-less-during-runtime-with-rusts-lifetime/"&gt;Bleed Less during Runtime with Rust's Lifetime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tndl.me/blog/2020/rust-javascript-cheatsheet/"&gt;A Javascript Developer's Cheatsheet for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/dZiWkbnaQe8"&gt;RustConf 2020 - Macros for a More Productive Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/BBvcK_nXUEg"&gt;RustConf 2020 - Rust for Non-Systems Programmers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learn-more-rust"&gt;Learn More Rust&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.fpcomplete.com/blog/different-levels-async-rust/"&gt;Different levels of Async in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/creativcoder/how-to-run-rust-on-arduino-uno-40c0"&gt;How to run Rust on Arduino Uno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tjtelan/let-s-build-a-single-binary-grpc-server-client-with-rust-in-2020-part-1-3cnk"&gt;Let's build a single binary gRPC server-client with Rust in 2020 - Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fitzgeraldnick.com/2020/08/24/writing-a-test-case-generator.html"&gt;Writing a Test Case Generator for a Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/0xbf/day11-write-web-app-with-actix-web-100dayofrust-1lkn"&gt;Day 12: Write web app with actix-web - 100DaysOfRust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://not-matthias.github.io/kernel-printing-with-rust/"&gt;Kernel printing with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mtigley.dev/posts/running-animation/"&gt;Running Animation in Amethyst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PL] &lt;a href="https://postacnormalna.pl/pierwsza-przygoda-z-rustem-i-godotem/"&gt;CrabbyBird #0 Pierwsza przygoda z Rustem i Godotem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/playlist?list=PLzIwronG0sE56c6hDYOKW3-rPxmIyttoe"&gt;Build a Smart Bookmarking Tool with Rust and Rocket Video Series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/rAF8mLI0naQ"&gt;RustConf 2020 - Error Handling Isn't All About Errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/2b8InauuRqw"&gt;RustConf 2020 - Under a Microscope: Exploring Fast and Safe Rust for Biology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/GFi_EdS_s_c"&gt;RustConf 2020 - My First Rust Project: Starting a 2D game with Amethyst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/xlVnp7VOxRE"&gt;RustConf 2020 - Controlling Telescope Hardware with Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-updates"&gt;Project Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dimforge.com/blog/2020/08/18/rustsim-becomes-dimforge/"&gt;Rustsim becomes Dimforge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dimforge.com/blog/2020/08/25/announcing-the-rapier-physics-engine/"&gt;Announcing the Rapier physics enginge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/defmt/"&gt;defmt, a highly efficient Rust logging framework for embedded devices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bevyengine.org/news/scaling-bevy/"&gt;Scaling Bevy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.nushell.sh/blog/2020/08/23/year_of_nushell.html"&gt;One year of Nushell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://axelforsman.tk/2020/08/24/rust-style-futures-in-c.html"&gt;Rust-style futures in C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.pingfrommorocco.com/2020/08/porting-golang-and-rust-cli-tool-to-d.html"&gt;Porting a Golang and Rust CLI tool to D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.possiblerust.com/community/how-to-read-first-impression-posts"&gt;How to Read First Impression Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://anchor.fm/the-virtual-world/episodes/Embedded-Rust--Ferrous-Systems---James-Munns-eidv76"&gt;The Virtual World - Embedded Rust &amp;amp; Ferrous Systems - James Munns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustgamedev.com/episodes/interview-with-herbert-wolverson-bracket-lib"&gt;Rust GameDev Podcast - Interview with Herbert Wolverson (Bracket-Lib)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/jR2hUhjcAXI"&gt;Before Main: How Executables Work on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/IwPRu5FhfIQ"&gt;RustConf 2020 - Opening Keynote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/yv6L_xmjw5I"&gt;RustConf 2020 - How to Start a Solo Project that You'll Stick With&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/RNsEsZbXE-4"&gt;RustConf 2020 - Closing Keynote&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/pdf-rs/pdf"&gt;pdf&lt;/a&gt;, a crate for reading PDF files.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/806"&gt;S3bk&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rusty-celery/rusty-celery/issues?q=label%3A%22Status%3A+Help+Wanted%22"&gt;Rusty Celery has several issues tagged with "Help Wanted"&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;292 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-08-17..2020-08-24"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75621"&gt;remove fast path in reallocation for same layout sizes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75776"&gt;missing doc examples lint improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75516"&gt;promote missing_fragment_specifier to hard error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75595"&gt;polymorphize: if any param in a predicate is used, then all are used&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75648"&gt;make &lt;code&gt;OnceCell&amp;lt;T&amp;gt;&lt;/code&gt; transparent to dropck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75677"&gt;don't panic in &lt;code&gt;Vec::shrink_to_fit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75600"&gt;improve codegen for &lt;code&gt;align_offset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75505"&gt;add &lt;code&gt;Arc::new_cyclic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/75171"&gt;new zeroed slice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74940"&gt;make &lt;code&gt;&amp;lt;*const T&amp;gt;::is_null&lt;/code&gt; const fn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/74238"&gt;stabilize &lt;code&gt;ptr_offset_from&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/73565"&gt;use &lt;code&gt;min_specialization&lt;/code&gt; in libcore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/72449"&gt;const floating point bitcasts and classification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/compiler-builtins/pull/341"&gt;compiler-builtins: add mips/mips64 compiler-rt fallbacks so that libgcc is not required&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/pin-utils/pull/33"&gt;pin-utils: deprecate unsafe pin projection macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/git2-rs/pull/614"&gt;git2: fix dangling pointer in format_email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/git2-rs/pull/612"&gt;git2: add support for zlib-ng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/8641"&gt;cargo: remove unnecessary allocations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-bindgen/pull/1882"&gt;rust-bindgen: do generate unnamed enums, as they can be referred to by members and others&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2020-08-24.md"&gt;2020-08-24&lt;/a&gt;:
  1 regression, 4 improvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This week included a major speedup on optimized builds of real-world crates (up to 5%) as a result of the &lt;a href="https://github.com/rust-lang/rust/pull/73526#issuecomment-679374070"&gt;upgrade to LLVM 11&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2975"&gt;Update the intra-doc link RFC to match the implementation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/pull/74559"&gt;Stabilize deque_make_contiguous&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge]&lt;a href="https://github.com/rust-lang/rust/issues/55002"&gt;Tracking issue for hint::spin_loop (renamed sync::atomic::spin_loop_hint)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/272786420/"&gt;September 2. Johannesburg, ZA - Monthly Joburg Rust Chat! - Johannesburg Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Dublin/events/272781420/?action=rsvp&amp;amp;response=yes"&gt;September 2. Dublin, IE - Rust Dublin September Remote Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs"&gt;September 2. Indianapolis, IN, US - Indy Rust - Indy.rs - with Social Distancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/txcprrybcmbfb/"&gt;September 3. Berlin, DE - Berlin.rs - Rust Hack and Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Saar/events/272522454/"&gt;September 8. Saarbrücken, DE - Rust-Saar Meetup - &lt;code&gt;3u16.map_err(...)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/qxqdgrybcmbmb/"&gt;September 9. Atlanta, GA, US - Rust Atlanta - Grab a beer with fellow Rustaceans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/266876702/"&gt;September 7. Auckland, NZ - Rust AKL - Finally, good Rust IDE support in VSCode: rust-analyzer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ockam.io/team/Senior-Engineer-Embedded-Rust/31b8be44-ca35-5e12-8777-ab16d7b08033"&gt;Senior Engineer - Embedded Rust at Ockam (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust is a very different beast for me. It is a &lt;em&gt;much&lt;/em&gt; bigger and &lt;em&gt;much&lt;/em&gt; more capable language. However, I've found that it is, in many ways, a lot more restrictive in how you can approach problems. I frequently find myself being perplexed at how to eloquently solve a problem. When I discover the idiomatic way of doing it I'm usually both blown away by the brilliance of it and a bit disheartened by how difficult it would be to come up with that solution by myself :-).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://reddit.com/r/rust/comments/id8n8d/are_some_of_you_coming_from_javascript_ts/g27d3ni/"&gt;mikekchar on /r/rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/931"&gt;Stephan Sokolow&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/ih8uai/this_week_in_rust_353/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 26 Aug 2020 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2020-08-26:blog/2020/08/26/this-week-in-rust-353/</guid></item></channel></rss>