<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>This Week in Rust</title><link>https://this-week-in-rust.org/</link><description></description><lastBuildDate>Wed, 02 Feb 2022 00:00:00 -0500</lastBuildDate><item><title>This Week in Rust 428</title><link>https://this-week-in-rust.org/blog/2022/02/02/this-week-in-rust-428/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2022/01/31/changes-in-the-core-team.html"&gt;Changes in the Core Team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Foundation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/posts/2022-02-02-farewell-florian/"&gt;Board Announcement: Farewell and Thanks to Florian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://crates.io/crates/spa"&gt;spa 0.3.0 release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sylvestre.ledru.info/blog/2022/01/29/an-update-on-rust-coreutils"&gt;An update on rust/coreutils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/news/this-week-in-fluvio-0020/"&gt;This week in Fluvio #20: the programmable streaming platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sixtyfps.io/thisweek/2022-01-31.html"&gt;SixtyFPS (GUI crate): Changelog for 30th of January 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fornjot.app/blog/fornjot-0-5-0/"&gt;Fornjot 0.5.0 - Code-CAD in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bonsaidb.io/blog/january-2022-update/"&gt;BonsaiDb January update: Alpha Next Week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.antoyo.xyz/rustc_codegen_gcc-progress-report-8"&gt;rustc_codegen_gcc: Progress Report #8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io//thisweek/2022/01/31/changelog-114.html"&gt;Rust Analyzer Changelog #114&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2022/01/31/changelog-164.html"&gt;IntelliJ Rust Changelog #164&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://weekly.databend.rs/2022-02-02-databend-weekly/"&gt;This week in Databend #27: an elastic and reliable cloud warehouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.mozilla.org/data/2022/01/31/this-week-in-glean-building-and-deploying-a-rust-library-on-ios/"&gt;This Week in Glean: Building and Deploying a Rust library on iOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2201.11821"&gt;An Empirical Study of Yanked Releases in the Rust Package Registry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mojosd.medium.com/a-new-phase-for-the-rustc-reading-club-c3a048f52a2f"&gt;A new phase for the Rustc Reading Club&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/indispensable-rust-features-to-learn/"&gt;The 9 indispensable features to learn for the new Rust programmer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lucumr.pocoo.org/2022/1/30/unsafe-rust/"&gt;Uninitialized Memory: Unsafe Rust is Too Hard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.trailofbits.com/2022/02/01/part-2-rusty-crypto/"&gt;Part 2: Improving crypto code in Rust using LLVM’s optnone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tangram.dev/blog/writing_the_fastest_gbdt_library_in_rust/"&gt;Writing the fastest GBDT library in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/en/blog/65/async-rust-vs-rtos-showdown"&gt;Async Rust vs RTOS showdown!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smallcultfollowing.com/babysteps//blog/2022/01/27/panics-vs-cancellation-part-1/"&gt;Panics vs cancellation, part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eli.thegreenplace.net/2022/rust-extension-traits-greppability-and-ides/"&gt;Rust extension traits, greppability and IDEs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ivkov.me/absence-of-lifetimes/"&gt;The Curious Absence of Lifetimes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.nindalf.com/posts/rust-stdlib/"&gt;Rust has a small standard library (and that's ok)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://daniel.haxx.se/blog/2022/02/01/curl-with-rust/"&gt;Curl with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://leanpub.com/podcasts/frontmatter/matt-provost-25-01-22"&gt;Frontmatter Podcast: Matt Provost, Author of Rust From the Ground Up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/somedood/how-rust-helped-me-power-through-my-c-assignments-2akk"&gt;How Rust helped me power through my C assignments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://desmondwillowbrook.github.io/blog/competitive-programming/dsa-explanations/basic-segment-tree/"&gt;(Basic) Segment Trees with beautiful diagrams!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://briankung.dev/2022/01/31/sneak-preview-writing-ruby-gem-native-extensions-in-rust/"&gt;Sneak preview: Writing Ruby gem native extensions in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/hintergrund/Ferris-Talk-5-Tokio-als-asynchrone-Laufzeitumgebung-ist-ein-Fast-Alleskoenner-6341018.html"&gt;Ferris Talk #5: Tokio als asynchrone Laufzeitumgebung ist ein Fast-Alleskönner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/056-zeeshan-ali/"&gt;zbus with Zeeshan Ali&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=jpVzSse7oJ4"&gt;Rust Linz, January '22 - Error Handling in Rust - A Pragmatic Approach by Luca Palmieri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[series] [video] &lt;a href="https://www.youtube.com/watch?v=BMGlSTQEC9M"&gt;Writing a Programming Language (in Rust) 13: Object Destructuring (Part 2) and Fixing Recursion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[series] [video] &lt;a href="https://www.youtube.com/watch?v=hKOKfa30nAI"&gt;Writing a Programming Language (in Rust) 14: Compiler Resources and Function Argument Destructuring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/rust-async-await-what-is-a-runtime/"&gt;Async Rust: What is a runtime? Here is how tokio works under the hood&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rtoch.com/posts/rust-cidr-routing/"&gt;Implementation of CIDR routing table in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.science/blog/how-prime-video-updates-its-app-for-more-than-8-000-device-types"&gt;How Prime Video updates its app for more than 8,000 device types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fnordig.de/2022/01/31/rust-libraries-on-ios/"&gt;Building and Deploying a Rust library on iOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mdguerrero.com/blog"&gt;My new deployment workflow using AWS SDK for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.meilisearch.com/meilisearch-raised-5meu-seed-fundraising/"&gt;Meilisearch raises a $5M Seed to change the world of user-facing search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sequoia-pgp.org/blog/2022/02/01/202202-sq-stakeholders/"&gt;Sequoia-PGP: Looking for SQ stakeholders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.tempus-ex.com/hello-microcontroller/"&gt;Hello, Microcontroller!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/ferrous-systems-adacore-joining-forces/"&gt;Ferrous Systems and AdaCore to join forces on Ferrocene&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.adacore.com/adacore-and-ferrous-systems-joining-forces-to-support-rust"&gt;AdaCore and Ferrous Systems joining forces to support Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rusttalk.github.io/podcast/001/"&gt;Podcast RustTalk 001. 与 Folyd 聊他的 Rust 使用经历&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week we have two crates: &lt;a href="https://github.com/mgrachev/update-informer"&gt;update-informer&lt;/a&gt;, a
library to embed an update check into your CLI project and
&lt;a href="https://crates.io/crates/blake3"&gt;blake3&lt;/a&gt;, a fast cryptographic hash function.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1014"&gt;Grachev Mikhail&lt;/a&gt; and 
&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1014"&gt;Zac Burns&lt;/a&gt; for the suggestions!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/diesel-rs/diesel/issues/3032"&gt;diesel-rs/diesel - Add support for currently unsupported JSON/JSONB operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;327 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-01-24..2022-01-31"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/llvm-project/pull/128"&gt;LLVM: cherry-pick different fix for AArch64 truncating FP stores&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92918"&gt;allow eliding GATs in expression position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93006"&gt;fix debuginfo for pointers/references to unsized types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93358"&gt;add note suggesting that predicate may be satisfied, but is not &lt;code&gt;const&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92889"&gt;ignore unwinding edges when checking for unconditional recursion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93039"&gt;don't suggest inaccessible fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93175"&gt;implement stable overlap check considering negative traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92256"&gt;improve selection errors for &lt;code&gt;~const&lt;/code&gt; trait bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93395"&gt;improve suggestion for escaping reserved keywords&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/90677"&gt;suggest tuple-parentheses for enum variants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91840"&gt;fix the unsoundness in the &lt;code&gt;early_otherwise_branch&lt;/code&gt; mir opt pass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93373"&gt;store &lt;code&gt;def_id_to_hir_id&lt;/code&gt; as variant in hir_owner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93301"&gt;store &lt;code&gt;hir_id_to_def_id&lt;/code&gt; in OwnerInfo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/90842"&gt;use &lt;code&gt;indexmap&lt;/code&gt; to avoid sorting &lt;code&gt;LocalDefId&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc_codegen_gcc/pull/115"&gt;codegen_gcc: correctly import foreign statics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc_codegen_gcc/pull/118"&gt;codegen_gcc: support &lt;code&gt;-Zfunction-sections&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc_codegen_gcc/pull/103"&gt;codegen_gcc: support 128-bit integers on platforms without native support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc_codegen_gcc/pull/121"&gt;codegen_gcc: support upgrading the alignment of a global variable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93461"&gt;accommodate yield points in the &lt;code&gt;format_args&lt;/code&gt; expansion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/portable-simd/pull/232"&gt;add &lt;code&gt;Simd::cast&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92274"&gt;add &lt;code&gt;intrinsics::const_deallocate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93239"&gt;add &lt;code&gt;os::unix::net::SocketAddr::from_path&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93236"&gt;make &lt;code&gt;NonNull::new&lt;/code&gt; &lt;code&gt;const&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93347"&gt;make &lt;code&gt;char::DecodeUtf16::size_hist&lt;/code&gt; more precise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/90247"&gt;improve &lt;code&gt;Duration::try_from_secs_f32&lt;/code&gt;/&lt;code&gt;64&lt;/code&gt; accuracy by directly processing exponent and mantissa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10347"&gt;cargo: add bash completion for &lt;code&gt;cargo clippy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10337"&gt;cargo: do not ignore &lt;code&gt;--features&lt;/code&gt; when &lt;code&gt;--all-features&lt;/code&gt; is present&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8289"&gt;clippy: add &lt;code&gt;default_union_representation&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8369"&gt;clippy: don't lint &lt;code&gt;ptr_arg&lt;/code&gt; for &lt;code&gt;&amp;amp;mut _&lt;/code&gt; types in trait items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8250"&gt;clippy: fix underflow in &lt;code&gt;manual_split_once&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8350"&gt;clippy: fix bad suggestion on &lt;code&gt;numeric_literal&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8322"&gt;clippy: &lt;code&gt;single_match&lt;/code&gt;: don't lint non-exhaustive matches; support tuples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;This was a relatively quiet week with regressions and improvements relatively equally each other out. The big exception is with a somewhat large regression in rustdoc which was needed for a large and important architectural change. This could lead to users see somewhat slower doc build times with more memory used especially in projects with large crate dependency graphs.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=c54dfee65126a0ac385d55389a316e89095a0713&amp;amp;end=1ea4851715893ee3f365a8ef09d47165e9a7864f&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;c54dfee..1ea4851&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 Regressions, 4 Improvements, 2 Mixed; 1 of them in rollups
35 comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-02-02.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered final comment period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/90955"&gt;Rename &lt;code&gt;FilenameTooLong&lt;/code&gt; to &lt;code&gt;FilenameInvalid&lt;/code&gt; and also use it for Windows' &lt;code&gt;ERROR_INVALID_NAME&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/93445"&gt;Add &lt;code&gt;From&amp;lt;u8&amp;gt;&lt;/code&gt; for &lt;code&gt;ExitCode&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/86941"&gt;Stabilise std::is_aarch64_feature_detected&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/93208"&gt;Impl {Add,Sub,Mul,Div,Rem,BitXor,BitOr,BitAnd}Assign&amp;lt;$t&amp;gt; for Wrapping&amp;lt;$t&amp;gt; for rust 1.61.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/89492"&gt;Tracking Issue for &lt;code&gt;int_abs_diff&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/72599"&gt;Tracking Issue for total_cmp (on f32/f64)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/issues/46488"&gt;Stabilize allow_fail test flag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3226"&gt;RFC: Custom logo/favicon command-line flags&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 2/2/2022 - 3/2/2022 🦀&lt;/p&gt;
&lt;h3&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/283480500/"&gt;February 3, 2022 | Cardiff, UK | &lt;strong&gt;Rust Book Study Session - Smart Pointers&lt;/strong&gt; | Rust and C++ Cardiff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dou.ua/calendar/42115/"&gt;February 5 &amp;amp; 6, 2022 | Kyiv, UA | &lt;strong&gt;Write a Game on Rust&lt;/strong&gt; | Rust Ukraine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Saar/events/283617274"&gt;February 8, 2022 | Saarbrücken, DE | &lt;strong&gt;Meetup: 17u16&lt;/strong&gt; | Rust-Saar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/283213217/"&gt;February 8, 2022 | Seattle, WA, US | &lt;strong&gt;Monthly meetup&lt;/strong&gt; | Seattle Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Los-Angeles/events/283232930/"&gt;February 9, 2022 | Los Angeles, CA, US | &lt;strong&gt;Raphael Tessmer &amp;amp; Celeste, finding craters on a rusty planet&lt;/strong&gt; (Virtual) | Rust Los Angeles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/events/282545292"&gt;February 9, 2022 | Stuttgart, DE | &lt;strong&gt;Rust-Meetup&lt;/strong&gt; | Rust Community Stuttgart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/283538948"&gt;February 15, 2022 | Indianapolis, IN, US | &lt;strong&gt;Indy.rs - with Social Distancing&lt;/strong&gt; | Indy Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/283351974/"&gt;February 15, 2022 | Washington, DC, US| &lt;strong&gt;Mid-month Rustful&lt;/strong&gt; | Rust DC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/283260386/"&gt;February 16, 2022 | Vancouver, BC, CA | &lt;strong&gt;Rust Study/Hack/Hang-out Night&lt;/strong&gt; | Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/maibornwolff-software-engineering-netzwerk/events/283379985"&gt;February 17, 2022 | München, DE | &lt;strong&gt;Rust - beyond "Hello World"&lt;/strong&gt;| Agile Softwareentwicklung München&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/283545751/"&gt;February 17, 2022 | Nürnberg, DE | &lt;strong&gt;Rust Nürnberg online #10&lt;/strong&gt;| Rust Nuremberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/events/282545308"&gt;February 17, 2022 | Stuttgart, DE | &lt;strong&gt;Rust-Meetup&lt;/strong&gt; | Rust Community Stuttgart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-wurzburg-meetup-group/events/283609518"&gt;February 17, 2022 | Würzburg, DE | &lt;strong&gt;Meet and chat about Rust&lt;/strong&gt; | Rust Würzburg Meetup Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Dublin/events/283613610"&gt;February 22, 2022 | Dublin, IE | &lt;strong&gt;Rust Dublin February Meetup&lt;/strong&gt; - Rust Dublin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Linz/events/283377693/"&gt;February 24, 2022 | Linz, AT | &lt;strong&gt;Rust Meetup Linz - 19th Edition&lt;/strong&gt; | Rust Linz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Svix&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.svix.com/careers/"&gt;Senior Rust Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tangram&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tangram.dev/jobs"&gt;Rust Programmer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Polar Sync&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://polarsync.breezy.hr/p/6b3e70422f1d"&gt;Senior Blockchain Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;LoanPASS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://loanpass.io/careerPage.html"&gt;Full Stack Engineer, Rust + Typescript (Remote US)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Stockly&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.welcometothejungle.com/fr/companies/stockly-1/jobs/back-end-developer-intern-techops-team-rust-grpc-postgresql_paris"&gt;Back-end developer intern - TechOps team (Rust, GRPC, PostgreSQL) (Paris, FR)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/53def500-b146-40da-89a8-98adfd7e84e4"&gt;Engineering Manager - Rust - Core Backend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/2442ee5c-56b6-4a73-a477-8cdda2b218d5"&gt;Rust Engineer, Desktop GUI - Cryptowatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/1c6b290f-e430-430d-9b40-a258d07686b0"&gt;Site Reliability Engineer - Rust - Core Backend&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91122"&gt;&lt;code&gt;impl Not for !&lt;/code&gt;&lt;/a&gt; (did you guess that "not never" is still "never"?)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://this-week-in-rust.org/blog/2022/01/26/this-week-in-rust-427"&gt;llogiq on last week's TWiR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1174"&gt;scottmcm&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/sj6oqb/this_week_in_rust_428/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 02 Feb 2022 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2022-02-02:/blog/2022/02/02/this-week-in-rust-428/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 427</title><link>https://this-week-in-rust.org/blog/2022/01/26/this-week-in-rust-427/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2022/01/20/Rust-1.58.1.html"&gt;Announcing Rust 1.58.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2022/01/20/cve-2022-21658.html"&gt;Security advisory for the standard library (CVE-2022-21658)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2022/01/18/jan-steering-cycle.html"&gt;Rust Compiler January 2022 Steering Cycle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2022/01/24/changelog-113.html"&gt;Rust Analyzer Changelog #113&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sixtyfps.io/thisweek/2022-01-24.html"&gt;SixtyFPS (GUI crate): Changelog for 23th of January 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/notriddle/rustdoc-settings-sync/-/snippets/2239910"&gt;Settings sync browser addon for rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotenv-linter.github.io/#/whats_new/v320"&gt;Dotenv-linter v3.2.0: Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/containers/youki/releases/tag/v0.0.2"&gt;youki 0.0.2 release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://weekly.databend.rs/2022-01-26-databend-weekly/"&gt;This week in Databend #26: an elastic and reliable cloud warehouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gamedev.rs/news/029/"&gt;This Month in Rust GameDev #29 - December 2021&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2201.09652"&gt;DuVisor: a User-level Hypervisor Through Delegated Virtualization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.thecodedmessage.com/posts/unsafe/"&gt;Being Fair about Memory Safety and Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hirrolot.github.io/posts/why-static-languages-suffer-from-complexity"&gt;Why Static Languages Suffer From Complexity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vzvezda/asyncdrop/blob/main/article/async-dest.md"&gt;Async destruction on stable rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/cooperative-vs-preemtive-scheduling/"&gt;async-await: Cooperative vs Preemptive scheduling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://frehberg.com/2022/01/rust-detect-unsigned-integer-underflow/"&gt;Detect unsigned integer underflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swatinem.de/blog/non-lazy-futures/"&gt;Non-Lazy Futures Considered Harmful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.trailofbits.com/2022/01/26/part-1-the-life-of-an-optimization-barrier/"&gt;Part 1: The life of an optimization barrier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://radekmie.github.io/blog/on-rust-in-webdev/"&gt;On Rust in Webdev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/noamtashma/owning-ref-unsoundness"&gt;Unsoundness in owning_ref&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://duesee.dev/p/type-driven-development/"&gt;Type-Driven Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chester-beard.medium.com/rust-programming-what-to-look-forward-to-in-2022-2e041258f750"&gt;Rust Programming, What to Look Forward to in 2022&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/rust-web-application-clean-architecture/"&gt;Clean and Scalable Architecture for Rust Web Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.legoktm.com/2022/01/21/building-fast-wikipedia-bots-in-rust.html"&gt;Building fast Wikipedia bots in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swatinem.de/blog/futures-n-tasks/"&gt;Futures and Tasks: A tale of concurrency and parallelism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.cont.run/lowering-async-await-in-rust/"&gt;Lowering async await in rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.printlnhello.world/blog/publishing-to-crates-io/"&gt;Publishing to crates.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/tempus-ex/hello-microcontroller-c747480818fa"&gt;Hello, Microcontroller! - Demystify microcontrollers by programming one in ~100 lines of dependency-free Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-cli-recommendations.sunshowers.io/"&gt;Rain's Rust CLI recommendations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/digitalfrontiers/taking-rust-for-a-ride-to-azeroth-what-writing-an-ah-scanner-in-rust-taught-me-58edc936cbb"&gt;Taking Rust for a Ride to Azeroth: What writing an AH Scanner in Rust taught me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.dend.ro/self-modifying-rust/"&gt;On self-modifying executables in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.warp.dev/using-tree-data-structures-to-implement-terminal-split-panes-more-fun-than-it-sounds/"&gt;Using tree data structures to implement terminal split panes - more fun than it sounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://justinjaffray.com/durability-and-redo-logging/"&gt;Durability and Redo Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=m902hm3fK7Q"&gt;Messing With The Recipe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/055-sebastian-thiel/"&gt;Gitoxide with Sebastian Thiel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zackoverflow.dev/writing/tyty"&gt;tyty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/untitaker/html5gum"&gt;html5gum&lt;/a&gt;, a WHATWG HTML spec-compliant HTML5 tokenizer.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1012"&gt;Markus Unterwaditzer&lt;/a&gt; for the self-suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;381 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-01-17..2022-01-24"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/llvm-project/pull/127"&gt;LLVM on AArch64/GlobalISel: fix incorrect handling of fp truncating stores&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93098"&gt;show a more informative panic message when &lt;code&gt;DefPathHash&lt;/code&gt; does not exist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93061"&gt;only suggest adding &lt;code&gt;!&lt;/code&gt; to expressions that can be macro invocation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92183"&gt;point at correct argument when async fn output type lifetime disagrees with signature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92704"&gt;change lint message to be stronger for &lt;code&gt;&amp;amp;T&lt;/code&gt; → &lt;code&gt;&amp;amp;mut T&lt;/code&gt; transmute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92843"&gt;improve string concatenation suggestion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88642"&gt;formally implement let chains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92164"&gt;implement &lt;code&gt;#[rustc_must_implement_one_of]&lt;/code&gt; attribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87648"&gt;allow eq constraints on associated constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93028"&gt;check &lt;code&gt;const Drop&lt;/code&gt; impls considering &lt;code&gt;~const&lt;/code&gt; Bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92997"&gt;add &lt;code&gt;~const&lt;/code&gt; bound test for negative impls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92640"&gt;fix ICEs related to &lt;code&gt;Deref&amp;lt;Target=[T; N]&amp;gt;&lt;/code&gt; on newtypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93165"&gt;disable drop range tracking in generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92780"&gt;directly use ConstValue for single literals in blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93219"&gt;add preliminary support for inline assembly for msp430&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91150"&gt;let qpath contain NtTy: &lt;code&gt;&amp;lt;$:ty as $:ty&amp;gt;::…&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93066"&gt;make &lt;code&gt;Decodable&lt;/code&gt; and &lt;code&gt;Decoder&lt;/code&gt; infallible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92787"&gt;remove a &lt;code&gt;Span&lt;/code&gt; from &lt;code&gt;hir::ExprKind::MethodCall&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91359"&gt;emit simpler code from &lt;code&gt;format_args&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93112"&gt;fix CVE-2022-21658 (symbolic link timing attack in &lt;code&gt;std::fs::remove_dir_all&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92555"&gt;implement RFC 3151: Scoped threads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92138"&gt;improve capacity estimation in &lt;code&gt;Vec::from_iter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92124"&gt;little improves in &lt;code&gt;CString::new&lt;/code&gt; when creating from slice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/89747"&gt;add &lt;code&gt;MaybeUninit::&lt;/code&gt;(&lt;code&gt;slice_&lt;/code&gt;)&lt;code&gt;as_bytes&lt;/code&gt;(&lt;code&gt;_mut&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93051"&gt;add &lt;code&gt;Option::is_some_with&lt;/code&gt; and &lt;code&gt;Result::is_&lt;/code&gt;{&lt;code&gt;ok&lt;/code&gt;, &lt;code&gt;err&lt;/code&gt;}&lt;code&gt;_with&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92956"&gt;add &lt;code&gt;log2&lt;/code&gt; and &lt;code&gt;log10&lt;/code&gt; to &lt;code&gt;NonZeroU*&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92513"&gt;std: implement &lt;code&gt;try_reserve&lt;/code&gt; and &lt;code&gt;try_reserve_exact&lt;/code&gt; on &lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91122"&gt;&lt;code&gt;impl Not for !&lt;/code&gt;&lt;/a&gt; (did you guess that "not never" is still "never"?)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/90666"&gt;stabilize &lt;code&gt;arc_new_cyclic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/93016"&gt;stabilize &lt;code&gt;vec_spare_capacity&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91606"&gt;stabilize &lt;code&gt;-Z print-link-args&lt;/code&gt; as &lt;code&gt;--print link-args&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10243"&gt;cargo: error when setting crate type of both dylib and cdylib in library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8280"&gt;clippy: add &lt;code&gt;msrv&lt;/code&gt; config for &lt;code&gt;map_clone&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8271"&gt;clippy: check usages in &lt;code&gt;ptr_arg&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8329"&gt;clippy: don't suggest an empty variant name in &lt;code&gt;enum_variant_names&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8217"&gt;clippy: fix &lt;code&gt;needless_borrow&lt;/code&gt; causing mutable borrows to be moved&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8278"&gt;clippy: &lt;code&gt;needless_lifetimes&lt;/code&gt;: ignore lifetimes in explicit self types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8315"&gt;clippy: &lt;code&gt;trait_duplication_in_bounds&lt;/code&gt; checks path segments for trait items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8311"&gt;clippy: fix &lt;code&gt;needless_question_mark&lt;/code&gt; not considering async fn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8298"&gt;clippy: fix &lt;code&gt;op_ref&lt;/code&gt; false positive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;An awesome week. There was some bits of noise from PR &lt;a href="https://github.com/rust-lang/rust/issues/91032"&gt;#91032&lt;/a&gt; that landed and then had to be backed out (and may soon land again), and we continue to wrestle with how to classify which things to include in rollup PR's. But overall there were some very real wins to the compiler's performance, and it is definitely reflected in the &lt;a href="https://perf.rust-lang.org/bootstrap.html"&gt;total bootstrap time graph&lt;/a&gt;. Great job!&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@pnkfelix&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=7bc7be860f99f4a40d45b0f74e2d01b02e072357&amp;amp;end=c54dfee65126a0ac385d55389a316e89095a0713&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;7bc7be..c54dfe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4 Regressions, 5 Improvements, 4 Mixed; 3 of them in rollups&lt;/p&gt;
&lt;p&gt;29 comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-01-25.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3151"&gt;Scoped threads in the standard library, take 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered FCP this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/92137"&gt;unreachable!("{}") works on Rust 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/87096"&gt;Tracking Issue for Stdin::lines forwarder method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/93090"&gt;impl Display for io::ErrorKind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/78186"&gt;Tracking Issue for feature(pin_static_ref): Pin::{static_ref,static_mut}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/32976"&gt;Tracking issue for #[cfg(target_has_atomic = ...)]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/90132"&gt;Stabilize -Z instrument-coverage as -C instrument-coverage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New and Updated RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[new] &lt;a href="https://github.com/rust-lang/rfcs/pull/3221"&gt;Add &lt;code&gt;ignore_if&lt;/code&gt; RFC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[update] &lt;a href="https://github.com/rust-lang/rfcs/pull/3224"&gt;Add vendor-specific suffixes to v0 mangling RFC 2603&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[update] &lt;a href="https://github.com/rust-lang/rfcs/pull/3223"&gt;Mark RFC 1201 (naked functions) superseded by RFC 2972 (constrained naked functions)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 1/26/2022 - 2/23/2022 🦀&lt;/p&gt;
&lt;h3&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Mob-Programming-on-Open-Source-Software/events/283408208"&gt;January 26, 2021 | Vienna, AT | &lt;strong&gt;The Rustic Mob&lt;/strong&gt; | Mob-Programming on Open Source Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Charlottesville-Rust-Meetup/events/283355090/"&gt;January 27, 2022 | Charlottesville, VA, US | &lt;strong&gt;Minimal Area Bananagrams: a Tale of Needless Optimization&lt;/strong&gt; | Charlottesville Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Linz/events/283116945/"&gt;January 27, 2021 | Linz, AT | &lt;strong&gt;Rust Meetup Linz - 18th Edition&lt;/strong&gt; | Rust Linz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/283118050/"&gt;January 27, 2022 | Nürnberg, DE | &lt;strong&gt;Rust Nürnberg online #9&lt;/strong&gt;| Rust Nuremberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/events/282545254"&gt;January 27, 2022 | Stuttgart, DE | &lt;strong&gt;Rust-Meetup&lt;/strong&gt; | Rust Community Stuttgart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-London-User-Group/events/283335221/"&gt;January 29, 2021 | London, UK | &lt;strong&gt;Rust (Remote) Hack &amp;amp; Learn&lt;/strong&gt; | Rust London User Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/opentechschool-berlin/events/283338268/"&gt;February 1, 2021 | Berlin, DE | &lt;strong&gt;Rust Hack and Learn&lt;/strong&gt; | OpenTechSchool Berlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/283011769"&gt;February 1, 2022 | Buffalo, NY, US | &lt;strong&gt;First Tuesdays: Buffalo Rust User Group&lt;/strong&gt; | Buffalo Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Los-Gatos-Rust-Reading-Group/events/283494504/"&gt;February 1, 2022 | Los Gatos, CA, US | &lt;strong&gt;Book #24 - Rust for Rustaceans - Chapter 4 - Error Handling&lt;/strong&gt; | Los Gatos Reading Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/283480500/"&gt;February 3, 2022 | Cardiff, UK | &lt;strong&gt;Rust Book Study Session - Smart Pointers&lt;/strong&gt; | Rust and C++ Cardiff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/283213217/"&gt;February 8, 2022 | Seattle, WA, US | &lt;strong&gt;Monthly meetup&lt;/strong&gt; | Seattle Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Los-Angeles/events/283232930/"&gt;February 9, 2022 | Los Angeles, CA, US | &lt;strong&gt;Raphael Tessmer &amp;amp; Celeste, finding craters on a rusty planet&lt;/strong&gt; (Virtual) | Rust Los Angeles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/events/282545292"&gt;February 9, 2022 | Stuttgart, DE | &lt;strong&gt;Rust-Meetup&lt;/strong&gt; | Rust Community Stuttgart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/283351974/"&gt;February 15, 2022 | Washington, DC, US| &lt;strong&gt;Mid-month Rustful&lt;/strong&gt; | Rust DC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/283260386/"&gt;February 16, 2022 | Vancouver, BC, CA | &lt;strong&gt;Rust Study/Hack/Hang-out Night&lt;/strong&gt; | Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/maibornwolff-software-engineering-netzwerk/events/283379985"&gt;February 17, 2022 | München, DE | &lt;strong&gt;Rust - beyond "Hello World"&lt;/strong&gt;| Agile Softwareentwicklung München&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Aembit&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/jobs/view/2876048244/"&gt;Senior Software Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/senior-frontend-engineer/en?"&gt;Senior Frontend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;BrightMarbles&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://brightmarbles.zohorecruit.eu/jobs/Careers/36808000001372001/Software-Engineer-–-Rust"&gt;Software Engineer – Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tempus Ex&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tempus-ex.com/careers"&gt;Several Rust positions available (San Francisco, Atlanta, Austin, and Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust : We have a race condition bug in our standard filesystem library !&lt;br&gt;
C++ : You guys have a concurrency safe standard filesystem library ?&lt;br&gt;
C : You guys have a standard filesystem library ?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://np.reddit.com/r/cpp/comments/s8ok0h/possible_toctou_vulnerabilities_in"&gt;redditmodsareshits on /r/cpp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1168"&gt;UtherII&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/sdnnml/this_week_in_rust_427/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 26 Jan 2022 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2022-01-26:/blog/2022/01/26/this-week-in-rust-427/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 426</title><link>https://this-week-in-rust.org/blog/2022/01/19/this-week-in-rust-426/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2022/01/13/Rust-1.58.0.html"&gt;Announcing Rust 1.58.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2022/01/17/changelog-163.html"&gt;IntelliJ Rust Changelog #163&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2022/01/17/changelog-112.html"&gt;Rust Analyzer Changelog #112&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sixtyfps.io/thisweek/2022-01-17.html"&gt;SixtyFPS (GUI crate): Changelog for 16th of January 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://parceljs.org/blog/parcel-css/"&gt;Announcing Parcel CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.dend.ro/introducing-sd-notify/"&gt;Announcing the sd-notify crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gtk-rs.org/blog/2022/01/16/new-release.html"&gt;gtk-rs 0.15 / gtk4-rs 0.4 release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aaronerhardt.github.io/blog/posts/announcing_relm4_v0.4/"&gt;Announcing Relm4 0.4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://quickwit.io/blog/quickwit-0.2"&gt;Quickwit 0.2 brings full-text search to ClickHouse and Kafka!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.dnsimple.com/2022/01/new-rust-api-client-library/"&gt;Introducing the new DNSimple Rust Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://weekly.databend.rs/2022-01-19-databend-weekly/"&gt;This week in Databend #25: an elastic and reliable cloud warehouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bonsaidb.io/blog/commerce-benchmark/"&gt;Benchmarking relational data in BonsaiDb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[DE] &lt;a href="https://www.heise.de/news/Programmiersprache-Rust-1-58-erweitert-Format-Strings-und-verschmaelert-den-Pfad-6326974.html"&gt;Programmiersprache: Rust 1.58 erweitert Format-Strings und verschmälert den Pfad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.scylladb.com/2022/01/12/async-rust-in-practice-performance-pitfalls-profiling/"&gt;Async Rust in Practice: Performance, Pitfalls, Profiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rustnote.com/blog/format_strings.html"&gt;Format Strings in Rust 1.58&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.anthropicstudios.com/2022/01/13/asking-windows-nicely/"&gt;Making Your Game Go Fast by Asking Windows Nicely&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dawchihliou.github.io/articles/binary-tree-insertion-in-rust"&gt;Binary Tree Insertion in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ysantos.com/blog/malloc-in-rust"&gt;Investigating Memory Allocations in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thenewstack.io/using-rustlangs-async-tokio-runtime-for-cpu-bound-tasks/"&gt;Using Rustlang’s Async Tokio Runtime for CPU-Bound Tasks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://0xc45.com/blog/digital-audio-synthesizer-in-rust/"&gt;Digital Audio Synthesizer in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lcnr.de/blog/generic-const-expressions/"&gt;A path towards stable generic const expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sep.com/blog/six-nice-things-about-rust/"&gt;Six Nice Things About Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ianjk.com/game-engine-in-rust/"&gt;Tutorial: Writing a Tiny Rust Game Engine for Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.dend.ro/mapping-my-walks-osrm-rust/"&gt;Mapping my walks with OSRM and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/stevepryde/create-a-desktop-app-in-rust-using-tauri-and-yew-2bhe"&gt;Create a desktop app in Rust using Tauri and Yew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://noserve.rs/aws-region-nearby/"&gt;Fast access to regional AWS endpoints from Cloudflare Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/rust-file-encryption-chacha20poly1305-argon2/"&gt;How to securely encrypt a file with an insecure password in Rust (using Streaming Encryption + Argon2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=ruKV0WMSweA"&gt;I'm learning Rust - Cargo, documentation, user input, and JSON files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=3oL1xokuHBE"&gt;Implementing Hazard Pointers in Rust (part 4/4)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[series] [video] &lt;a href="https://www.youtube.com/watch?v=67HtN0PHWUI"&gt;Writing a Programming Language (in Rust) 10: Implementing Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[series] [video] &lt;a href="https://www.youtube.com/watch?v=ay7gzTzMZKo"&gt;Writing a Programming Language (in Rust) 11: Object Destructuring (Part 1)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hashrust.com/blog/creating-social-sharing-images-in-rust/"&gt;Creating social sharing images in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fredrik-jansson-se.github.io/fluent-bit-input-rust.html"&gt;Writing a Fluent Bit input plugin in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/s3z7ek/the_10_books_that_helped_me_as_a_hobbyist_on_my/"&gt;The 10 books that helped me, as a hobbyist, on my journey to learn Rust to re-code a Django application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ezzeriesa.notion.site/Rewriting-my-toy-blockchain-in-Rust-9a130f225666488491ba497004821fbb"&gt;Rewriting my toy blockchain in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lupyuen.github.io/articles/rust2"&gt;Rust on Apache NuttX OS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://colinfinck.de/posts/an-implementation-of-the-ntfs-filesystem-in-a-rust-crate/"&gt;An implementation of the NTFS filesystem in a Rust crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/054-paul-schoenfelder/"&gt;Lumen with Paul Schoenfelder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/cargo-release"&gt;cargo-release&lt;/a&gt;, a cargo subcommand that makes every crate release a breeze.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1010"&gt;dpc&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Stranger6667/css-inline/issues/138"&gt;css-inline - Support for converting style attributes to HTML attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Stranger6667/css-inline/issues/10"&gt;css-inline - Custom attribute to ignore inlining&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;289 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-01-10..2022-01-17"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92816"&gt;remove deprecated LLVM-style inline assembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92604"&gt;optimize &lt;code&gt;impl_read_unsigned_leb128&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/90146"&gt;reduce use of LocalDefId &amp;lt;-&amp;gt; HirId maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92533"&gt;store a &lt;code&gt;Symbol&lt;/code&gt; instead of an &lt;code&gt;Ident&lt;/code&gt; in &lt;code&gt;VariantDef&lt;/code&gt;/&lt;code&gt;FieldDef&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92768"&gt;partially stabilize &lt;code&gt;maybe_uninit_extra&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92356"&gt;add {&lt;code&gt;Add&lt;/code&gt;, &lt;code&gt;Sub&lt;/code&gt;, &lt;code&gt;Mul&lt;/code&gt;, &lt;code&gt;Div&lt;/code&gt;, &lt;code&gt;Rem&lt;/code&gt;, &lt;code&gt;BitXor&lt;/code&gt;, &lt;code&gt;BitOr&lt;/code&gt;, &lt;code&gt;BitAnd&lt;/code&gt;}{, &lt;code&gt;Assign&lt;/code&gt;} to &lt;code&gt;Saturating&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2550"&gt;futures: fix stacked borrows violations in waker_ref and FuturesUnordered&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91948"&gt;rustdoc: avoid many &lt;code&gt;Symbol&lt;/code&gt; to &lt;code&gt;String&lt;/code&gt; conversions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8203"&gt;clippy: new lint: &lt;code&gt;iter_overeager_cloned&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8213"&gt;clippy: add &lt;code&gt;manual_bits&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8210"&gt;clippy: add borrow_as_ptr lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8112"&gt;clippy: allow primitive types in &lt;code&gt;disallowed_methods&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8273"&gt;clippy: apply &lt;code&gt;not_unsafe_ptr_arg_deref&lt;/code&gt; to type aliases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8297"&gt;clippy: don't lint &lt;code&gt;if_same_then_else&lt;/code&gt; with &lt;code&gt;if let&lt;/code&gt; conditions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8260"&gt;clippy: downgrade &lt;code&gt;mutex_atomic&lt;/code&gt; to nursery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8287"&gt;clippy: erase late bound regions in &lt;code&gt;iter_not_returning_iterator&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8299"&gt;clippy: fix &lt;code&gt;cmp_owned&lt;/code&gt; suggestion flipping the comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8268"&gt;clippy: fix &lt;code&gt;deref_addrof&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8231"&gt;clippy: fix &lt;code&gt;implicit_clone&lt;/code&gt; for &lt;code&gt;&amp;amp;&amp;amp;T&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8226"&gt;clippy: fix &lt;code&gt;manual_memcpy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8292"&gt;clippy: fix cropped &lt;code&gt;or_fun_call&lt;/code&gt; hint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8295"&gt;clippy: handle implicit named arguments in &lt;code&gt;useless_format&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8302"&gt;clippy: move &lt;code&gt;return_self_not_must_use&lt;/code&gt; to &lt;code&gt;pedantic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/thorin/pull/14"&gt;thorin: performance improvements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;A quiet week for regular rustc performance; incremental builds
(particularly ones with little recompilation to do) saw an average 1.5%
improvement. rustdoc also saw several notable optimizations land which improve
performance, particularly on larger benchmarks.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@simulacrum&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=72e74d7b9cf1a7901650227e74650f1fcc797600&amp;amp;end=7bc7be860f99f4a40d45b0f74e2d01b02e072357&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;72e74d..7bc7be&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3 Regressions, 5 Improvements, 2 Mixed; 2 of them in rollups
30 comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-01-18.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3151"&gt;Scoped threads in the standard library, take 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/90666"&gt;Stabilize arc_new_cyclic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/90076"&gt;Change location of where clause on GATs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/91759"&gt;rustdoc: "Namespace" user-written Markdown headings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/91606"&gt;Stabilize -Z print-link-args as --print link-args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/92519"&gt;Use verbatim paths for process::Command if necessary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/91122"&gt;impl Not for !&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No new RFCs were opened this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 1/19/2022 - 2/16/2022 🦀&lt;/p&gt;
&lt;h3&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/nwcmpsydccbzb"&gt;January 19, 2022 | Vancouver, BC, CA | &lt;strong&gt;Rust Study/Hack/Hang-out night&lt;/strong&gt; | Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/283204522/"&gt;January 20, 2022 | Cardiff, UK | &lt;strong&gt;Rust Book Study Session - Functional Language Features &amp;amp; Cargo and Crates.io&lt;/strong&gt; | Rust and C++ Cardiff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/jqxqwrydccbhc/"&gt;January 25, 2022 | Dallas, TX, US | &lt;strong&gt;Last Tuesday Meetup&lt;/strong&gt; | Dallas Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Los-Gatos-Rust-Reading-Group/events/283352417/"&gt;January 25, 2022 | Los Gatos, CA, US | &lt;strong&gt;Book #24 - Rust for Rustaceans - Chapter 3 - Designing Interfaces&lt;/strong&gt; | Los Gatos Reading Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Charlottesville-Rust-Meetup/events/283355090/"&gt;January 27, 2022 | Charlottesville, VA, US | &lt;strong&gt;Minimal Area Bananagrams: a Tale of Needless Optimization&lt;/strong&gt; | Charlottesville Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Linz/events/283116945/"&gt;January 27, 2021 | Linz, AT | &lt;strong&gt;Rust Meetup Linz - 18th Edition&lt;/strong&gt; | Rust Linz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/283118050/"&gt;January 27, 2022 | Nürnberg, DE | &lt;strong&gt;Rust Nürnberg online #9&lt;/strong&gt;| Rust Nuremberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/events/282545254"&gt;January 27, 2022 | Stuttgart, DE | &lt;strong&gt;Rust-Meetup&lt;/strong&gt; | Rust Community Stuttgart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-London-User-Group/events/283335221/"&gt;January 29, 2021 | London, UK | &lt;strong&gt;Rust (Remote) Hack &amp;amp; Learn&lt;/strong&gt; | Rust London User Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/opentechschool-berlin/events/283338268/"&gt;February 1, 2021 | Berlin, DE | &lt;strong&gt;Rust Hack and Learn&lt;/strong&gt; | OpenTechSchool Berlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/283011769"&gt;February 1, 2022 | Buffalo, NY, US | &lt;strong&gt;First Tuesdays: Buffalo Rust User Group&lt;/strong&gt; | Buffalo Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Los-Angeles/events/283232930/"&gt;February 8, 2022 | Los Angeles, CA, US | &lt;strong&gt;Rust LA (Topic TBD) [Virtual] Feb. 2022&lt;/strong&gt; | Rust Los Angeles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/283213217/"&gt;February 8, 2022 | Seattle, WA, US | &lt;strong&gt;Monthly meetup&lt;/strong&gt; | Seattle Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/events/282545292"&gt;February 9, 2022 | Stuttgart, DE | &lt;strong&gt;Rust-Meetup&lt;/strong&gt; | Rust Community Stuttgart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/283351974/"&gt;February 15, 2022 | Washington, DC, US| &lt;strong&gt;Mid-month Rustful&lt;/strong&gt; | Rust DC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/283260386/"&gt;February 16, 2022 | Vancouver, BC, CA | &lt;strong&gt;Rust Study/Hack/Hang-out night&lt;/strong&gt; | Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Ockam&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/ockam/9bdb612c-417c-4b26-bcb5-84e6608736aa"&gt;Sr Engineer - Rust, Library Design, Open Source (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;filancore&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://filancore.zohorecruit.eu/jobs/Careers/40250000000364074/Experienced-Backend-Rust-Developer-m-f-d-for-our-Identity-Management-Solution"&gt;Experienced Backend Rust Developer (m/f/d) for our Identity Management Solution (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Enso&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/enso-org/hiring/blob/main/positions/senior-rust-ide-developer.md"&gt;Senior Rust IDE Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/enso-org/hiring/blob/main/positions/senior-rust-cloud-developer.md"&gt;Senior Rust Cloud Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4019a818-4a7b-46ef-9225-c53c7a7f238c"&gt;Backend Engineer - Rust - Core Backend (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/fe1e07f4-6d7c-4f65-9a8f-27cf3b3fd2b1"&gt;Backend Engineer, Kraken Futures - Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/2863623f-13c9-4f50-992d-7c25736a60f9"&gt;Senior Rust Engineer - Banking (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Oso&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.osohq.com/company/jobs"&gt;Multiple Rust Positions Available (New York, NY, US or Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Connected Cars&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://connectedcars.io/jobs/embedded-software-engineer"&gt;Embedded/IoT Software Engineering (Copenhagen, DK)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Usually Rust figures out the &lt;a href="https://davedevine.wordpress.com/2011/01/20/the-sartre-joke/"&gt;Sartre question&lt;/a&gt; by itself&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://users.rust-lang.org/t/type-ascription/70214/4"&gt;kornel on rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1166"&gt;H2CO3&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/s88k78/this_week_in_rust_426/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 19 Jan 2022 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2022-01-19:/blog/2022/01/19/this-week-in-rust-426/</guid><category>This Week in Rust</category></item><item><title>This Week in Rust 425</title><link>https://this-week-in-rust.org/blog/2022/01/12/this-week-in-rust-425/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2022/01/11/1.58.0-prerelease.html"&gt;1.58.0 pre-release testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Foundation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foundation.rust-lang.org/posts/2022-01-06-happy-new-year-rustaceans-from-bec/"&gt;Happy New Year, Rustaceans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-osdev.com/this-month/2021-12/"&gt;This Month in Rust OSDev (December 2021)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2022/01/10/changelog-111.html"&gt;Rust Analyzer Changelog #111&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.antoyo.xyz/rustc_codegen_gcc-progress-report-7"&gt;rustc_codegen_gcc: Progress Report #7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bevyengine.org/news/bevy-0-6/"&gt;Bevy 0.6 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rg3d.rs/general/2022/01/07/0.24-feature-highlights.html"&gt;rg3d 0.24 Feature Highlights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.polaris64.net/post/lishwist-beta/"&gt;Lishwist (beta)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mabez.dev/blog/posts/esp-rust-10-01-2022/"&gt;Rust on Espressif chips - 10-01-2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/news/this-week-in-fluvio-0019/"&gt;This week in Fluvio #19: the programmable streaming platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rg3d.rs/general/2022/01/11/fyrox.html"&gt;The engine was renamed to Fyrox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://smallcultfollowing.com/babysteps//blog/2022/01/07/dyn-async-traits-part-7/"&gt;Dyn async traits, part 7: a design emerges?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ncameron.org/blog/rust-in-2022-2/"&gt;Rust in 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adventures.michaelfbryan.com/posts/bringing-include_dir-into-the-modern-era/"&gt;Bringing include_dir Into the Modern Era&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinhoffman.medium.com/rust-async-and-the-terrible-horrible-no-good-very-bad-day-348ebc836274"&gt;Rust Async and the Terrible, Horrible, No Good, Very Bad Day&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://briankung.dev/2022/01/07/crate-of-the-week-second-chance-list/"&gt;Crate of the Week second chance list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.osohq.com/post/building-vs-code-extension-with-rust-wasm-typescript"&gt;How we built a VS Code extension with Rust, WebAssembly, and TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.openw3b.org/crosvm-for-os-and-app-virtualization-on-linux/"&gt;App and OS Virtualization in Rust using crosvm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://poignardazur.github.io/2022/01/05/rust-wishlist-inout-syntax/"&gt;Rust 2030 Christmas list: Inout methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mojosd.medium.com/what-does-a-rustc-reading-club-do-8c9f9b336ff4"&gt;What does a Rustc Reading Club do?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.pnkfx.org/blog/2022/01/10/why-i-use-a-debugger/"&gt;Why I Use a Debugger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/053-julius-lungys/"&gt;Yew with Julius Lungys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=NB4w_0Wk0NA"&gt;Flying High with Flutter #40&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=pmt0aaquh4o"&gt;The Downside of Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2012.13129"&gt;Rast: A Language for Resource-Aware Session Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2201.03611"&gt;RISE &amp;amp; Shine: Language-Orientated Compiler Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sixtyfps.io/thisweek/2022-01-10.html"&gt;SixtyFPS (GUI crate): Changelog for 9th of January 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://weekly.databend.rs/2022-01-12-databend-weekly/"&gt;This week in Databend #24: an elastic and reliable cloud warehouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.brandons.me/blog/polymorphism-in-rust"&gt;Three Kinds of Polymorphism in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://deterministic.space/bevy-labels.html"&gt;How Bevy uses Rust traits for labeling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://edgarluque.com/blog/zstd-streaming-in-rust/"&gt;Parsing compressed files efficiently with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lucumr.pocoo.org/2022/1/6/rust-extension-map/"&gt;Rust Any Part 1: Extension Maps in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lucumr.pocoo.org/2022/1/7/as-any-hack/"&gt;Rust Any Part 2: As-Any Hack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/implement-naive-bayes-with-rust/"&gt;How to Implement a Naive Bayes Classifier with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dpc.pw/adding-parallelism-to-your-rust-iterators"&gt;Adding parallelism to your Rust iterators with dpc-pariter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.adamchalmers.com/nom-chars/"&gt;Parsing Text with Nom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://beijaflor.io/blog/01-2022/rust-audio-experiments-3/"&gt;Implementing a metronome with Rust and Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/sbelzile/making-games-in-rust-part-9-main-menu-screen-2170"&gt;Making Games in Rust - Part 9 - Main Menu Screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jabberwocky.ca/posts/2022-01-emulating_the_sega_genesis_part1.html"&gt;Emulating the Sega Genesis - Part I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://estada.ch/2022/1/7/how-to-install-cargo-outdated-in-osx-without-homebrew/"&gt;How to install cargo-outdated in OSX without homebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ibraheem.ca/writings/concurrency-with-threads/"&gt;Async Rust From The Ground Up: Concurrency With Threads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/secure-programming-with-vscode-dev-containers"&gt;Secure and immutable development environments with Dev Containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ZH] &lt;a href="https://zhuanlan.zhihu.com/p/456451233"&gt;2021 年 Rust 生态调研报告 | 星辰大海（上篇）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/s0pcfa/lets_take_a_moment_to_thank_joshua_nelson_for_his/"&gt;Let's take a moment to thank Joshua Nelson for his work on rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thenewstack.io/the-case-for-rust-as-the-future-of-javascript-infrastructure/"&gt;Could Rust be the Future of JavaScript Infrastructure?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://frehberg.com/2022/01/rust-memory-layout-optimization/"&gt;Rust Memory Layout Optimization (Enum)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/bytecodealliance/rustix"&gt;rustix&lt;/a&gt;, a crate with safe bindings to POSIX-ish syscalls.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/1003"&gt;Kornel&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Updates from the Rust Project&lt;/h2&gt;
&lt;p&gt;266 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2022-01-03..2022-01-10"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91907"&gt;allow &lt;code&gt;_&lt;/code&gt; as the length of array types and repeat expressions&lt;/a&gt; (this implements the closed RFC PR &lt;a href="https://github.com/rust-lang/rfcs/pull/2545"&gt;#2545&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/89819"&gt;cg: split dwarf for crate dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92507"&gt;suggest single quotes when char expected, str provided&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/90639"&gt;add a query for resolving an impl item from the trait item&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1952"&gt;miri: exclude mutable references to !Unpin types from uniqueness guarantees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92314"&gt;perf: do not use LEB128 for encoding u16 and i16&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92086"&gt;rustc_metadata: optimize and document module children decoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92636"&gt;normalize generator-local types with unevaluated constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92248"&gt;normalize struct tail type when checking Pointee trait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91884"&gt;constify &lt;code&gt;Box&amp;lt;T, A&amp;gt;&lt;/code&gt; methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92103"&gt;do not hash leading zero bytes of i64 numbers in Sip128 hasher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84640"&gt;implement &lt;code&gt;TryFrom&amp;lt;char&amp;gt;&lt;/code&gt; for &lt;code&gt;u8&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92657"&gt;implement const casts of raw pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92632"&gt;stabilize &lt;code&gt;#[feature(available_parallelism)]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92483"&gt;stabilize &lt;code&gt;result_cloned&lt;/code&gt; and &lt;code&gt;result_copied&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91754"&gt;modifications to &lt;code&gt;std::io::Stdin&lt;/code&gt; on Windows so that there is no longer a 4-byte buffer minimum in read()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/91587"&gt;core::ops::unsize: improve docs for DispatchFromDyn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/305"&gt;hashbrown: don't hash the key when searching in an empty table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10217"&gt;cargo: support rustflags per profile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/10214"&gt;cargo: be resilient to most IO error and filesystem loop while walking dirs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92608"&gt;rustdoc: introduce a resolver cache for sharing data between early doc link resolution and later passes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/92443"&gt;rustdoc: resolve associated traits for non-generic primitive types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/docs.rs/pull/1583"&gt;docs.rs: add "y" shortcut for permalink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8221"&gt;clippy: better detect when a field can be moved from in &lt;code&gt;while_let_on_iterator&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8220"&gt;clippy: consider auto-deref when linting &lt;code&gt;manual_swap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8224"&gt;clippy: fix &lt;code&gt;type_repetition_in_bounds&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8252"&gt;clippy: cover trait for &lt;code&gt;trait_duplication_in_bounds&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/8228"&gt;clippy: fix &lt;code&gt;iter_not_returning_iterator&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;Improvements generally outweighed regressions with most regressions coming in the form of correctness fixes (where performance regressions are generally less of a concern). The biggest win was arguably a change to the Sip128 hasher implementation which seemed to have decent performance implications for many real world crates. &lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=2b681ac06b1a6b7ea39525e59363ffee0d1a68e5&amp;amp;end=72e74d7b9cf1a7901650227e74650f1fcc797600&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;2b681ac..72e74d7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3 Regressions, 7 Improvements, 2 Mixed; 4 of them in rollups
28 comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2022-01-12.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/commits/master"&gt;Approved RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;No RFCs entered Final Comment Period this week.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://github.com/rust-lang/rust/issues?q=is%3Aopen+label%3Afinal-comment-period+sort%3Aupdated-desc"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/89621"&gt;doc: guarantee call order for sort_by_cached_key&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/rust-lang/rfcs/pulls"&gt;New RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3218"&gt;Rename {Option, Result}::expect to unwrap_or_panic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3217"&gt;Add RFC for providing ignore test message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3216"&gt;Allow using for&amp;lt;'a&amp;gt; syntax when declaring closures&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Upcoming Events&lt;/h2&gt;
&lt;p&gt;Rusty Events between 1/12/2022 - 2/9/2022 🦀&lt;/p&gt;
&lt;h3&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/boulder-elixir-rust/events/zvxcsrydccbqb/"&gt;January 12, 2022 | Boulder, CO, US | &lt;strong&gt;Monthly Meetup&lt;/strong&gt; | Boulder Elixir and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Developing-Embedded-Systems-in-Rhein-Main/events/282321009"&gt;January 12, 2022 | Frankfurt, DE | &lt;strong&gt;Rust for bare-metal embedded systems&lt;/strong&gt; | Developing Embedded Systems in Rhein-Main&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Los-Angeles/events/282580016/"&gt;January 12, 2022 | Los Angeles, CA, US | &lt;strong&gt;Live Coding Session - Mob Programming a Rust Code Kata [Virtual] Jan. 2022&lt;/strong&gt; | Rust Los Angeles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/events/gjrtqsydccbqb/"&gt;January 12, 2022 | Stuttgart, DE | &lt;strong&gt;Rust-Meetup&lt;/strong&gt; | Rust Community Stuttgart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Charlottesville-Rust-Meetup/events/282990814"&gt;January 13, 2022 | Charlottesville, VA, US | &lt;strong&gt;Higher kinded polymorphism&lt;/strong&gt; | Charlottesville Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/meetup-group-bxuhnetv/events/282770888"&gt;January 13, 2022 | Minneapolis, MN, US | &lt;strong&gt;Safe Systems Programming in Rust: The Promise and the Challenge&lt;/strong&gt; | Software Engineering Reading Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/283032744"&gt;January 13, 2022 | San Diego, CA, US | &lt;strong&gt;San Diego Rust Rust January 2022 Tele-Meetup&lt;/strong&gt; | San Diego Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/pl-PL/Rust-Warsaw/events/282879405/"&gt;January 13, 2022 | Warsaw, PL | &lt;strong&gt;Rust Warsaw #4&lt;/strong&gt; | Rust Warsaw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Los-Gatos-Rust-Reading-Group/events/283210346/"&gt;January 18, 2022 | Los Gatos, CA, US | &lt;strong&gt;Book #24 - Rust for Rustaceans - Chapter 2 (finishing) &amp;amp; Chapter 3 (beginning)&lt;/strong&gt; | Los Gatos Reading Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/vdhxgsydccbxb/"&gt;January 18, 2022 | Washington, DC, US| &lt;strong&gt;Mid-month Rustful&lt;/strong&gt; | Rust DC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/nwcmpsydccbzb"&gt;January 19, 2022 | Vancouver, BC, CA | &lt;strong&gt;Rust Study/Hack/Hang-out night&lt;/strong&gt; | Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/events/283204522/"&gt;January 20, 2022 | Cardiff, UK | &lt;strong&gt;Rust Book Study Session - Functional Language Features &amp;amp; Cargo and Crates.io&lt;/strong&gt; | Rust and C++ Cardiff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/jqxqwrydccbhc/"&gt;January 25, 2022 | Dallas, TX, US | &lt;strong&gt;Last Tuesday Meetup&lt;/strong&gt; | Dallas Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-noris/events/283118050/"&gt;January 27, 2022 | Nürnberg, DE | &lt;strong&gt;Rust Nürnberg online #9&lt;/strong&gt;| Rust Nuremberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/events/282545254"&gt;January 27, 2022 | Stuttgart, DE | &lt;strong&gt;Rust-Meetup&lt;/strong&gt; | Rust Community Stuttgart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/283011769"&gt;February 1, 2022 | Buffalo, NY, US | &lt;strong&gt;First Tuesdays: Buffalo Rust User Group&lt;/strong&gt; | Buffalo Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/events/282545292"&gt;February 9, 2022 | Stuttgart, DE | &lt;strong&gt;Rust-Meetup&lt;/strong&gt; | Rust Community Stuttgart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/lhpkmsydccbqb/"&gt;January 12, 2022 | Atlanta, GA, US | &lt;strong&gt;Grab a beer with fellow Rustaceans&lt;/strong&gt; | Rust Atlanta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrydccbrb/"&gt;January 13, 2022 | Columbus, OH, US | &lt;strong&gt;Monthly Meeting&lt;/strong&gt; | Columbus Rust Society&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/san-francisco-rust-study-group/events/283208406/"&gt;January 18, 2022 | San Francisco, CA, US | &lt;strong&gt;Rust Hacking in Person&lt;/strong&gt; | San Francisco Rust Study Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Dreamsolution&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dreamsolution.nl/2021-12-30-vacature-rust-developer.html#english"&gt;Rust developer (Delft, NL)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;LoanPASS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://loanpass.io/careerPage.html"&gt;Full Stack Engineer, Rust + Typescript (Remote US)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4019a818-4a7b-46ef-9225-c53c7a7f238c"&gt;Backend Engineer - Rust - Core Backend (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/fe1e07f4-6d7c-4f65-9a8f-27cf3b3fd2b1"&gt;Backend Engineer, Kraken Futures - Rust (Remote GMT + or - 2 hours)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/2863623f-13c9-4f50-992d-7c25736a60f9"&gt;Senior Rust Engineer - Banking (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Language stability is not just about semver compatibility. It's also about not burdening developers to have to make new decisions when looking at old code. [Language instability] creates churn and debate about things that previously didn't require it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://internals.rust-lang.org/t/rust-2030-christmas-list-inout-methods/15944/3"&gt;skysch on rust-internals&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1165"&gt;Christopher Durham&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;, &lt;a href="https://github.com/ericseppanen"&gt;ericseppanen&lt;/a&gt;, &lt;a href="https://github.com/extrawurst"&gt;extrawurst&lt;/a&gt;, &lt;a href="https://github.com/andrewpollack"&gt;andrewpollack&lt;/a&gt;, &lt;a href="https://github.com/U007D"&gt;U007D&lt;/a&gt;, &lt;a href="https://github.com/kolharsam"&gt;kolharsam&lt;/a&gt;, &lt;a href="https://github.com/joelmarcey"&gt;joelmarcey&lt;/a&gt;, &lt;a href="https://github.com/mariannegoldin"&gt;mariannegoldin&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Email list hosting is sponsored by &lt;a href="https://foundation.rust-lang.org/"&gt;The Rust Foundation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/s2nayu/this_week_in_rust_425/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 12 Jan 2022 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:this-week-in-rust.org,2022-01-12:/blog/2022/01/12/this-week-in-rust-425/</guid><category>This Week in Rust</category></item></channel></rss>