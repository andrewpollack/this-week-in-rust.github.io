<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>This Week in Rust</title><link>https://this-week-in-rust.org/</link><description></description><atom:link href="https://this-week-in-rust.org/rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 18 Aug 2021 00:00:00 -0400</lastBuildDate><item><title>This Week in Rust 404</title><link>https://this-week-in-rust.org/blog/2021/08/18/this-week-in-rust-404/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the case of this newsletter, 404 is indeed found!&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/08/16/changelog-90.html"&gt;rust-analyzer Changelog #90&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2021/08/16/changelog-153.html"&gt;IntelliJ Rust Changelog #153&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sixtyfps.io/thisweek/2021-08-16.html"&gt;Sixtyfps weekly report for 16th of August 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aaronerhardt.github.io/blog/posts/relm_beta/"&gt;Relm4 beta released 🎉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/news/this-week-in-fluvio-0002/"&gt;This week in Fluvio #2: the programmable streaming platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tensorbase.io/thisweek/2021-08-11-tw_15/"&gt;This Week In TensorBase 15&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datafuselabs.github.io/weekly/2021-08-11-datafuse-weekly/"&gt;This week in Datafuse #2&lt;/a&gt; &amp;amp; &lt;a href="https://datafuselabs.github.io/weekly/2021-08-18-datafuse-weekly/"&gt;This week in Datafuse #3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://diziet.dreamwidth.org/"&gt;nailing-cargo 1.0.0 - cargo wrapper for privsep, and for unpublished dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gfx-rs.github.io/2021/08/18/release-0.10.html"&gt;wgpu: Release of a Pure-Rust v0.10 and a Call For Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.reddit.com/r/rust/comments/p2x38x/media_rg3d_game_engine_v022_feature_highlights/"&gt;rg3d game engine v0.22 - feature highlights&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/rust-large-cargo-workspace"&gt;How to deal with large Cargo workspaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://instantdomainsearch.com/engineering/instant-word-segmentation-with-rust"&gt;Instant word segmentation with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://renato.athaydes.com/posts/how-to-write-fast-rust-code.html"&gt;How to write fast Rust code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cmyr.net/blog/rust-gui-infra.html"&gt;Rust GUI Infrastructure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://truelayer.com/blog/adding-middleware-support-to-rust-reqwest"&gt;Adding middleware support to Rust reqwest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stegosaurusdormant.com/understanding-derive-clone/"&gt;Understanding #[derive(Clone)] in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/p45tw7/going_from_haskell_to_rust/"&gt;Going from Haskell to Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/Ws3jC6AJC_4"&gt;Async engines in C++20, Rust, &amp;amp; Zig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/Q9cIBg62Ktg"&gt;Flutter/Rust Roundtable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/p4hil6/an_analogy_that_helped_me_understand_the_borrow/"&gt;An analogy that helped me understand the borrow checker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/rust-fast-port-scanner"&gt;A fast port scanner in 100 lines of Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/rpc-to-call-a-runtime-api-easily-in-substrate/"&gt;RPC to call a Runtime API easily in Substrate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/aviillouz/writing-a-lambda-with-rust-using-aws-lambda-rust-runtime-and-aws-sdk-rust-1aln"&gt;Writing a lambda in Rust using lambda-runtime and aws-sdk-rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adventures.michaelfbryan.com/posts/daily/slice-patterns/"&gt;Daily Rust: Slice Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://saidvandeklundert.net/learn/2021-08-06-rust-ssh-cli-tool/"&gt;Learning Rust by building an SSH cli tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4km2UijVC3M"&gt;Getting started with Rust programming language 🦀 2021: 4. Building a CLI app in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.burntsushi.net/transducers/"&gt;Index 1,600,000,000 Keys with Automata and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.getsynth.com/docs/blog/2021/08/09/macro"&gt;Complex Procedural Rust Macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/bexxmodd/getting-started-with-systems-programming-with-rust-part-1-2i13"&gt;Getting Started with Systems Programming with Rust (Part 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/akkoro/deploy-a-jamstack-site-on-aws-lambda-with-api-gateway-in-10-minutes-or-less-kb0"&gt;Deploy a Jamstack site on AWS Lambda with API Gateway in 10 minutes or less&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tim.mcnamara.nz/post/659305450250141696/rust-type-conversions"&gt;Rust Type Conversion (Part 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lupyuen.github.io/articles/rustsim"&gt;Rust on RISC-V BL602: Simulated with WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tcmal.xyz/rust-type-lists/"&gt;Rust Type Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nessuent.xyz/posts/2021-08-14_tag-wasm-rust.html"&gt;Tag input assistant for \&amp;lt;select&gt; elements in Rust/wasm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://owengage.com/writing/#exploring-serde-with-toy-deserializer"&gt;Exploring &lt;code&gt;serde&lt;/code&gt;'s data model with a toy deserializer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yossarian.net/2021/07/19/LLVM-internals-part-1-bitcode-format"&gt;LLVM internals, part 1: the bitcode format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yossarian.net/2021/08/10/LLVM-internals-part-2-parsing-the-bitstream"&gt;LLVM internals, part 2: parsing the bitstream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="research"&gt;Research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/jIbubw86p0M"&gt;GhostCell: Separating Permissions from Data in Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/p6o3ib/rust_2021_close_to_stabilization_currently/"&gt;Rust 2021 close to stabilization, currently testing all public crates (10,000 done so far)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://paulbutler.org/2021/calling-webassembly-from-rust/"&gt;Calling WebAssembly from Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/p5j1lw/upcoming_error_message_formatting_enhancements_in/"&gt;Upcoming error message formatting enhancements in Rust 1.56&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infinyon.com/blog/2021/08/smartstream-map-use-cases/"&gt;Transforming streaming data in real-time with WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/getsynth/synth"&gt;synth&lt;/a&gt;, a declarative test data generator written in Rust.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/942"&gt;llogiq&lt;/a&gt; shamelessly used his recent self-suggestion for lack of another nomination.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="module-of-the-week"&gt;Module of the Week&lt;/h2&gt;
&lt;p&gt;Continuing &lt;a href="https://motw.rs"&gt;Rust Module of the Week&lt;/a&gt; this week is &lt;a href="https://motw.rs/blog/2021/08/08/stdfs-part-2-dirs-dirs-dirs/"&gt;std::fs Part 2: Dirs, Dirs, Dirs&lt;/a&gt;. Contribution and feedback welcome &lt;a href="https://github.com/slyons/rust-module-of-the-week"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitUI has an easy to get started code base, mentoring and &lt;a href="https://github.com/extrawurst/gitui/labels/good%20first%20issue"&gt;good-first-issues waiting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getsynth/synth/issues/67"&gt;getsynth/synth - Support postgres json and jsonb types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/issues/1762"&gt;ockam-network/ockam - Like ngrok, but using Ockam&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h2&gt;
&lt;p&gt;197 pull requests were &lt;a href="https://github.com/search?p=20&amp;amp;q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-08-09..2021-08-16&amp;amp;type=Issues"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86532"&gt;make deleted code in a suggestion clearer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87478"&gt;point to where clause for GATs to add bound&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87889"&gt;use smaller spans when suggesting method call disambiguation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87819"&gt;use a more accurate span on assoc types WF checks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86840"&gt;constify implementations of (&lt;code&gt;Try&lt;/code&gt;)&lt;code&gt;From&lt;/code&gt; for int types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87982"&gt;add automatic migration for &lt;code&gt;assert!(.., string)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87956"&gt;fix closure migration suggestion when the body is a macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86492"&gt;associated functions that contain &lt;code&gt;extern&lt;/code&gt; indicator or have &lt;code&gt;#[rustc_std_internal_symbol]&lt;/code&gt; are reachable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87254"&gt;LLVM codegen: don't emit zero-sized padding for fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84039"&gt;uplift the invalid_atomic_ordering lint from clippy to rustc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83417"&gt;run &lt;code&gt;RemoveZsts&lt;/code&gt; pass at &lt;code&gt;mir-opt-level=1&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87916"&gt;implement &lt;code&gt;black_box&lt;/code&gt; using intrinsic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87913"&gt;specialize &lt;code&gt;Vec::clone_from&lt;/code&gt; for &lt;code&gt;Copy&lt;/code&gt; types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87581"&gt;add support for &lt;code&gt;clobber_abi&lt;/code&gt; to &lt;code&gt;asm!&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87590"&gt;deprecate &lt;code&gt;llvm_asm!&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87636"&gt;add the Option::unzip() method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87974"&gt;test and fix &lt;code&gt;size_hint&lt;/code&gt; for slice’s (&lt;code&gt;r&lt;/code&gt;)&lt;code&gt;split&lt;/code&gt;* iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85835"&gt;implement &lt;code&gt;Extend&amp;lt;(A, B)&amp;gt;&lt;/code&gt; for &lt;code&gt;(Extend&amp;lt;A&amp;gt;, Extend&amp;lt;B&amp;gt;)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9791"&gt;cargo: teach cargo to failfast on recursive/corecursive aliases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9789"&gt;cargo: fix value-after-table error with profiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9627"&gt;cargo: ability to specify the output name for a bin target different from the crate name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7541"&gt;clippy: &lt;code&gt;never_loop&lt;/code&gt;: suggest using an if let instead of a for loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7535"&gt;clippy: properly handle &lt;code&gt;Self&lt;/code&gt; type for &lt;code&gt;trivially_copy_pass_by_ref&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7566"&gt;clippy: check expr usage for &lt;code&gt;manual_flatten&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7531"&gt;clippy: fix &lt;code&gt;manual_map&lt;/code&gt; non-compiling suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7562"&gt;clippy: fix false positive on &lt;code&gt;filter_next&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7478"&gt;clippy: fix &lt;code&gt;nonstandard_macro_braces&lt;/code&gt; false positive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7560"&gt;clippy: use &lt;code&gt;avoid-breaking-exported-api&lt;/code&gt; configuration in &lt;code&gt;types&lt;/code&gt; module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7516"&gt;clippy: add &lt;code&gt;unwrap_or_else_default&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;A fairly busy week which was to expected given that we've &lt;a href="https://github.com/rust-lang/rustc-perf/pull/956"&gt;adjusted our algorithm&lt;/a&gt; for whether we label a change as a regression or not. Most regressions were relatively small, and only one has not yet been addressed in some way.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=6b20506d17f4e5e5bf5bcad7e94add4d754b0ae3&amp;amp;end=aa8f27bf4d980023a8b245ceb25a490a18041eb2&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;6b2050..aa8f27&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;59 comparisons made in total
3 Regressions, 2 Improvements, 2 Mixed; 0 of them in rollups&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-08-17.md"&gt;Full report here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;Approved RFCs&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="final-comment-period"&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/86516"&gt;Stabilize "force warn" option&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-rfcs"&gt;New RFCs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3159"&gt;RFC: let-expression&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="upcoming-events"&gt;Upcoming Events&lt;/h2&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Boulder-Denver/events/278909353/"&gt;August 18, 2021, Denver, CO, US - Level up our Rust skills by building an ECS by Brooks Patton - Rust Denver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/zkqvjsycclbxb/"&gt;August 18, 2021, Vancouver, BC, CA - Solving LeetCode Problems with Rust - Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-manchester/events/279730616/"&gt;August 19, 2021, Manchester, UK - Rust Manchester - Speeding Up the Snake: Extending Python with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://berline.rs/"&gt;August 19, 2021, Berlin, DE - Rust Hack and Learn - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/"&gt;August 31, 2021, Dallas, TX - Last Tuesday - Dallas Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Etsy&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://careers.etsy.com/global/en/job/JR605/Senior-Software-Engineer-Search-Indexing"&gt;Senior Software Engineer, Search Indexing (Remote US)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Nymi&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nymi.com/careers"&gt;Senior Software Developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Dialectic AG&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://swissdevjobs.ch/de/jobs/Dialectic-AG-Software-Development-Intern"&gt;Software Development Intern - Rust (EU / CH)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;PolarFox Network&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jro-ventures.breezy.hr/p/0c1d3630d39d"&gt;Senior Rust Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ChainSafe&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.smartrecruiters.com/ChainSafeSystemsInc/743999739358248-rust-developer"&gt;Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Stader&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.notion.so/Job-Openings-at-Stader-a0faadf6454c4f29a68f23851d901619?p=519b05172ea04263ae09a2d54b004c15"&gt;Senior &amp;amp; Junior Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Headline&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://old.reddit.com/r/rust/comments/ou5szr/official_rrust_whos_hiring_thread_for_jobseekers/h9f4r52/"&gt;Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Apple&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.apple.com/en-us/details/200256576/ai-ml-software-engineer-information-intelligence?team=MLAI"&gt;Senior Rust Engineer (Seattle)&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.apple.com/en-us/details/200275619/software-engineer?team=SFTWR"&gt;Software Engineer, Distributed Block Storage (Seattle, WA, USA)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/junior-backend-engineer/en"&gt;Junior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/senior-backend-engineer/en"&gt;Senior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NZXT&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nzxt.bamboohr.com/jobs/view.php?id=259"&gt;Senior Software Engineer for CAM (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nzxt.bamboohr.com/jobs/view.php?id=317"&gt;Senior Software Engineer for Streaming Software (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4019a818-4a7b-46ef-9225-c53c7a7f238c"&gt;Backend Engineer - Rust - Core Backend (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/2863623f-13c9-4f50-992d-7c25736a60f9"&gt;Senior Banking Engineer - Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Subspace Labs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/subspacelabs"&gt;Several positions available (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt; : You can't move your object and try to keep it, too.&lt;br /&gt;
&lt;strong&gt;Me&lt;/strong&gt; : Ok, I suppose I can clone it?&lt;br /&gt;
&lt;strong&gt;Rust&lt;/strong&gt; : Then implement a clone method.&lt;br /&gt;
&lt;strong&gt;Me&lt;/strong&gt; : Why am I getting a stack overflow?&lt;br /&gt;
&lt;strong&gt;Rust&lt;/strong&gt; : It is never a good idea for a clone method to call itself.&lt;br /&gt;
&lt;strong&gt;Me&lt;/strong&gt; : I just wanted to simplify the trivial cases.&lt;br /&gt;
&lt;strong&gt;Rust&lt;/strong&gt; : It is still not a good idea for a clone method to call itself.&lt;br /&gt;
&lt;strong&gt;Me&lt;/strong&gt; : I can't believe I have gotten myself into this.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://users.rust-lang.org/t/writing-my-first-multi-threaded-app-with-rust-be-like/63481"&gt;Oliver Ruebenacker on rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1093"&gt;MBartlett21&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/p77w8q/this_week_in_rust_404/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 18 Aug 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-08-18:blog/2021/08/18/this-week-in-rust-404/</guid></item><item><title>This Week in Rust 403</title><link>https://this-week-in-rust.org/blog/2021/08/10/this-week-in-rust-403/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2021/08/03/GATs-stabilization-push.html"&gt;The push for GATs stabilization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/08/04/lang-team-aug-update.html"&gt;Lang team August update&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gamedev.rs/news/024/"&gt;This Month in Rust GameDev #24 - July 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-osdev.com/this-month/2021-07/"&gt;This Month in Rust OSDev (July 2021)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mgattozzi.substack.com/p/the-monthly-oxide-5"&gt;The Monthly Oxide #5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://motw.rs/blog/2021/08/08/stdfs-part-2-dirs-dirs-dirs/"&gt;Rust Module of the Week: std::fs (Part 2): Dirs, Dirs, Dirs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/oz50qk/rustdoc_will_now_add_jump_to_definition_links_in/"&gt;Rustdoc will now add Jump to Definition links in source code pages!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/08/09/changelog-89.html"&gt;rust-analyzer Changelog #89&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/blog/2021/08/03/financial-report-3.html"&gt;rust-analyzer Financial Report #3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/rust/2021/08/04/what-s-new-in-intellij-rust-for-the-2021-2-release-cycle/"&gt;Whats New in IntelliJ Rust for the 2021.2 Release Cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sixtyfps.io/thisweek/2021-08-09.html"&gt;SixtyFPS weekly report for 8th of August 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/chainsafe-systems/how-do-mina-nodes-communicate-5a10b80fa253"&gt;How do Mina nodes communicate? Implementing bin_prot in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trunkrs.dev/blog/v10-v13/"&gt;Trunk v0.10 – v0.13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bevyengine.org/news/bevys-first-birthday/"&gt;Bevy's First Birthday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bjorn3.github.io/2021/08/05/progress-report-july-2021.html"&gt;Progress report on rustc_codegen_cranelift (July 2021)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/oymdoj/upcoming_volt_a_rustbased_package_manager_thats/"&gt;[upcoming] Volt - A rust-based package manager that's up to 12x faster than Yarn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://diaries.vercel.app/posts/collecting-result/"&gt;On Collecting Result Types in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://serokell.io/blog/rust-in-production-qovery"&gt;Rust in Production: Qovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://renato.athaydes.com/posts/how-to-write-slow-rust-code-part-2.html"&gt;How to write really slow Rust code - Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.backtrace.io/2021-08-04-slitter-a-slab-allocator-that-trusts-but-verifies/"&gt;Slitter: a slab allocator that trusts but verifies (in Rust, for C)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.polybdenum.com/2021/08/09/when-zero-cost-abstractions-aren-t-zero-cost.html"&gt;When Zero Cost Abstractions Aren't Zero Cost&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/uggla/rust-cli-example-ferris-fetches-go-gopher-postcards-3gb5"&gt;Rust cli example: Ferris fetches Go gopher postcards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lokathor.github.io/prng/"&gt;A Little Bit About PRNG Stuff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.frankel.ch/start-rust/9/"&gt;Rust's Vector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.guillaume-gomez.fr/articles/2021-07-29+Interacting+with+data+from+FFI+in+Rust"&gt;Interacting with data from FFI in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kdheepak.com/loading-a-rust-library-as-a-lua-module-in-neovim.html"&gt;Loading a Rust library as a Lua module in Neovim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.crowdsupply.com/sutajio-kosagi/precursor/updates/adding-rust-stable-libstd-support-for-xous"&gt;Adding Rust-Stable libstd Support for Xous&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rogertorres/rust-bdd-with-cucumber-4p68"&gt;Rust BDD tests with Cucumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cmyr.net/blog/gui-framework-ingredients.html"&gt;So you want to write a GUI framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@cazanator/tauri-with-standard-svelte-or-sveltekit-ad7f103c37e7"&gt;Tauri with Standard Svelte or SvelteKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[JP] &lt;a href="https://developers.cyberagent.co.jp/blog/archives/31110/"&gt;Rust で Web バックエンド開発をはじめる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/n5LDjWIAByM"&gt;Explaining Rust Analyzer 08: Mini Rowan, Green and Red Trees&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="research"&gt;Research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sick.codes/sick-2021-015"&gt;CVE-2021-29922 – rust standard library “net” – Improper Input Validation of octal literals in rust 1.52.0 std::net and below results in indeterminate SSRF &amp;amp; RFI vulnerabilities.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rustype/typestate-rs/blob/main/paper/sblp21.pdf"&gt;Retrofitting Typestates into Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vksegfault.github.io/posts/simd-usage-cpp-csharp-rust/"&gt;SIMD usage in C++, C# and RUST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/p1t32e/media_rip_16bit_crate_ids/"&gt;RIP 16-bit crate IDs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/oygrp1/your_favorite_rust_cli_utility_i_have_my_top_10/"&gt;Your favorite Rust CLI utility?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bleepingcomputer.com/news/security/go-rust-net-library-affected-by-critical-ip-address-validation-vulnerability/"&gt;Go, Rust "net" library affected by critical IP address validation vulnerability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/p0bu4a/microsoft_rust_intro_says_rust_is_known_to_leak/"&gt;Microsoft Rust intro says "Rust is known to leak memory"&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/ockam"&gt;ockam&lt;/a&gt;, a crate to implement transport-agnostic end-to-end encryption for the rest of us.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/943"&gt;staticassert&lt;/a&gt; for the suggestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="module-of-the-week"&gt;Module of the Week&lt;/h2&gt;
&lt;p&gt;Continuing &lt;a href="https://motw.rs"&gt;Rust Module of the Week&lt;/a&gt; this week is &lt;a href="https://motw.rs/blog/2021/08/08/stdfs-part-2-dirs-dirs-dirs/"&gt;std::fs Part 2: Dirs, Dirs, Dirs&lt;/a&gt;. Contribution and feedback welcome &lt;a href="https://github.com/slyons/rust-module-of-the-week"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/this-week-in-rust/issues/2274"&gt;rust-lang/this-week-in-rust - Feature request: Dark theme for the website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Stranger6667/jsonschema-rs/issues/266"&gt;Stranger6667/jsonschema-rs - Implement the uuid format validator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Stranger6667/jsonschema-rs/issues/265"&gt;Stranger6667/jsonschema-rs - Implement the duration format validator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Stranger6667/jsonschema-rs/issues/261"&gt;Stranger6667/jsonschema-rs - Option to turn off processing of the format keyword&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h2&gt;
&lt;p&gt;324 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-08-02..2021-08-09"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86155"&gt;fill out remaining parts of C-unwind ABI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87248"&gt;CTFE: throw unsupported error when partially overwriting a pointer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87712"&gt;proc macro spans: make columns 1 based&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87235"&gt;improve diagnostics for wrongly ordered keywords in function declaration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87568"&gt;replace &lt;code&gt;HirId&lt;/code&gt;s with &lt;code&gt;LocalDefId&lt;/code&gt;s in &lt;code&gt;AccessLevels&lt;/code&gt; tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87784"&gt;add &lt;code&gt;config.toml&lt;/code&gt; options for enabling overflow checks in rustc and std&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87777"&gt;use zeroed allocations in the mir interpreter instead eagerly touching the memory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87737"&gt;only compute &lt;code&gt;is_freeze&lt;/code&gt; for layout-constrained ADTs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87716"&gt;allow generic SIMD array element type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87645"&gt;properly find owner of closure in THIR unsafeck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87150"&gt;make &lt;code&gt;wrapping_neg()&lt;/code&gt; use &lt;code&gt;wrapping_sub()&lt;/code&gt;, &lt;code&gt;#[inline(always)]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86879"&gt;stabilize &lt;code&gt;Vec&amp;lt;T&amp;gt;::shrink_to&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86744"&gt;&lt;code&gt;impl Default, Copy, Clone for std::io::Sink&lt;/code&gt; and &lt;code&gt;Empty&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86183"&gt;change environment variable getters to error recoverably&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81797"&gt;add &lt;code&gt;core::stream::from_iter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2471"&gt;futures: implement &lt;code&gt;Default&lt;/code&gt; for &lt;code&gt;OptionFuture&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7534"&gt;clippy: don't emit &lt;code&gt;too_many_lines&lt;/code&gt; for closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7506"&gt;clippy: add xor case to manual swap lint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;Quiet week for performance, with no large changes. Regressions are limited to just a few benchmarks.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@simulacrum&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=998cfe5aad7c21eb19a4bca50f05a13354706970&amp;amp;end=3354a44d2fa8d5ba6b8d6b40d2596de2c8292ec1&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;998cfe5..3354a44&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 Regressions, 0 Improvements, 0 Mixed; 1 of them in rollups&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-08-03.md"&gt;Full report here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;Approved RFCs&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2316"&gt;RFC: Overconstraining and omitting unsafe in impls of unsafe trait methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/66358"&gt;Tracking issue for UnsafeCell::raw_get&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-rfcs"&gt;New RFCs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3159"&gt;RFC: let-expression&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="upcoming-events"&gt;Upcoming Events&lt;/h2&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/vqtjcsycclbnb/"&gt;August 10, 2021, Dallas, TX, US - Second Tuesday - Dallas Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Boulder-Denver/events/278909353/"&gt;August 18, 2021, Denver, CO, US - Level up our Rust skills by building an ECS by Brooks Patton - Rust Denver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/zkqvjsycclbxb/"&gt;August 18, 2021, Vancouver, BC, CA - Solving LeetCode Problems with Rust - Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-manchester/events/279730616/"&gt;August 19, 2021, Manchester, UK - Rust Manchester - Speeding Up the Snake: Extending Python with Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/lhpkmsycclbpb/"&gt;August 11, 2021, Atlanta, GA, US - Grab a beer with fellow Rustaceans - Rust Atlanta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;TrueLayer&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apply.workable.com/truelayer/j/42914EDDEC/"&gt;Associate Software Engineer - PayDirect (Milan, IT)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Xayn&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://xayn.jobs.personio.de/job/288899"&gt;(Senior) Rust Engineer (Berlin, Germany)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ChainSafe&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.smartrecruiters.com/ChainSafeSystemsInc/743999739358248-rust-developer"&gt;Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/junior-backend-engineer/en"&gt;Junior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/senior-backend-engineer/en"&gt;Senior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NZXT&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nzxt.bamboohr.com/jobs/view.php?id=259"&gt;Senior Software Engineer for CAM (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nzxt.bamboohr.com/jobs/view.php?id=317"&gt;Senior Software Engineer for Streaming Software (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4c864c8f-bde6-443d-b521-dd90df0e9105"&gt;Senior Backend Engineer - Rust - Core Backend (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/2863623f-13c9-4f50-992d-7c25736a60f9"&gt;Senior Banking Engineer - Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tempus Ex&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tempus-ex.com/careers?r=twir"&gt;Several positions available (San Francisco, CA, US, Atlanta, GA, US, Austin, TX, US and Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;p&gt;We regrettably lack nominations,&lt;br /&gt;
so as I can't choose fresh quotations,&lt;br /&gt;
at last nor this time,&lt;br /&gt;
I'll offer this rhyme&lt;br /&gt;
to quell all discombombulations.&lt;/p&gt;
&lt;p&gt;– a very sorry llogiq&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/p2701i/this_week_in_rust_403/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 10 Aug 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-08-10:blog/2021/08/10/this-week-in-rust-403/</guid></item><item><title>This Week in Rust 402</title><link>https://this-week-in-rust.org/blog/2021/08/04/this-week-in-rust-402/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2021/07/29/Rust-1.54.0.html"&gt;Announcing Rust 1.54.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2021/08/03/GATs-stabilization-push.html"&gt;The push for GATs stabilization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/07/30/compiler-team-august-steering-cycle.html"&gt;Rust Compiler August Steering Cycle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2021/08/02/changelog-152.html"&gt;IntelliJ Rust Changelog #152&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/rust/2021/08/04/what-s-new-in-intellij-rust-for-the-2021-2-release-cycle/"&gt;What's new in IntelliJ Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/08/02/changelog-88.html"&gt;rust-analyzer Changelog #88&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thephilbert.io/2021/08/02/gcc-rust-monthly-report-8-july-2021/"&gt;GCC Rust Monthly Report #8 July 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.antoyo.xyz/rustc_codegen_gcc-progress-report-2"&gt;rustc_codegen_gcc: Progress Report #2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mabez.dev/blog/posts/esp-rust-espressif/"&gt;Rust on Espressif chips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sfu-db/connector-x"&gt;ConnectorX: accelerate data loading from databases to dataframes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sixtyfps.io/thisweek/2021-08-02.html"&gt;This week in SixtyFPS (a Rust GUI toolkit)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/news/this-week-in-fluvio-0001/"&gt;This week in Fluvio 1: the programmable streaming platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datafuselabs.github.io/weekly/2021-08-04-datafuse-weekly/"&gt;This week in Datafuse #1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tensorbase.io/thisweek/2021-08-04-tw_14/"&gt;This Week In TensorBase 14&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/high-performance-rust-with-sqlite/"&gt;15k inserts/s with Rust and SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://able.bio/haixuanTao/deep-learning-in-rust-with-gpu--26c53a7f"&gt;Deep Learning in Rust with GPU using onnxruntime-rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itnext.io/rewriting-my-mobile-game-in-rust-targeting-wasm-1f9f82751830"&gt;Rewriting my mobile game in Rust targeting WASM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://renato.athaydes.com/posts/how-to-write-slow-rust-code.html"&gt;How to write really slow Rust code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/mapoulos/rust-first-thoughts-7l0"&gt;Rust: First Thoughts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bexxmodd.com/post/5-reasons-why-use-rust"&gt;5 Reasons Why You Should Start Using Rust for Personal Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jstrong.dev/posts/2021/borrowck-battle-to-remember/"&gt;A Borrowck Battle to Remember&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://opensourcesecurity.io/2021/08/01/episode-282-the-security-of-rust-who-left-all-this-awesome-in-here/"&gt;Open Source Security Episode 282 - The security of Rust: who left all this awesome in here?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ibraheem.ca/writings/a-simple-web-server/"&gt;Async Rust From The Ground Up: A Simple Web Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tiemen/implementing-base64-from-scratch-in-rust-kb1"&gt;Implementing Base64 from scratch with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.guillaume-gomez.fr/articles/2021-08-03+Improvements+for+%23%5Bdoc%5D+attributes+in+Rust"&gt;Improvements for #[doc] attributes in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/deploy-rust-on-heroku-with-docker/"&gt;How to deploy Rust on Heroku (with Docker)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/cthutu/rust-7-command-line-interfaces-4084"&gt;Rust #7: Command-Line interfaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/xphoniex/adding-our-own-custom-statement-to-rust-language-30lc"&gt;Adding our own custom statement to Rust language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/jcarlosv/core-dump-for-rust-10nm"&gt;Core dump for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lpalmieri.com/posts/naive-newsletter-delivery/"&gt;Zero to Production in Rust #9: Naive Newsletter Delivery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.guillaume-gomez.fr/articles/2021-07-29+Interacting+with+data+from+FFI+in+Rust"&gt;Interacting with data from FFI in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/tree/develop/documentation/use-cases/end-to-end-encryption-with-rust#readme"&gt;How I built End-to-End Encrypted Messaging in 51 lines of Rust, using the Ockam crate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[PT] &lt;a href="https://dev.to/henrybarreto/resumo-closure-no-rust-4gal"&gt;Resumo: Closure no Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ZH-CN] &lt;a href="https://tony612.github.io/tokio-internals"&gt;Tokio Internals - 源码解读和设计分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/owll2j/rust_is_the_most_loved_language_six_years_in_a/"&gt;Rust is the most loved language, SIX YEARS IN A ROW. StackOverflow Survey 2021 is out!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/owtiuf/rust_module_of_the_week/"&gt;Rust Module of the Week!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.acm.org/media-center/2021/july/dissertation-award-2020"&gt;University of Illinois at Urbana-Champaign Graduate (Ralf Jung) receives ACM Doctoral Dissertation Award&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yingtongli.me/blog/2021/07/30/blt-parser.html"&gt;Implementing a BLT parser by hand in Rust (vs pest and combine): OpenTally dev log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lupyuen.github.io/articles/adc"&gt;Rust on RISC-V BL602: Is It Sunny?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cppfaq.rs"&gt;Rust Design FAQ for C++ Programmers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.osohq.com/rust/guides/roles/getting-started.html"&gt;🦀 Role-Based Access Control (RBAC) Guide in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.bettercode.eu/"&gt;betterCode Rust Conference announced (October 13)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/sycamore"&gt;sycamore&lt;/a&gt;, a crate for making web applications using WebAssembly..&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/941"&gt;Luke Chu&lt;/a&gt; for the self-suggestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="module-of-the-week"&gt;Module of the Week&lt;/h2&gt;
&lt;p&gt;Launching this week is &lt;a href="https://motw.rs"&gt;Rust Module of the Week&lt;/a&gt; with &lt;a href="https://motw.rs/blog/2021/08/01/stdfs-part-1/"&gt;std::fs Part 1&lt;/a&gt;. Contribution and feedback welcome &lt;a href="https://github.com/slyons/rust-module-of-the-week"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vandenheuvel/relp/issues/15"&gt;vandenheuvel/relp - A faster implementation of Markowitz' pivot rule in LU factorization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vandenheuvel/relp/issues/30"&gt;vandenheuvel/relp - Parsing the LP file format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/issues/1655"&gt;ockam-network/ockam - Make Rust Errors more idiomatic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/issues/1624"&gt;ockam-network/ockam - File Transfer over end-to-end encrypted secure channels&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h2&gt;
&lt;p&gt;324 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-07-26..2021-08-02"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86735"&gt;&lt;code&gt;#[derive(Default)]&lt;/code&gt; on enums with a &lt;code&gt;#[default]&lt;/code&gt; attribute&lt;/a&gt; (RFC &lt;a href="https://rust-lang.github.io/rfcs/3107-derive-enum-default.html"&gt;#3107&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87557"&gt;fix issue with autofix for ambiguous associated function from Rust 2021 prelude when struct is generic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86450"&gt;add flag to configure &lt;code&gt;large_assignments&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86998"&gt;make const &lt;code&gt;panic!("..")&lt;/code&gt; work in Rust 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87453"&gt;suggest removing unnecessary &lt;code&gt;&amp;amp;mut&lt;/code&gt; as help message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87436"&gt;suggest &lt;code&gt;;&lt;/code&gt; on parse error where applicable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87659"&gt;fix invalid suggestions for non-ASCII characters in byte constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87673"&gt;tweak opaque type mismatch error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87546"&gt;bail on any found recursion when expanding opaque types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/polonius/pull/156"&gt;polonius: compute subset errors everywhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87483"&gt;MIR borrowck does not generate lifetime variables for &lt;code&gt;'static&lt;/code&gt; lifetimes during opaque type resolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87559"&gt;tweak borrowing suggestion in &lt;code&gt;for&lt;/code&gt; loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85874"&gt;remove unsound &lt;code&gt;TrustedRandomAccess&lt;/code&gt; implementations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86031"&gt;BTree: lazily locate leaves in rangeless iterators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86593"&gt;partially stabilize &lt;code&gt;const_slice_first_last&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81050"&gt;stabilize &lt;code&gt;core::task::ready!&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85769"&gt;stabilize &lt;code&gt;const_fn_transmute&lt;/code&gt;, &lt;code&gt;const_fn_union&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87431"&gt;implement &lt;code&gt;fold()&lt;/code&gt; on &lt;code&gt;array::IntoIter&lt;/code&gt; to improve &lt;code&gt;flatten().collect()&lt;/code&gt; perf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87052"&gt;optimize &lt;code&gt;fmt::PadAdapter::wrap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/81363"&gt;remove &lt;code&gt;P: Unpin&lt;/code&gt; bound on &lt;code&gt;impl Future for Pin&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2412"&gt;futures: use &lt;code&gt;futuresordered&lt;/code&gt; in &lt;code&gt;join_all&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7522"&gt;clippy: cover &lt;code&gt;Result&lt;/code&gt; on &lt;code&gt;map_flatten&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7520"&gt;clippy: fix &lt;code&gt;while_let_on_iterator&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;Quiet week for performance, with no large changes. Regressions are limited to just a few benchmarks.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@simulacrum&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=998cfe5aad7c21eb19a4bca50f05a13354706970&amp;amp;end=3354a44d2fa8d5ba6b8d6b40d2596de2c8292ec1&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;998cfe5..3354a44&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 Regressions, 0 Improvements, 0 Mixed; 1 of them in rollups&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-08-03.md"&gt;Full report here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;Approved RFCs&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3143"&gt;Stabilize Cargo's weak-dep-features and namespaced-features.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2509"&gt;RFC: Introduce concat_bytes!() to join [u8] and byte str analogous to concat! for str&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/86879"&gt;Stabilize &lt;code&gt;Vec&amp;lt;T&amp;gt;::shrink_to&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/86744"&gt;impl Default, Copy, Clone for std::io::Sink and Empty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/86336"&gt;impl Pattern for char array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/83791"&gt;Weaken guarantee around advancing underlying iterators in zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-rfcs"&gt;New RFCs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3156"&gt;RFC: Backtrace in core&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="upcoming-events"&gt;Upcoming Events&lt;/h2&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://berline.rs/"&gt;August 5, 2021, Berlin, DE - Rust Hack and Learn - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gskksrycclbnb/"&gt;August 9, 2021, Seattle, WA, US - Monthly meetup - Seattle Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Dublin/events/279788945"&gt;August 10, 2021, Dublin, IE - Rust Dublin August Remote Meetup - Rust Dublin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Boulder-Denver/events/278909353/"&gt;August 18, 2021, Denver, CO, US - Level up our Rust skills by building an ECS by Brooks Patton - Rust Denver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/zkqvjsycclbxb/"&gt;August 18, 2021, Vancouver, BC, CA - Solving LeetCode Problems with Rust - Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-manchester/events/279730616/"&gt;August 19, 2021, Manchester, UK - Rust Manchester - Speeding Up the Snake: Extending Python with Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/lhpkmsycclbpb/"&gt;August 11, 2021, Atlanta, GA, US - Grab a beer with fellow Rustaceans - Rust Atlanta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Parity Technologies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/"&gt;Multiple Rust engineering positions available&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Travala&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arbeitnow.com/view/senior-blockchain-engineer-travala-359033"&gt;Senior Blockchain Engineer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ChainSafe&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.smartrecruiters.com/ChainSafeSystemsInc/743999739358248-rust-developer"&gt;Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/junior-backend-engineer/en"&gt;Junior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/senior-backend-engineer/en"&gt;Senior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4c864c8f-bde6-443d-b521-dd90df0e9105"&gt;Senior Backend Engineer - Rust - Core Backend (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/2863623f-13c9-4f50-992d-7c25736a60f9"&gt;Senior Banking Engineer - Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Subspace Labs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/subspacelabs"&gt;Several Rust positions available&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;p&gt;Sadly, this week saw no quote of the week nominations.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/oy7hvm/this_week_in_rust_402/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 04 Aug 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-08-04:blog/2021/08/04/this-week-in-rust-402/</guid></item><item><title>This Week in Rust 401</title><link>https://this-week-in-rust.org/blog/2021/07/28/this-week-in-rust-401/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="what-does-this-week-in-rust-mean-to-you"&gt;What does This Week in Rust mean to you?&lt;/h2&gt;
&lt;p&gt;This Week in Rust will be the focus of &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;'s RustConf keynote in September. She would love if you would help inform the talk by sharing what This Week in Rust means to you &lt;a href="https://www.reddit.com/r/rust/comments/oqifdk/what_does_this_week_in_rust_mean_to_you/"&gt;on this Reddit post&lt;/a&gt; or &lt;a href="https://users.rust-lang.org/t/what-does-this-week-in-rust-mean-to-you/62698"&gt;in the Discourse forums&lt;/a&gt;. Thank you!&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/07/26/1.54.0-prerelease.html"&gt;1.54.0 pre-release testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/07/26/changelog-87.html"&gt;rust-analyzer Changelog #87&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blaz.is/blog/post/cglue-012-and-the-road-ahead/"&gt;CGlue Today And The Road Ahead&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/black-hat-rust-july-update/"&gt;Black Hat Rust: July Update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tinyverse.substack.com/p/updates-from-the-tinyverse-july-2021"&gt;Updates from the Tinyverse - July 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gloo-rs.web.app/blog/release-0.3.0"&gt;Gloo v0.3.0 release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tensorbase.io/thisweek/2021-07-28-tw_13/"&gt;This Week In TensorBase 13&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://avi.im/blag/2021/fast-sqlite-inserts/"&gt;Towards Inserting One Billion Rows in SQLite Under A Minute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/blog/58/async-and-asleep-designing-our-future-embedded-applications"&gt;Async and asleep: designing our future embedded applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/rust-development-workflow/"&gt;My Rust development workflow (after 2+ years full-time)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.crowdstrike.com/blog/dealing-with-out-of-memory-conditions-in-rust/"&gt;Dealing with Out-of-memory Conditions in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwn.net/Articles/862018/"&gt;Rust for Linux redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ceronman.com/2021/07/22/my-experience-crafting-an-interpreter-with-rust/"&gt;My experience crafting an interpreter with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/mapoulos/rust-first-thoughts-7l0"&gt;Rust: First Thoughts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kodewerx.org/2021/07/mutable-statics-have-scary-superpowers.html"&gt;Mutable statics have scary superpowers! Do not use them&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tim.mcnamara.nz/post/657832047640985600/nine-advantages-of-programming-in-rust"&gt;9 advantages of programming in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://soundcloud.com/arewepodcastyet/awpy-07-georg-semmler-on-diesel"&gt;AreWePodcastYet - 07 Georg Semmler on Diesel!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lazy.codes/posts/awesome-unstable-rust-features/"&gt;Awesome Unstable Rust Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/how-i-built-a-cross-platform-desktop-application-with-svelte-redis-and-rust/"&gt;How I Built a Cross-Platform Desktop Application with Svelte, Redis, and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/articles/understanding-rust-futures-by-going-way-too-deep"&gt;Understanding Rust futures by going way too deep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://owengage.com/writing/#understanding-serde-macro-expansion"&gt;Understanding Rust's 'serde' using macro expansion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iximiuz.com/en/posts/rust-writing-parsers-with-nom/"&gt;Rust - Writing Parsers With nom Parser Combinator Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ender_minyard/rust-visualized-the-stack-the-heap-and-pointers-a5c"&gt;✨🥞 Rust Visualized: The Stack, the Heap, and Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rogertorres/first-steps-with-rust-declarative-macros-1f8m"&gt;First steps with Rust declarative macros!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.frankel.ch/start-rust/8/"&gt;diceroller, a sample Rust project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/ditching-try-catch-and-null-checks-in-rust/"&gt;Ditching &lt;code&gt;try..catch&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; checks with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/felixfaisal/implementing-merge-sort-in-rust-4ko8"&gt;Implementing Merge Sort in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/mdoerner/emulating-abstract-base-classes-in-rust-3ai6"&gt;Emulating abstract base classes in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/cthutu/rust-6-exploring-crates-3p6i"&gt;Rust #6: Exploring crates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thenewstack.io/rust-and-webassembly-serverless-functions-in-vercel/"&gt;Rust and WebAssembly Serverless Functions in Vercel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/raw-pointers-in-unsafe-rust-are-quite-powerful/"&gt;Raw Pointers in Unsafe Rust are quite powerful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/comsystoreply/28-days-of-rust-part-1-ownership-and-the-borrow-checker-977a17e5b733"&gt;28 Days of Rust -- Part 1: Ownership and the Borrow Checker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://edgarluque.com/blog/rust-dbg-macro"&gt;The Rust dbg! macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/mgGPD6IVUbI"&gt;Building a Web Application with Rust - Part X - VanillaJS FrontEnd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/4nEUX2hf2ZI"&gt;Rust Bevy Tutorial - Enemy Formation &amp;amp; Attack (part 3/3)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=PmtwtK6jyLc"&gt;How to create an AWS Lambda in rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="research"&gt;Research&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2107.11912"&gt;Performance vs Programming Effort between Rust and C on Multicore Architectures: Case Study in N-Body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://renato.athaydes.com/posts/revisiting-prechelt-paper-comparing-languages.html"&gt;Revisiting Prechelt's paper and follow-ups comparing Java, Lisp, C/C++ and scripting languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ssi.gouv.fr/en/guide/programming-rules-to-develop-secure-applications-with-rust/"&gt;Programming Rules to Develop Secure Applications with Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/or9r1h/this_finally_happened_rust_made_more_sense/"&gt;This finally happened: rust made more sense&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/os94ur/edward_snowden_endorses_rust_for_more_secure/"&gt;Edward Snowden endorses Rust for more secure computing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/opkcuh/i_bet_i_can_do_that_in_rust_generic_types_are/"&gt;I bet I can do that in rust!!. Generic types are more powerful than most of us thought&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/loadstone"&gt;loadstone&lt;/a&gt;, a bare-metal bootloader for embedded systems.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/940"&gt;Andres O. Vela&lt;/a&gt; for the suggestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/oqifdk/what_does_this_week_in_rust_mean_to_you/"&gt;What does This Week in Rust mean to you?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-embedded/cross/issues/574"&gt;rust-embedded/cross - Call for help: more maintainers wanted&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ChainSafe/forest/labels/help%20wanted"&gt;ChainSafe/forest has several help wanted issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getsynth/synth/issues/67"&gt;getsynth/synth - Support postgres json and jsonb types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/getsynth/synth/issues/31"&gt;getsynth/synth - Feature: Doc template generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/issues/1623"&gt;ockam-network/ockam - Rust - UDP Transport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/issues/1624"&gt;ockam-networking/ockam - File Transfer over end-to-end encrypted secure channels&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h2&gt;
&lt;p&gt;287 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-07-19..2021-07-26"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87273"&gt;recognize bounds on impls as const bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87296"&gt;warn on inert attributes used on bang macro invocation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87244"&gt;better diagnostics with mismatched types due to implicit static lifetime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86429"&gt;improve &lt;code&gt;SortedMap::get_by_key_enumerated&lt;/code&gt; more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86410"&gt;&lt;code&gt;VecMap::get_value_matching&lt;/code&gt; should return just one element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87268"&gt;don't create references to uninitialized data in &lt;code&gt;List::from_arena&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1853"&gt;miri: better errors for negative out-of-bounds offsets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87224"&gt;miri: better ptr-out-of-bounds errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85646"&gt;MIR opt: separate constant predecessors of a switch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87175"&gt;stabilize &lt;code&gt;into_parts()&lt;/code&gt; and &lt;code&gt;into_error()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84111"&gt;stabilize &lt;code&gt;impl From&amp;lt;[(K, V); N]&amp;gt; for HashMap&lt;/code&gt; (and friends)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87171"&gt;remove &lt;code&gt;Option&lt;/code&gt; from &lt;code&gt;BufWriter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87168"&gt;implement &lt;code&gt;TrustedLen&lt;/code&gt; for &lt;code&gt;Flatten&lt;/code&gt;/&lt;code&gt;FlatMap&lt;/code&gt; if the &lt;code&gt;U: IntoIterator == [T; N]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86847"&gt;add &lt;code&gt;Stdin::lines&lt;/code&gt;, &lt;code&gt;Stdin::split&lt;/code&gt; forwarder methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86595"&gt;add support for custom allocator in &lt;code&gt;VecDeque&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/282"&gt;hashbrown: make rehashing and resizing less generic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/283"&gt;hashbrown: inline small functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7470"&gt;clippy: add check if ty &lt;code&gt;has_escaping_bound_vars&lt;/code&gt; in &lt;code&gt;zero_sized_map_values&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7495"&gt;clippy: improve conflicting rlibs error again&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;A very quiet week with only improvements. There was one possible regression, but it was removed from consideration due to only barely impacting a somewhat noisy stress-test benchmark. Untriaged pull requests continue to pile up, but there is still not a good process for dealing with them. &lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=5c0ca08c662399c1c864310d1a20867d3ab68027&amp;amp;end=998cfe5aad7c21eb19a4bca50f05a13354706970&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;5c0ca08..998cfe5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;0 Regressions, 3 Improvements, 0 Mixed; 0 of them in rollups&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-07-27.md"&gt;Full report here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;Approved RFCs&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3107"&gt;&lt;code&gt;#[derive(Default)]&lt;/code&gt; on enums with a &lt;code&gt;#[default]&lt;/code&gt; attribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2509"&gt;RFC: Introduce concat_bytes!() to join [u8] and byte str analogous to concat! for str&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3143"&gt;Stabilize Cargo's weak-dep-features and namespaced-features.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/86744"&gt;impl Default, Copy, Clone for std::io::Sink and Empty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/86699"&gt;Allow reifying intrinsics to fn pointers.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/86492"&gt;Associated functions that contain extern indicator or have #[rustc_std_internal_symbol] are reachable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/86336"&gt;impl Pattern for char array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/86335"&gt;Commit to not supporting IPv4-in-IPv6 addresses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/85835"&gt;Implement &lt;code&gt;Extend&amp;lt;(A, B)&amp;gt;&lt;/code&gt; for &lt;code&gt;(Extend&amp;lt;A&amp;gt;, Extend&amp;lt;B&amp;gt;)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-rfcs"&gt;New RFCs&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="upcoming-events"&gt;Upcoming Events&lt;/h2&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/jxfdjsycclbfb/"&gt;August 3, 2021, Buffalo, NY, US - Buffalo Rust User Group, First Tuesdays - Buffalo Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gskksrycclbnb/"&gt;August 9, 2021, Seattle, WA, US - Monthly meetup - Seattle Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/lhpkmsycclbpb/"&gt;August 11, 2021, Atlanta, GA, US - Grab a beer with fellow Rustaceans - Rust Atlanta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;The Tor Project&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.torproject.org/about/jobs/rust-dev/"&gt;Software Developer, Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Stockly&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.welcometothejungle.com/fr/companies/stockly-1/jobs/back-end-developer-rust-grpc-postgresql_paris"&gt;Back-end developer - TechOps team (Rust, GRPC, PostgreSQL) (Paris, FR)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Rhebo GmbH&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://germantechjobs.de/en/jobs/Rhebo-GmbH-Softwareentwickler-Rust---Schwerpunkt-Netzwerk-wmd"&gt;Rust Software Engineer - Focus Networks (DE)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ChainSafe&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.smartrecruiters.com/ChainSafeSystemsInc/743999739358248-rust-developer"&gt;Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/2863623f-13c9-4f50-992d-7c25736a60f9"&gt;Senior Banking Engineer - Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4c864c8f-bde6-443d-b521-dd90df0e9105"&gt;Senior Backend Engineer - Rust - Core Backend (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Lumeo&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.lumeo.com/careers/senior-backend-engineer-rust"&gt;Senior Backend Engineer (Rust) (Remote EU)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lumeo.com/careers/senior-systems-engineer-rust"&gt;Senior Systems Engineer (Rust) (Remote EU)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tweede golf&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/vacatures/2/lead-developer-embedded-rust"&gt;Lead Developer Embedded Rust (Nijmegen, NL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/vacatures/11/medior-embedded-engineer"&gt;Embedded software engineer (Nijmegen, NL)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/junior-backend-engineer/en"&gt;Junior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/senior-backend-engineer/en"&gt;Senior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/devops-engineer/en"&gt;DevOps Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;We were able to verify the safety of Rust's type system and thus show how Rust automatically and reliably prevents entire classes of programming errors&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://www.eurekalert.org/pub_releases/2021-07/su-cs071521.php"&gt;Ralf Jung on Eureka Alert Science News&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1084"&gt;Henrik Tougaard&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/otnvu8/this_week_in_rust_401/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 28 Jul 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-07-28:blog/2021/07/28/this-week-in-rust-401/</guid></item></channel></rss>