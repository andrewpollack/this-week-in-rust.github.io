<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>This Week in Rust</title><link>https://this-week-in-rust.org/</link><description></description><atom:link href="https://this-week-in-rust.org/rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 22 Sep 2021 00:00:00 -0400</lastBuildDate><item><title>This Week in Rust 409</title><link>https://this-week-in-rust.org/blog/2021/09/22/this-week-in-rust-409/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;h3 id="rustconf-2021"&gt;RustConf 2021&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/ylOpCXI2EMM"&gt;Project Update: Lang Team by Niko Matsakis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/DnYQKWs_7EA"&gt;Project Update: Libs Team by Mara Bos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/UrDhMWISR3w"&gt;Move Constructors: Is it Possible? by Miguel Young de la Sota&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/CV5CjUlcqsw"&gt;The Importance of Not Over-Optimizing in Rust by Lily Mara&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/BLy_YF4nmqQ"&gt;Identifying Pokemon Cards by Hugo Peixoto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/qUu1vJNg8yo"&gt;Fuzz Driven Development by Midas Lambrichts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/D1NAREuicNs"&gt;Writing the Fastest GDBT Library in Rust by Isabella Tromba&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/m-Qg3OoPIdc"&gt;Whoops! I Rewrote it in Rust by Brian Martin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/b0I4vP2CP88"&gt;How I Used Rust to Become Extremely Offline by Luke Westby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/8d7DqeYXq7A"&gt;Supercharging Your Rust Code With Five Little-Known Attributes by Jackson Lewis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/4_Jg-rLDy-Y"&gt;Compile-Time Social Coordination by Zac Burns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/9H9SO2u6Q20"&gt;Hacking rustc: Contributing to the Compiler by Esteban Kuber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/OZPXhmy-wVw"&gt;This Week in Rust: 400 Issues and Counting! by This Week in Rust's very own Lead Editor Nell Shamrell-Harrington!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/09/20/changelog-95.html"&gt;rust-analyzer Changelog #95&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rome.tools/blog/2021/09/21/rome-will-be-rewritten-in-rust"&gt;Rome will be rewritten in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sixtyfps.io/thisweek/2021-09-20.html"&gt;SixtyFPS (GUI crate) weekly report 19th of September&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sea-ql.org/SeaORM/blog/2021-09-20-introducing-sea-orm"&gt;Introducing SeaORM: An async &amp;amp; dynamic ORM for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gfx-rs.github.io/2021/09/16/deno-webgpu.html"&gt;wgpu alliance with Deno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Mesa-Rust-2021-Experiment"&gt;Experimenting Is Underway For Rust Code Within Mesa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/pqiiw1/goscript_is_now_language_feature_complete/"&gt;Goscript is now language feature complete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://security.googleblog.com/2021/09/an-update-on-memory-safety-in-chrome.html?m=1"&gt;An update on Memory Safety in Chrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datafuselabs.github.io/weekly/2021-09-22-databend-weekly/"&gt;This week in Databend #8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/how-to-use-vectors-in-rust/"&gt;How to use Vectors in Rust?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/message-passing-in-rust-threads-is-very-helpful/"&gt;Message Passing in Rust Threads is very helpful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gregstoll.wordpress.com/2021/09/18/new-project-wheel-of-fortune-solver-and-rust-is-still-faster-than-python/"&gt;New project: Wheel of Fortune solver! (and Rust is still faster than Python)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smallcultfollowing.com/babysteps/blog/2021/09/08/rustacean-principles/"&gt;Rustacean Principles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smallcultfollowing.com/babysteps//blog/2021/09/16/rustacean-principles-continued/"&gt;Rustacean Principles, Continued&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.justinm.one/blog/2021/09/11/fullstackrust/"&gt;Full Stack Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://epage.github.io/blog/2021/09/learning-rust/"&gt;Learnability of Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://research.activision.com/publications/2021/09/the-rust-programming-language-for-game-tooling"&gt;The Rust Programming Language for Game Tooling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nickb.dev/blog/reality-check-for-cloudflare-wasm-workers-and-rust"&gt;Reality Check for Cloudflare Wasm Workers and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gergo.erdi.hu/blog/2021-09-18-rust_on_the_mos_6502__beyond_fibonacci/"&gt;Rust on the MOS 6502: Beyond Fibonacci&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.marksblogg.com/rocket-rust-web-framework.html"&gt;Rocket: A Web Framework for Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kraken.com/post/7964/oxidizing-kraken-improving-kraken-infrastructure-using-rust/"&gt;Oxidizing Kraken: Improving Kraken Infrastructure Using Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://diziet.dreamwidth.org/9894.html"&gt;Tricky compatibility issue - recent changes to &lt;code&gt;std::io::ErrorKind&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://youtu.be/SsZUicpnpVE"&gt;Flutter/Rust Roundtable - Flying High with Flutter #24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/036-luca-palmieri/"&gt;Rustacean Station: From Zero to Production with Luca Palmieri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://soundcloud.com/arewepodcastyet/awpy-08-jon-ferdinand-ronge-gjengset"&gt;AreWePodcastYet 08 with Jon Ferdinand Ronge Gjenset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/037-daniel-mckenna/"&gt;Rustacean Station: Rust Code Coverage with Daniel McKenna&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/FiEbgZlBXhk"&gt;rust4ml @ Rust DC w/ Vlad Orlov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/Gv-nG6F_09I"&gt;In-kernel, fast-path packet processing with AF_XDP @ Rust DC w/ Collins Huff&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/tree/develop/documentation/use-cases/end-to-end-encrypt-all-application-layer-communication"&gt;How to end-to-end encrypt all application layer communication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/rust-on-esp32"&gt;Rust on ESP32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/compile-rust-for-esp32-xtensa-on-raspberry-pi-aarch64/"&gt;How to compile Rust and LLVM for ESP32 on a Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://oknozor.github.io/blog/optimize-rust-binary-size/"&gt;Optimize Rust binaries size with cargo and Semver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fpcomplete.com/blog/axum-hyper-tonic-tower-part2"&gt;Combining Axum, Hyper, Tonic, and Tower for hybrid web/gRPC apps: Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fpcomplete.com/blog/axum-hyper-tonic-tower-part3"&gt;Combining Axum, Hyper, Tonic, and Tower for hybrid web/gRPC apps: Part 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fpcomplete.com/blog/axum-hyper-tonic-tower-part4/"&gt;Combining Axum, Hyper, Tonic, and Tower for hybrid web/gRPC apps: Part 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hoj-senna.github.io/HShhss/texts/001arduino1.html"&gt;First steps with an Arduino board and Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.logrocket.com/full-stack-rust-a-complete-tutorial-with-examples/"&gt;Full-stack Rust: A complete tutorial with examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/senyeezus/designing-state-machines-in-rust-252k"&gt;Designing state machines in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/antoniovdlc/optimising-a-javascript-library-with-webassembly-a-failed-attempt-48le"&gt;Optimizing a JavaScript library with WebAssembly, a failed attempt!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[series] &lt;a href="https://dev.to/mileswatson/series/14520"&gt;URL Shortener with Rust, Svelte, &amp;amp; AWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[CN] &lt;a href="https://dev.to/daniel1in/string-in-rust-34d7"&gt;String in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=7odJDwhjCXQ&amp;amp;list=PLEIv4NBmh-GsWGE9mY3sF9c5lgh5Z_jLr&amp;amp;ab_channel=BedroomBuilds"&gt;From Python to Rust - all episodes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/UVUjnzpQKUo"&gt;1 Problem, 16 Programming Languages (C++ vs Rust vs Haskell vs Python vs APL...)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/0HlrqwLjCxA"&gt;Explaing Rust Analyzer 15: Error Resilient Parsing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=J_yGWdgeGQM"&gt;Getting started with Rust 🦀 2021: 6. Library API design overhaul, async and more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] [series] &lt;a href="https://youtube.com/playlist?list=PL7r-PXl6ZPcD63DS2djSiz4SlXkaTfobc"&gt;Rust for Java Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neverworkintheory.org/2021/09/20/do-developers-read-compiler-error-messages.html"&gt;Do Developers Read Compiler Error Messages?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/pqs2dh/alpine_system_change_proposal_rust_in_main/"&gt;Alpine: System change proposal: Rust in main&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Rust-Adds-Motorola-M68k"&gt;Rust Adds Support For The Motorola M68000 Processors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://saveriomiroddi.github.io/Rust-lulz-godbolt-assembly-exploring-without-crate-limitations-in-visual-studio-code"&gt;Godbolt assembly exploring without crate limitations, in Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/pm4xe9/what_libraries_do_you_miss_from_other_languages/"&gt;What libraries do you miss from other languages?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/pp0nfa/rust_for_rustaceans_is_off_to_the_printer/"&gt;Rust for Rustaceans is off to the printer!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/ppf83d/gcc_codegen_now_under_rustlang_organization/"&gt;GCC codegen now under rust-lang organization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/ppya5y/rust_in_qemu_host_support_matrix/"&gt;Rust in Qemu, host support matrix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/document/u/1/d/e/2PACX-1vSt2VB1zQAJ6JDMaIA9PlmEgBxz2K5Tx6w2JqJNeYCy0gU4aoubdTxlENSKNSrQ2TXqPWcuwtXe6PlO/pub"&gt;Chrome - Borrowing Trouble: The Difficulty Of A C++ Borrow Checker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[picture] &lt;a href="https://www.reddit.com/r/rust/comments/pskqhk/media_my_rust_project_was_featured_in_one_of/"&gt;My Rust project was featured in one of Europe's biggest computer magazines (heise c't)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.reddit.com/r/rust/comments/pl7n8a/media_wrote_a_neat_little_maze_solver_largest/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3"&gt;Wrote a neat little maze solver. Largest solved so far is 125k x 125k. Here's a smaller 512x512&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/willcrichton/flowistry"&gt;flowistry&lt;/a&gt;, a VS code extension to visualize data flow in Rust code.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/963"&gt;Willi Kappler&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/issues/1804"&gt;ockam-network/ockam - Ockam TCP Transport using smoltcp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/issues/1624"&gt;ockam-network/ockam - File Transfer over end-to-end encrypted secure channels&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h2&gt;
&lt;p&gt;256 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-09-13..2021-09-20"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88529"&gt;ARMv6K Nintendo 3DS Tier 3 target added&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88321"&gt;add initial support for m68k&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88994"&gt;disable the evaluation cache when in intercrate mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87867"&gt;use a separate interner type for &lt;code&gt;UniqueTypeId&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88690"&gt;accept &lt;code&gt;m!{ .. }.method()&lt;/code&gt; and &lt;code&gt;m!{ .. }?&lt;/code&gt; statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88729"&gt;recover from &lt;code&gt;Foo(a: 1, b: 2)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86422"&gt;emit clearer diagnostics for parens around for loop heads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86382"&gt;make diagnostics clearer for &lt;code&gt;?&lt;/code&gt; operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88911"&gt;improve error message for type mismatch in generator arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88894"&gt;improve error message for missing trait in trait impl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/89021"&gt;add a separate error for &lt;code&gt;dyn Trait&lt;/code&gt; in &lt;code&gt;const fn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87960"&gt;suggest replacing an inexisting field for an unmentioned field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/89055"&gt;suggest better place to add call parentheses for method expressions wrapped in parentheses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88841"&gt;suggest removing bad parens in &lt;code&gt;(recv.method)()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/89012"&gt;suggest removing &lt;code&gt;#![feature]&lt;/code&gt; for library features that have been stabilized&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88735"&gt;don't lint about missing code examples in derived traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88719"&gt;point at argument instead of call for their obligations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/89000"&gt;reuse existing shared &lt;code&gt;Lrc&lt;/code&gt; for &lt;code&gt;MatchImpl&lt;/code&gt; parent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88965"&gt;fast reject for &lt;code&gt;NeedsNonConstDrop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/82183"&gt;simplify lazy &lt;code&gt;DefPathHash&lt;/code&gt; decoding by using an on-disk hash table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88988"&gt;avoid codegen for &lt;code&gt;Result::into_ok&lt;/code&gt; in &lt;code&gt;lang_start&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/89069"&gt;use &lt;code&gt;&amp;lt;[T; N]&amp;gt;::map&lt;/code&gt; in &lt;code&gt;Sharded&lt;/code&gt; instead of &lt;code&gt;SmallVec&lt;/code&gt; and unsafe code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88832"&gt;introduce a fast path that avoids the &lt;code&gt;debug_tuple&lt;/code&gt; abstraction when deriving &lt;code&gt;Debug&lt;/code&gt; for unit-like enum variants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88722"&gt;make &lt;code&gt;UnsafeCell::get_mut&lt;/code&gt; const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88558"&gt;&lt;code&gt;const&lt;/code&gt; &lt;code&gt;drop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/89031"&gt;don't inline &lt;code&gt;OnceCell&lt;/code&gt; initialization closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88954"&gt;allow &lt;code&gt;panic!("{}", computed_str)&lt;/code&gt; in &lt;code&gt;const fn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/89017"&gt;fix potential race in &lt;code&gt;AtomicU64&lt;/code&gt; time monotonizer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2499"&gt;futures: fix Unusable &lt;code&gt;Sink&lt;/code&gt; implementation on &lt;code&gt;Scan&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7690"&gt;clippy: change &lt;code&gt;while_let_on_iterator&lt;/code&gt; suggestion to use &lt;code&gt;by_ref()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7640"&gt;clippy: improve accuracy of &lt;code&gt;mut_key&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7653"&gt;clippy: new lint: &lt;code&gt;same_name_method&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;A nice week: more improvements than regressions.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@pnkfelix&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=9f85cd6f2ab2769c16e89dcdddb3e11d9736b351&amp;amp;end=7743c9fadd64886d537966ba224b9c20e6014a59&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;9f85cd6f2..7743c9f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 Regressions, 4 Improvements, 8 Mixed; ??? of them in rollups&lt;/p&gt;
&lt;p&gt;44 comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-09-21.md"&gt;Full report here&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;Approved RFCs&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2845"&gt;RFC: Supertrait item shadowing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/89006"&gt;Stabilize RFC 2345: Allow panicking in constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/88090"&gt;Perform type inference in range pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/pull/88028"&gt;Disable unused_must_use for statically known bools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/87228"&gt;Decide whether asm! and/or global_asm! should be exported from the prelude.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/87220"&gt;Make #[derive(A, B, ...)] cfg-eval its input only for A, B, ... and stabilize feature(macro_attributes_in_derive_output)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84267"&gt;Make &lt;code&gt;*const (), *mut ()&lt;/code&gt; okay for FFI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-rfcs"&gt;New RFCs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3177"&gt;[Help wanted] First draft of patchfile RFC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3176"&gt;Multiple artifact deps on the same crate with different names, for different targets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="upcoming-events"&gt;Upcoming Events&lt;/h2&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/jqxqwryccmblc/"&gt;September 28, 2021, Dallas, TX, US - Last Tuesday - Dallas Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gfx-rs/meetup"&gt;October 2, 2021 - Rust Graphics meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/280628523/"&gt;October 5, 2021, Buffalo, NY, US - Buffalo Rust User Group, First Tuesdays - Buffalo Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/lhpkmsyccnbrb/"&gt;October 13, 2021, Atlanta, GA, US - Grab a beer with fellow Rustaceans - Rust Atlanta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://berline.rs/"&gt;September 22, 2021, Berlin, DE - Rust and Tell - an onsite event - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/junior-backend-engineer/en"&gt;Junior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Subspace Labs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/subspacelabs/9d8f9b6d-4141-4782-923a-2872a06c723e"&gt;EVM Execution Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Oxford Ionics&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.oxionics.com/software-engineer-embedded"&gt;Software Engineer: Embedded (Begbroke, UK)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.oxionics.com/software-engineer-compiler"&gt;Software Engineer: Compiler (Begbroke, UK)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ChainSafe&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.smartrecruiters.com/ChainSafeSystemsInc/743999769790643-protocol-engineer-forest-rust-"&gt;Protocol Engineer - Forest (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.smartrecruiters.com/ChainSafeSystemsInc/743999769885107-rust-engineer-substrate-"&gt;Rust Engineer - Substrate (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;the strains of the project have hurt a lot of people over the years and I think maybe the only path to recovery involves getting some distance from it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://twitter.com/graydon_pub/status/1437521319722029056"&gt;Graydon Hoare on twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1107"&gt;mmmmib&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/k5nsab/this_week_in_rust_367/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 22 Sep 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-09-22:blog/2021/09/22/this-week-in-rust-409/</guid></item><item><title>This Week in Rust 408</title><link>https://this-week-in-rust.org/blog/2021/09/15/this-week-in-rust-408/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2021/09/09/Rust-1.55.0.html"&gt;Announcing Rust 1.55.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=pLdCcolQsxA"&gt;RustConf 2021 Video Stream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sycamore-rs.netlify.app/news/announcing-v0.6.0"&gt;Announcing Sycamore v0.6.0: Faster and faster with plenty of fixes and features…&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sixtyfps.io/thisweek/2021-09-13.html"&gt;SixtyFPS (GUI crate) weekly report 12th of September&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datafuselabs.github.io/weekly/2021-09-15-databend-weekly/"&gt;This week in Databend #7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leshow.github.io/post/dhcproto/"&gt;Introducing DHCProto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2021/09/13/changelog-155.html"&gt;IntelliJ Rust Changelog #155&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/09/13/changelog-94.html"&gt;Rust Analyzer Changelog #94&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://johanhelsing.studio/posts/introducing-matchbox"&gt;Introducing Matchbox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/building-cloudflare-images-in-rust-and-cloudflare-workers/"&gt;Building Cloudflare Images in Rust and Cloudflare Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenoh.io/blog/2021-07-13-zenoh-performance-async/"&gt;Zenoh performance: a stroll in Rust async wonderland&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustgamedev.com/episodes/interview-with-remco-and-basz"&gt;Rust Game Dev Podcast - Interview with Remco and Basz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/shellcode-in-rust/"&gt;How to Write and Compile Shellcode in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/rust-http-long-polling/"&gt;How to implement HTTP Long Polling in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tweedegolf.nl/blog/61/an-experimental-diesel-based-crud-for-rocket"&gt;An experimental Diesel-based CRUD for Rocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/uggla/rust-cli-example-2-ferris-hunts-errors-116b"&gt;Rust cli example #2: Ferris hunts errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.knoldus.com/test-cases-in-rust-are-simple-to-write/"&gt;Test Cases in Rust are simple to write&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vincepergolizzi.com/programming/2021/09/08/full-stack-sum-types-with-typescript-rust-and-postgres.html"&gt;Full-stack sum types with TypeScript, Rust and Postgres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rogertorres/rust-tokio-stack-overview-runtime-9fh"&gt;Tokio stack overview: Runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=iFdh4sPC5Tg"&gt;Rust for Java Developers - Introduction [Beginners]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=S1NSsHZs6hI"&gt;FLTK Rust: a new basics tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=VlSkZYBeK8Q"&gt;Rust for Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/workers-rust-sdk/"&gt;Native Rust support on Cloudflare Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://portanetwork.medium.com/launching-porta-ecosystem-grants-to-grow-its-network-7f82262d4260"&gt;Launching Porta Ecosystem Grants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yossarian.net/2021/09/14/LLVM-internals-part-3-from-bitcode-to-IR"&gt;LLVM internals, part 3: from bitcode to IR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/uazu/qcell"&gt;qcell&lt;/a&gt;, with a type that works like a compile-time &lt;code&gt;RefCell&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/952"&gt;Soni L.&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/getsynth/synth/issues/145"&gt;getsynth/synth - Allow unbounded numbers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://survey.opensuse.org/"&gt;OpenSUSE Rust Usage Survey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustfest.world/say-hello-rustfest-global-2021"&gt;RustFest CFP is open&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h2&gt;
&lt;p&gt;278 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-09-06..2021-09-13"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88733"&gt;fix ICE for functions with more than 65535 arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88336"&gt;detect stricter constraints on gats where clauses in impls vs trait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85200"&gt;ignore derived &lt;code&gt;Clone&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt; implementations during dead code analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88147"&gt;fix non-capturing closure return type coercion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88578"&gt;suggest items be borrowed in &lt;code&gt;for i in items[x..]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88757"&gt;suggest wrapping expr in parentheses on invalid unary negation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88209"&gt;improve error message when &lt;code&gt;_&lt;/code&gt; is used for in/inout &lt;code&gt;asm&lt;/code&gt; operands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87441"&gt;emit suggestion when passing byte literal to &lt;code&gt;format!&lt;/code&gt; macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87915"&gt;use smaller spans for some structured suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88214"&gt;use more correct span data in &lt;code&gt;for&lt;/code&gt; loop desugaring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88771"&gt;use &lt;code&gt;FxHashSet&lt;/code&gt; instead of &lt;code&gt;Vec&lt;/code&gt; for well formed tys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/83214"&gt;&lt;code&gt;mmap&lt;/code&gt; the incremental data instead of reading it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88448"&gt;&lt;code&gt;BTreeMap&lt;/code&gt;/&lt;code&gt;BTreeSet::from_iter&lt;/code&gt;: use bulk building to improve the performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86165"&gt;add &lt;code&gt;proc_macro::Span::&lt;/code&gt;{&lt;code&gt;before&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/293"&gt;hashbrown: &lt;code&gt;insert_unique_unchecked&lt;/code&gt; operation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7610"&gt;clippy: add new lint &lt;code&gt;iter_not_returning_iterator&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;Fairly busy week, with some large improvements on several benchmarks. Several
larger rollups landed, in part due to recovery from a temporary CI outage,
and continued CI trouble since then. This is likely the cause for the
somewhat unusual presence of rollups in our results.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@simulacrum&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=69c4aa2901ffadf69deaf91b2f90604bcbc2eb36&amp;amp;end=9f85cd6f2ab2769c16e89dcdddb3e11d9736b351&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;69c4aa290..9f85cd6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 Regressions, 2 Improvements, 4 Mixed; 2 of them in rollups&lt;/p&gt;
&lt;p&gt;31 comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-09-14.md"&gt;Full report here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;Approved RFCs&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3119"&gt;Rust-lang crate ownership policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3123"&gt;Scrape code examples from examples/ directory for Rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="final-comment-period"&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in the final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/pull/88028"&gt;Disable unused_must_use for statically known bools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/87220"&gt;Make #[derive(A, B, ...)] cfg-eval its input only for A, B, ... and stabilize feature(macro_attributes_in_derive_output)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/84267"&gt;Make &lt;code&gt;*const (), *mut ()&lt;/code&gt; okay for FFI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/68537"&gt;Tracking issue Iterator map_while&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-rfcs"&gt;New RFCs&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="upcoming-events"&gt;Upcoming Events&lt;/h2&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/zkqvjsyccmbtb/"&gt;September 15, 2021, Vancouver, BC, CA - Considering Rust - Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://berline.rs/"&gt;September 16, 2021, Berlin, DE - Rust Hack and Learn - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.tokyo/"&gt;September 18, 2021, Tokyo, JP - Rust.Tokyo 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/jqxqwryccmblc/"&gt;September 28, 2021, Dallas, TX, US - Last Tuesday - Dallas Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Gouach&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gouach.welcomekit.co/jobs/senior-c-software-engineer_bordeaux"&gt;Senior Embedded Rust Software Engineer (Bordeaux, FR)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Indeed&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.indeed.jobs/jobs/staff-backend-rust-engineer-27316/"&gt;Staff Backend Rust Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Enso&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/enso-org/hiring/blob/main/people/senior-rust-developer.md"&gt;Senior Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;SmartThings&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://smartthings.pinpointhq.com/jobs/22298?utm_medium=internal_referral&amp;amp;utm_source=pinpoint&amp;amp;utm_term=jkypj"&gt;Senior Software Engineer  (Minneapolis, MN, US)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DEMV Systems&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arbeitnow.com/view/php-rust-backend-entwickler-in-hamburg-oder-remote-mwd-demv-systems-gmbh-480199"&gt;PHP / Rust Backend Entwickler in (Hamburg, DE or Remote) (m/w/d) &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/junior-backend-engineer/en"&gt;Junior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Polar Sync&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://polarsync.breezy.hr/p/0c1d3630d39d"&gt;Principal/Senior Software Engineer - Rust/C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;SecureDNA&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.securedna.org/jobs"&gt;Software Development Manager, Rust &amp;amp; Python (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/53def500-b146-40da-89a8-98adfd7e84e4"&gt;Engineering Manager - Core Backend (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4019a818-4a7b-46ef-9225-c53c7a7f238c"&gt;Backend Engineer - Rust - Core Backend (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/fe1e07f4-6d7c-4f65-9a8f-27cf3b3fd2b1"&gt;Backend Engineer, Kraken Futures - Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/2863623f-13c9-4f50-992d-7c25736a60f9"&gt;Senior Banking Engineer - Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Parity Technologies&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/"&gt;Multiple Rust Engineering Positions Available (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Edition!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://www.youtube.com/watch?v=q0aNduqb2Ro"&gt;Niko and Daphne Matsakis on YouTube&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1102"&gt;mark-i-m&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/pp4s9j/this_week_in_rust_408/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 15 Sep 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-09-15:blog/2021/09/15/this-week-in-rust-408/</guid></item><item><title>This Week in Rust 407</title><link>https://this-week-in-rust.org/blog/2021/09/08/this-week-in-rust-407/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3 id="official"&gt;Official&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/09/06/Splitting-const-generics.html"&gt;Splitting the const generics features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Inside] &lt;a href="https://blog.rust-lang.org/inside-rust/2021/09/07/1.55.0-prerelease.html"&gt;1.55.0 pre-release testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gamedev.rs/news/025/"&gt;This Month in Rust GameDev #25 - August 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-osdev.com/this-month/2021-08/"&gt;This Month in Rust OSDev (August 2021)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/09/06/changelog-93.html"&gt;rust-analyzer Changelog #93&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/news/this-week-in-fluvio-0005/"&gt;This week in Fluvio #5: the programmable streaming platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.antoyo.xyz/rustc_codegen_gcc-progress-report-3"&gt;rustc_codegen_gcc: Progress Report #3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datafuselabs.github.io/weekly/2021-09-08-datafuse-weekly/"&gt;This week in Datafuse #6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aaronerhardt.github.io/blog/posts/announcing_relm4/"&gt;Announcing Relm4 v0.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sixtyfps.io/thisweek/2021-09-06.html"&gt;SixtyFPS (GUI crate) weekly report for 6th of September 2021&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/why-rust-for-offensive-security/"&gt;Why Rust for offensive security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/mlafeldt/status/1433414474589954048"&gt;Had a blast porting one of my serverless applications from Go to Rust - some things I learned&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.sunfishcode.online/broken-encapsulation/"&gt;Broken Encapsulation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.marksblogg.com/rdns-domain-name-tld-extract-rust.html"&gt;Faster Top Level Domain Name Extraction with Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.sunfishcode.online/rust-programs-entirely-in-rust/"&gt;Rust programs written entirely in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io/2021/09/04/fast-rust-builds.html"&gt;Fast Rust Builds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pliniker.github.io/post/dispatchers/"&gt;Virtual Machine Dispatch Experiments in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://project-oak.github.io/rust-verification-tools/2021/09/01/retrospective.html"&gt;Rust Verification Tools - Retrospective&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/rust-avoid-lifetimes/"&gt;How to avoid lifetime annotations in Rust (and write clean code)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neosmart.net/blog/2021/using-simd-acceleration-in-rust-to-create-the-worlds-fastest-tac/"&gt;Using SIMD acceleration in Rust to create the world's fastest &lt;code&gt;tac&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/rust-cryptography-ecosystem/"&gt;Overview of the Rust cryptography ecosystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smallcultfollowing.com/babysteps//blog/2021/09/08/rustacean-principles/"&gt;Rustacean Principles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pythonspeed.com/fil/docs/fil4prod/reliable.html"&gt;Writing software that's reliable enough for production&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nullderef.com/blog/plugin-start/"&gt;Plugins in Rust: Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thespblog.net/a-gophers-foray-into-rust/"&gt;A Gopher's Foray into Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://holmusk.dev/blog/2021-05-29-using-rust.html"&gt;Building a reliable and tRUSTworthy web service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://rustacean-station.org/episode/035-daniel-stenberg/"&gt;The Rustacean Station Podcast - Rust in cURL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.lanesawyer.dev/27848/the-why-and-how-of-rust-declarative-macros"&gt;The Why and How of Rust Declarative Macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/tree/develop/documentation/use-cases/secure-remote-access-tunnels#readme"&gt;Build a secure access tunnel to a service inside of a Remote Private Network, using Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lupyuen.github.io/articles/rhai"&gt;Rust on RISC-V BL602: Rhai Scripting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fuzzing.science/page/rudroid-worlds-worst-android-emulator/"&gt;Rudroid - Writing the World's worst Android Emulator in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexis-lozano.com/hexagonal-architecture-in-rust-3/"&gt;Hexagonal architecture in Rust #3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexis-lozano.com/hexagonal-architecture-in-rust-4/"&gt;Hexagonal architecture in Rust #4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spin.atomicobject.com/2021/08/30/memory-management-in-rust/"&gt;Explaining How Memory Management in Rust Works by Comparing with JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://depth-first.com/articles/2021/08/25/postgres-extensions-in-rust/"&gt;Postgres Extensions in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@glebpomykalov/lets-overtake-go-fasthttp-with-rust-hyper-b2d1004914f"&gt;Let's overtake go/fasthttp with rust/warp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/infinyon/how-we-built-our-python-client-that-s-mostly-rust-3p63"&gt;How we built our Python Client that's mostly Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eriknatanael.com/blog/combining-rust-and-cpp-code-in-your-bela-project"&gt;Combining Rust and C++ code in your Bela project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dpc.pw/data-oriented-cleanandhexagonal-architecture-software-in-rust-through-an-example"&gt;Data-oriented, clean&amp;amp;hexagonal architecture software in Rust - through an example project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rodrigoaraujo.me/posts/lets-build-an-lc-3-virtual-machine/"&gt;Let's build an LC-3 Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://owengage.com/writing/2021-08-30-how-to-think-of-unwrap/"&gt;How to think of unwrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://piware.de/post/2021-08-27-rust-and-c/"&gt;Learning Rust: Interfacing with C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kerkour.com/blog/rust-job-queue-with-postgresql/"&gt;How to build a job queue with Rust and PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[ID] &lt;a href="https://dev.to/zimerasystems/belajar-rust-02-instalasi-rust-pf"&gt;Belajar Rust - 02: Instalasi Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/ThjvMReOXYM"&gt;Crust of Rust: async/await&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://youtu.be/mupwF9jbVZ4"&gt;Concurrency in Rust - Sharing State&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=d9PxFlFFZuk"&gt;Setting up an Arduino Project using Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/pjtpkj/unity_files_patent_for_ecs_in_game_engines_that/"&gt;Unity files patent for ECS in game engines that would probably affect many Rust ECS crates, including Bevy's&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/issues/88623"&gt;Rust 2021 celebration and thanks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lupyuen.github.io/articles/rhai"&gt;Rust on RISC-V BL602: Rhai Scripting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://diziet.dreamwidth.org/9336.html"&gt;Wanted: Rust sync web framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[audio] &lt;a href="https://youtu.be/q0aNduqb2Ro"&gt;Rust 2021 Edition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;Sadly, we had no nominations this week. Still, in the spirit of not leaving you without some neat rust code, I give you &lt;a href="https://github.com/mazznoer/gradient-rs"&gt;gradient&lt;/a&gt;, a command line tool to extract gradients from SVG, display and manipulate them.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.chiark.greenend.org.uk/%7Eianmdlvl/rust-polyglot/"&gt;Rust for the Polyglot Programmer - a guide in need of review by and feedback from the Rust Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://t.co/gCj6NRNftT?amp=1"&gt;Survey - How People Use Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h2&gt;
&lt;p&gt;300 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-08-30..2021-09-06"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87688"&gt;introduce &lt;code&gt;let...else&lt;/code&gt;&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88369"&gt;update const generics feature gates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88418"&gt;allow &lt;code&gt;~const&lt;/code&gt; bounds on trait assoc functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/86376"&gt;emit specific warning to clarify that &lt;code&gt;#[no_mangle]&lt;/code&gt; should not be applied on foreign statics or functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88657"&gt;fix 2021 dyn suggestion that used code as label&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88503"&gt;warn when &lt;code&gt;[T; N].into_iter()&lt;/code&gt; is ambiguous in the new edition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88598"&gt;detect bare blocks with type ascription that were meant to be a struct literal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88501"&gt;use right span in prelude collision suggestions with macros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88631"&gt;improve structured tuple struct suggestion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88597"&gt;move global analyses from lowering to resolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88560"&gt;&lt;code&gt;fmt::Formatter::pad&lt;/code&gt;: don't call &lt;code&gt;chars().count()&lt;/code&gt; more than one time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85017"&gt;add &lt;code&gt;carrying_add&lt;/code&gt;, &lt;code&gt;borrowing_sub&lt;/code&gt;, &lt;code&gt;widening_mul&lt;/code&gt;, &lt;code&gt;carrying_mul&lt;/code&gt; methods to integers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88551"&gt;stabilize &lt;code&gt;UnsafeCell::raw_get&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88548"&gt;stabilize &lt;code&gt;Iterator::intersperse&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88177"&gt;stabilize &lt;code&gt;std::os::unix::fs::chroot&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/compiler-builtins/pull/405"&gt;compiler-builtins: optimize &lt;code&gt;memcpy&lt;/code&gt;, &lt;code&gt;memmove&lt;/code&gt; and &lt;code&gt;memset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2469"&gt;futures: add &lt;code&gt;TryStreamExt::try_forward&lt;/code&gt;, remove &lt;code&gt;TryStream&lt;/code&gt; bound from &lt;code&gt;StreamExt::forward&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2484"&gt;futures: correcting overly restrictive lifetimes in vectored IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9800"&gt;cargo: stabilize 2021 edition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9869"&gt;cargo: improve error message when unable to initialize git index repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7570"&gt;clippy: add the &lt;code&gt;derivable_impls&lt;/code&gt; lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88604"&gt;rustdoc: clean up handling of lifetime bounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88573"&gt;rustdoc: don't panic on ambiguous inherent associated types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88574"&gt;rustdoc: box &lt;code&gt;GenericArg::Const&lt;/code&gt; to reduce enum size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88490"&gt;rustdoc: display associated types of implementors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;A busy week, with lots of mixed changes, though in the end only a few were deemed significant enough to report here.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@pnkfelix&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=fe37929e4cba2c5c21e6805805769630c736bc3d&amp;amp;end=69c4aa2901ffadf69deaf91b2f90604bcbc2eb36&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;fe379..69c4a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3 Regressions, 1 Improvements, 3 Mixed; 0 of them in rollups
57 comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-09-07.md"&gt;Full report here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;Approved RFCs&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="final-comment-period"&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rfcs/pull/3163"&gt;Proposal: Else clauses for for and while loops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3123"&gt;Scrape code examples from examples/ directory for Rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3119"&gt;Rust-lang crate ownership policy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/88611"&gt;Deprecate array::IntoIter::new&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/88353"&gt;Partially stabilize array_methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/68537"&gt;Tracking issue Iterator map_while&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-rfcs"&gt;New RFCs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/3173"&gt;Add RFC float-next-up-down&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="upcoming-events"&gt;Upcoming Events&lt;/h2&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Boulder-Denver/events/279407152/"&gt;September 8, 2021, Denver, CO, US - Rust Q&amp;amp;A - Rust Denver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gskksryccmbsb/"&gt;September 14, 2021, Seattle, WA, US - Monthly Meetup - Seattle Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/zkqvjsyccmbtb/"&gt;September 15, 2021, Vancouver, BC, CA - Considering Rust - Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://berline.rs/"&gt;September 16, 2021, Berlin, DE - Rust Hack and Learn - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.tokyo/"&gt;September 18, 2021, Tokyo, JP - Rust.Tokyo 2021&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/lhpkmsyccmblb/"&gt;September 8, 2021, Atlanta, GA, US - Grab a beer with fellow Rustaceans - Rust Atlanta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/280470653/"&gt;September 9, 2021, Pleasant Grove, UT, US - Rusty Engine: A 2D game engine for learning Rust with Nathan Stocks (and Pizza)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Formlogic&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://formlogic.breezy.hr/p/4fbae29d9d21-software-engineer"&gt;Software Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;OCR Labs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://weworkremotely.com/listings/ocr-labs-senior-rust-developer"&gt;Senior Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ChainSafe&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.smartrecruiters.com/ChainSafeSystemsInc/743999739358248-rust-developer"&gt;Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Subspace&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/subspacelabs/7f6a654b-60a8-4740-aa19-36b9f7a9e624"&gt;Core Protocol Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;dcSpark&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://careers.dcspark.io/senior-rust-developer-47870/"&gt;Senior Rust Developer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arbeitnow.com/view/backend-engineer-kraken-futures-rust-remote-kraken-74155"&gt;Backend Engineer, Kraken Futures - Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/junior-backend-engineer/en"&gt;Junior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/senior-backend-engineer/en"&gt;Senior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;In Rust, soundness is never just a convention.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://users.rust-lang.org/t/rationale-behind-fn-fnmut-and-fnonce-design/64355/11"&gt;@H2CO3 on rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1097"&gt;Riccardo D'Ambrosio&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/pkoc2q/this_week_in_rust_407/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 08 Sep 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-09-08:blog/2021/09/08/this-week-in-rust-407/</guid></item><item><title>This Week in Rust 406</title><link>https://this-week-in-rust.org/blog/2021/09/01/this-week-in-rust-406/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a programming language empowering everyone to build reliable and efficient software.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/rust-lang/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/rust-lang/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h2&gt;
&lt;h3 id="newsletters"&gt;Newsletters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rustinblockchain.org/newsletters/rib-newsletter-27/"&gt;RiB Newsletter #27&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="projecttooling-updates"&gt;Project/Tooling Updates&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2021/08/30/changelog-92.html"&gt;Rust Analyzer Changelog #92&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2021/08/30/changelog-154.html"&gt;IntelliJ Rust Changelog #154&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thephilbert.io/2021/08/30/gcc-rust-monthly-report-9-august-2021/"&gt;GCC Rust Monthly Report #9 August 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rainway.com/blog/2021/08/30/bebop-rust/"&gt;Bebop v2.3.0: Adding Rust support to Bebop serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://diziet.dreamwidth.org/9019.html"&gt;partial-borrow: derive macro for multiple (maybe mut) references to subsets/views of a struct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zellij.dev/news/new-ui/"&gt;Zellij 0.16.0 released: new UI, many bugfixes and more!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/knurling-changelog-30/"&gt;Knurling-rs changelog #30&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sixtyfps.io/thisweek/2021-08-30.html"&gt;SixtyFPS (GUI crate) weekly update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fluvio.io/news/this-week-in-fluvio-0004/"&gt;This week in Fluvio #4: the programmable streaming platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datafuselabs.github.io/weekly/2021-09-01-datafuse-weekly/"&gt;This week in Datafuse #5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Tauri] &lt;a href="https://dev.to/tauri/tauri-feature-freeze-and-security-audit-1ml1"&gt;Feature Freeze&lt;/a&gt;, &lt;a href="https://tripetto.app/run/YV22XNAJBK"&gt;Community Survey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observationsthoughts"&gt;Observations/Thoughts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://radim.xyz/project/agent_tag_bevy/"&gt;Game engine beginner - First look at Bevy - What is ECS and why should you care?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ibraheem.ca/writings/an-alternative-async-fn-syntax/"&gt;An Alternative Syntax for Async Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.crowdstrike.com/blog/development-cost-of-porting-tensorflow-models-to-pure-rust/"&gt;Development Cost of Porting TensorFlow Models to Pure Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-walkthroughs"&gt;Rust Walkthroughs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://saidvandeklundert.net/learn/2021-09-01-rust-option-and-result/"&gt;Rust Option and Result&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/rogertorres/asynchronous-rust-basic-concepts-44ed"&gt;Asynchronous Rust: basic concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ender_minyard/rust-visualized-pointers-as-references-23cg"&gt;Rust Visualized: Pointers as References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lpalmieri.com/posts/password-authentication-in-rust/"&gt;Password auth in Rust, from scratch - Attacks and best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rodrigoaraujo.me/posts/lets-build-an-lc-3-virtual-machine/"&gt;Building an LC-3 virtual machine in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fpcomplete.com/blog/axum-hyper-tonic-tower-part1/"&gt;Combining Axum, Hyper, Tonic, and Tower for hybrid web/gRPC apps: Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=LHPV3z9OSic"&gt;Getting started with Rust programming language 🦀 2021: 5. Refactoring the CLI app in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=ThjvMReOXYM"&gt;Crust of Rust: async/await&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[video] &lt;a href="https://www.youtube.com/watch?v=mupwF9jbVZ4"&gt;Concurrency in Rust - Sharing State&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="miscellaneous"&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/pchp8h/media_struct_update_syntax_in_rust/"&gt;Struct Update Syntax in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://umccr.org/blog/htsget-rs/"&gt;htsget-rs: Bioinformatic file formats accessible to the web, 100% Rust, a GSoC2021 project wrap-up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://static.stillinbeta.com/cold-iron/cold_iron/"&gt;cold_iron: A Brief Introduction to Nanothaumaturgy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="crate-of-the-week"&gt;Crate of the Week&lt;/h2&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/taiki-e/cargo-llvm-cov"&gt;cargo-llvm-cov&lt;/a&gt;, a cargo subcommand for LLVM-based code coverage.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/948"&gt;Jacob Pratt&lt;/a&gt; for the suggestion.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Please submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id="call-for-participation"&gt;Call for Participation&lt;/h2&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/pfuwhf/help_wanted_cdrstokio_road_to_performance_and/"&gt;cdrs-tokio road to performance and testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RoaringBitmap/roaring-rs/issues/113"&gt;RoaringBitmap/roaring-rs - The insert_range method does not properly handle boundary condition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/issues/160"&gt;ockam-network/ockam - Ockam Vault for AWS (KMS/HSM) in Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ockam-network/ockam/issues/1804"&gt;ockam-network/ockam - Ockam TCP Transport using smoltcp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h2&gt;
&lt;p&gt;296 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2021-08-23..2021-08-30"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87832"&gt;fix debugger stepping behavior with match expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/84333"&gt;improve liveness analysis for generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88280"&gt;handle match statements with non exhaustive variants in closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88208"&gt;&lt;code&gt;ast_lowering&lt;/code&gt;: introduce &lt;code&gt;lower_span&lt;/code&gt; for catching all spans entering HIR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88069"&gt;PGO for LLVM builds on &lt;code&gt;x86_64-unknown-linux-gnu&lt;/code&gt; in CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88262"&gt;&lt;code&gt;Cow&lt;/code&gt;'ify some &lt;code&gt;pprust&lt;/code&gt; methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/polonius/pull/173"&gt;polonius: move to a fully hand-written parser to improve compile / iteration times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85556"&gt;warn about unreachable code following an expression with an uninhabited type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/85499"&gt;normalize projections under binders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87472"&gt;stabilize and document &lt;code&gt;--force-warn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/88299"&gt;stabilise &lt;code&gt;BufWriter::into_parts&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87944"&gt;add &lt;code&gt;Cell::as_array_of_cells&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/87921"&gt;add &lt;code&gt;Saturating&lt;/code&gt; type (based on &lt;code&gt;Wrapping&lt;/code&gt; type)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/1203"&gt;stdarch: update codegen for simd wasm intrinsics with LLVM 13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2488"&gt;futures: add &lt;code&gt;Peekable::&lt;/code&gt;{&lt;code&gt;peek_mut&lt;/code&gt;, &lt;code&gt;poll_peek_mut&lt;/code&gt;}&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/9848"&gt;cargo: show description of well known subcommands (fmt, clippy) in &lt;code&gt;cargo --list&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7573"&gt;clippy: fix &lt;code&gt;option_if_let_else&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7543"&gt;clippy: add &lt;code&gt;module_style&lt;/code&gt; lint to style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/7453"&gt;clippy: don't report function calls as unnecessary operation if used in array index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="rust-compiler-performance-triage"&gt;Rust Compiler Performance Triage&lt;/h3&gt;
&lt;p&gt;A very busy week with relatively even amounts of regressions and improvements (albeit with improvements outweighing regressions). The largest win was the use of profile-guided optimization (PGO) builds on x86_64 linux builds which brings fairly large improvements in real-world crates. There were 2 regressions that caused fairly large (~3.5%) regressions in real-world crates which need to be investigated.&lt;/p&gt;
&lt;p&gt;Triage done by &lt;strong&gt;@rylev&lt;/strong&gt;.
Revision range: &lt;a href="https://perf.rust-lang.org/?start=33fdb797f59421c7bbecaa4588ed5d7a31a9494a&amp;amp;end=fe37929e4cba2c5c21e6805805769630c736bc3d&amp;amp;absolute=false&amp;amp;stat=instructions%3Au"&gt;33fdb..fe379&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5 Regressions, 4 Improvements, 5 Mixed; 0 of them in rollups
56 comparisons made in total&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rust-lang/rustc-perf/blob/master/triage/2021-09-01.md"&gt;Full report here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="approved-rfcs"&gt;Approved RFCs&lt;/h3&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="final-comment-period"&gt;Final Comment Period&lt;/h3&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rfcs/pull/3163"&gt;Proposal: Else clauses for for and while loops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rfcs/pull/3159"&gt;RFC: let-expression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3123"&gt;Scrape code examples from examples/ directory for Rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/3119"&gt;Rust-lang crate ownership policy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/88353"&gt;Partially stabilize array_methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/88177"&gt;Stabilize std::os::unix::fs::chroot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/88140"&gt;Stabilize reserved prefixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/88126"&gt;stabilize disjoint capture in closures (RFC 2229)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/87993"&gt;Stabilize try_reserve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/87064"&gt;Support #[track_caller] on closures and generators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="new-rfcs"&gt;New RFCs&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="upcoming-events"&gt;Upcoming Events&lt;/h2&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Zurich/events/280295950/"&gt;September 2, 2021, Zurich, CH - Exciting new Rustdoc features landing in 1.55.0 - Hybrid Meetup (Livestream!) - Rust Zurich&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://berline.rs/"&gt;September 2, 2021, Berlin, DE - Rust Hack and Learn - Berline.rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Buffalo-Rust-Meetup/events/280433831/"&gt;September 7, 2021, Buffalo, NY, US - Buffalo Rust User Group, First Tuesdays - Buffalo Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Boulder-Denver/events/279407152/"&gt;September 8, 2021, Denver, CO, US - Rust Q&amp;amp;A - Rust Denver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/gskksryccmbsb/"&gt;September 14, 2021, Seattle, WA, US - Monthly Meetup - Seattle Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/zkqvjsyccmbtb/"&gt;September 15, 2021, Vancouver, BC, CA - Considering Rust - Vancouver Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/lhpkmsyccmblb/"&gt;September 8, 2021, Atlanta, GA, US - Grab a beer with fellow Rustaceans - Rust Atlanta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;NZXT&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nzxt.bamboohr.com/jobs/view.php?id=317"&gt;Senior Software Engineer for Streaming Software (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Polar Sync&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://polarsync.breezy.hr/p/0c1d3630d39d"&gt;Principal/Senior Software Engineer - Rust/C++ (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Subspace Labs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/subspacelabs/d5d62ccb-eaaf-43f4-83ad-11ebff2ce3a0"&gt;Blockchain Consensus Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kollider&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/junior-backend-engineer/en"&gt;Junior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kollider.homerun.co/senior-backend-engineer/en"&gt;Senior Backend Engineer (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Kraken&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4019a818-4a7b-46ef-9225-c53c7a7f238c"&gt;Backend Engineer - Rust - Core Backend (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/fe1e07f4-6d7c-4f65-9a8f-27cf3b3fd2b1"&gt;Backend Engineer, Kraken Futures - Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/2863623f-13c9-4f50-992d-7c25736a60f9"&gt;Senior Banking Engineer - Rust (Remote)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TrueLayer&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Senior Software Engineer, Engineering Ops (&lt;a href="https://apply.workable.com/truelayer/j/0AAB4A80C1/"&gt;London, UK&lt;/a&gt;, &lt;a href="https://apply.workable.com/truelayer/j/9C3654A7BF/"&gt;Milan, IT&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Software Engineer, Engineering Ops (&lt;a href="https://apply.workable.com/truelayer/j/920145EAFA/"&gt;London, UK&lt;/a&gt;, &lt;a href="https://apply.workable.com/truelayer/j/BD3F858CA7/"&gt;Milan, IT&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Engineering Lead, PayDirect (&lt;a href="https://apply.workable.com/truelayer/j/9564797E78/"&gt;Milan, IT&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Rust Software Engineer, PayDirect (&lt;a href="https://apply.workable.com/truelayer/j/C554AC0559/"&gt;London, UK&lt;/a&gt;, &lt;a href="https://apply.workable.com/truelayer/j/ED53901B8A/"&gt;Milan, IT&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Anyway: the standard library docs say "check the nomicon"&lt;br /&gt;
then the nomicon says "here is some advice and ultimately we don't know, maybe check UCG"&lt;br /&gt;
then UCG says "ultimately we don't know it's probably like this but there's no RFC yet"&lt;br /&gt;
then Ralf says "probably it should be allowed if the layout matches".&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/rustc.20warn.20against.20repr.20rust.20transmutes/near/250735818"&gt;Lokathor on the Rust Zulip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/1097"&gt;Riccardo D'Ambrosio&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nellshamrell"&gt;nellshamrell&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/cdmistman"&gt;cdmistman&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/pgv2zq/this_week_in_rust_406/"&gt;Discuss on r/rust&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Wed, 01 Sep 2021 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2021-09-01:blog/2021/09/01/this-week-in-rust-406/</guid></item></channel></rss>