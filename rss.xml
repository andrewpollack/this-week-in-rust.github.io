<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>This Week in Rust</title><link>https://this-week-in-rust.org/</link><description></description><atom:link href="https://this-week-in-rust.org/rss.xml" rel="self"></atom:link><lastBuildDate>Tue, 21 May 2019 00:00:00 -0400</lastBuildDate><item><title>This Week in Rust 287</title><link>https://this-week-in-rust.org/blog/2019/05/21/this-week-in-rust-287/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/05/15/4-Years-Of-Rust.html"&gt;4 years of Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/05/20/The-2019-Rust-Event-Lineup.html"&gt;The 2019 Rust event lineup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boats.gitlab.io/blog/post/zero-cost-abstractions/"&gt;Understanding zero cost abstractions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.discordapp.com/using-rust-to-scale-elixir-for-11-million-concurrent-users-c6f19fc029d3"&gt;Using Rust to scale Elixir for 11 million concurrent users&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vorner.github.io/2019/05/19/rust-in-avast.html"&gt;Rust in Avast&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://internals.rust-lang.org/t/evaluating-pipelined-rustc-compilation/10199"&gt;Evaluating pipelined rustc compilation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dtolnay/case-studies"&gt;Analysis of various tricky Rust code&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://llogiq.github.io/2019/05/18/momo.html"&gt;Get back some compile time from monomorphization&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gankro.github.io/blah/initialize-me-maybe/"&gt;mem::uninitialized is deprecated&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.joshmcguigan.com/blog/shell-completions-pure-rust/"&gt;Shell completions in pure Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://karroffel.gitlab.io/post/2019-05-15-rust/"&gt;Creating C/C++ APIs in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@steadylearner/how-to-start-rust-chat-app-499a194d0820"&gt;How to start Rust chat app&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mozillagfx.wordpress.com/2019/05/21/graphics-team-ships-webrender-mvp/"&gt;WebRender MVP ships in Firefox&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/livevideo/rust-in-motion"&gt;Rust in Motion&lt;/a&gt; - a video series by Carol Nichols and Jake Goulding (requires purchase).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.manning.com/books/rust-in-action"&gt;Rust in Action&lt;/a&gt; - a book by Tim McNamara (early access, requires purchase).&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week we have two crates: &lt;a href="https://github.com/nokia/memory-profiler"&gt;memory-profiles&lt;/a&gt;, does what it says on the box. &lt;a href="https://github.com/llogiq/momo"&gt;momo&lt;/a&gt; is a procedural macro that outlines generic conversions to reduce monomorphized code. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/549"&gt;ehsanmok&lt;/a&gt; and llogiq for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/rust-belt-rustbridges/28332"&gt;Running a Rust Belt RustBridge&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://internals.rust-lang.org/t/async-await-experience-reports/10200"&gt;Submit your experience for newly await syntax&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/www.rust-lang.org/issues/780"&gt;www.rust-lang.org: Frontend cleanup: Remove Skeleton&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;240 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-05-13..2019-05-20"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60763"&gt;Move token tree related lexer state to a separate struct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60960"&gt;Stop using gensyms in HIR lowering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60765"&gt;Fix more escaping ReScopes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60745"&gt;Perform constant propagation into terminators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60597"&gt;Do some simple constant propagation in the &lt;code&gt;ConstProp&lt;/code&gt; pass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60590"&gt;Test interaction of unions with non-zero/niche-filling optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60444"&gt;Forego caching for all participants in cycles, apart from root node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60370"&gt;Mark &lt;code&gt;core::alloc::Layout::from_size_align_unchecked&lt;/code&gt; const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60921"&gt;Remove the unstable and deprecated &lt;code&gt;mpsc_select&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60445"&gt;Stabilize core parts of &lt;code&gt;MaybeUninit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60678"&gt;Stabilize &lt;code&gt;vecdeque_rotate&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60894"&gt;Add entry-like methods to &lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60130"&gt;Add implementations of &lt;code&gt;last&lt;/code&gt; in terms of &lt;code&gt;next_back&lt;/code&gt; on a bunch of &lt;code&gt;DoubleEndedIterators&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60760"&gt;Fix display of const generics in rustdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup.rs/pull/1850"&gt;rustup: Avoid blocking on &lt;code&gt;CloseHandle&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustc-guide/pull/318"&gt;rustc-guide: Add documentation about profile-guided optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/49799"&gt;lint: convert &lt;code&gt;incoherent_fundamental_impls&lt;/code&gt; into hard error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy/pull/4110"&gt;clippy: Prevent symbocalypse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/crates.io/pull/1746"&gt;crates.io: Fix performance regression on crate search&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2678"&gt;Named custom cargo profiles&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60850"&gt;Stabilize RefCell::try_borrow_unguarded&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/48763"&gt;Tracking issue for reversing the bit pattern in an integer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/45323"&gt;BufReader/Writer extension methods: is_empty, buffer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/59489"&gt;Bors policy question: Auto-reassignment on r+&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="africa"&gt;Africa&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/gpxrtqyzhbcb/"&gt;Jun  5. Johannesburg, ZA - Johannesburg Rust Meetup - informal discussions on topics related to the language&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia"&gt;Asia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/381254712479005/"&gt;May 25. Taipei, TW - Rust Taiwan Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.connpass.com/event/129406/"&gt;May 27. Tokyo, JP - Tokyo Rust Meetup - Rust LT #5&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Native-Developers-in-UA/events/261508593/"&gt;May 23. Kharkiv, UA - PeerLab Kharkiv #Rust: Rust Success Stories&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Paris/events/260925527/"&gt;May 23. Paris, FR - Rust Paris meetup #45&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/spbrust/events/whmxrqyzhbjc/"&gt;May 26. St. Petersburg, RU - St. Petersburg Rust Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzhbmc/"&gt;May 29. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-in-Vilnius/events/260937510/"&gt;May 28. Vilnius, LT - Rust Vilnius - Rust Safety and Distributed Consensus&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wroclaw/events/261283360/"&gt;Jun  6. Wroclaw, PL - Rust Wroclaw Meetup #11&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpyzhbkc/"&gt;May 27. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmyzhblc/"&gt;May 28. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzhbmc/"&gt;May 29. Vancouver, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Chicago-Rust-Meetup/events/260918979"&gt;May 29. Chicago, IL, US - Chicago Rust Meetup - Unsafe Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/kkzkxqyzjbhb/"&gt;Jun  5. Atlanta, GA, US - Grab a beer with fellow Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/mffbtpyzjbhb/"&gt;Jun  5. Indianapolis, IN, US - Indy.rs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="south-america"&gt;South America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Sao-Paulo-Meetup/events/261123153/"&gt;Jun 1. Sao Paulo, BR - Rust SP - Encontro Junho 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4c864c8f-bde6-443d-b521-dd90df0e9105"&gt;Senior Software Engineer, Backend - Rust at Kraken, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Just the presence of well integrated Algebraic Data Types (ADTs) makes an incredible amount of difference. They are used to represent errors in a meaningful and easy to understand way (&lt;code&gt;Result&amp;lt;T&amp;gt;&lt;/code&gt;), are used to show that a function may or may not return a meaningful value without needing a garbage value (&lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;), and the optional case can even be used to wrap a null pointer scenario in a safe way (Option&lt;Ref&lt;T&gt;&amp;gt; being the closest to a literal translation I think).&lt;/p&gt;
&lt;p&gt;That’s just one small feature that permeates the language. Whatever the opposite of a death-of-a-thousand-cuts is, Rust has it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://news.ycombinator.com/item?id=19922344"&gt;tomcatfish on the orange website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/643"&gt;PrototypeNM1&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/brnwyh/this_week_in_rust_287/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 21 May 2019 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2019-05-21:blog/2019/05/21/this-week-in-rust-287/</guid></item><item><title>This Week in Rust 286</title><link>https://this-week-in-rust.org/blog/2019/05/14/this-week-in-rust-286/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;🎈🎉 &lt;a href="https://blog.rust-lang.org/2019/05/14/Rust-1.34.2.html"&gt;Announcing Rust 1.34.2&lt;/a&gt;. 🎉🎈&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/05/13/Security-advisory.html"&gt;Security advisory for the standard library&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://internals.rust-lang.org/t/update-on-the-ci-investigation/10056"&gt;Update on the CI investigation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raphlinus.github.io/rust/graphics/gpu/2019/05/08/modern-2d.html"&gt;2D graphics on modern GPU&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blakesmith.me/2019/05/07/rust-patterns-enums-instead-of-booleans.html"&gt;Rust patterns: enums instead of booleans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.japaric.io/microamp/"&gt;Asymmetric multi-processing on microcontrollers with μAMP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ehsanmkermani.com/2019/05/13/state-of-machine-learning-in-rust/"&gt;State of machine learning in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/japaric/panic-never"&gt;panic-never&lt;/a&gt;, a crate to make every panic a link-time error. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/544"&gt;ehsanmok&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821/242"&gt;Help answer: What are the similarities and differences between C++'s concepts and Rust’s traits&lt;/a&gt;?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;190 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-05-06..2019-05-13"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60586"&gt;Implement built-in &lt;code&gt;.await&lt;/code&gt; syntax&lt;/a&gt; (Hooray!)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60675"&gt;Remove the old await! macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60733"&gt;Cleanup the .await HIR lowering with .stmt(..)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60588"&gt;Revert "Disable big-endian simd in swap_nonoverlapping_bytes"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60261"&gt;syntax: introduce unescape module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60700"&gt;syntax_pos: Optimize symbol interner pre-filling slightly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60679"&gt;Keep original literal tokens in AST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60659"&gt;Tweak &lt;code&gt;Symbol&lt;/code&gt; and &lt;code&gt;InternedString&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60630"&gt;Use &lt;code&gt;Symbol&lt;/code&gt; more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup.rs/pull/1845"&gt;Better IO buffer when validating dist hashes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/59288"&gt;Remove &lt;code&gt;hir::ExprKind::If&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60246"&gt;Optimize HIR map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60694"&gt;Fix HIR printing of existential type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60244"&gt;Const-stabilize &lt;code&gt;NonNull::dangling&lt;/code&gt; and &lt;code&gt;NonNull::cast&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60234"&gt;std: Derive &lt;code&gt;Default&lt;/code&gt; for &lt;code&gt;io::Cursor&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6934"&gt;cargo: Stabilize offline mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6925"&gt;cargo: Always include &lt;code&gt;Cargo.toml&lt;/code&gt; when packaging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6883"&gt;Implement the Cargo half of pipelined compilation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup.rs/pull/1842"&gt;rustup: More progress bars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2603"&gt;RFC 2603: Symbol Mangling v2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2678"&gt;Named custom cargo profiles&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/56686"&gt;Tracking issue for VecDeque::rotate_{left|right} (feature vecdeque_rotate)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/58974"&gt;std: implement &lt;code&gt;Error&lt;/code&gt; for &lt;code&gt;Box&amp;lt;dyn Error&amp;gt;&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60109"&gt;Stabilize ADX, TBM, and SSE4a target features&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60300"&gt;Allow null-pointer-optimized enums in FFI if their underlying representation is FFI safe&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60445"&gt;Stabilize core parts of MaybeUninit&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2700"&gt;Deprecate stdlib modules dedicated to numeric constants and move those constants to associated consts&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2699"&gt;Annotate unwind rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia"&gt;Asia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/mad-rs/events/261443876/"&gt;May 18. Chennai, IN - Rust Chennai - Monthly meetup - May&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/381254712479005/"&gt;May 25. Taipei, TW - Rust Taiwan Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.connpass.com/event/129406/"&gt;May 27. Tokyo, JP - Tokyo Rust Meetup - Rust LT #5&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Hack-Learn-Karlsruhe/events/261106439/"&gt;May 20. Karlsruhe, DE - Rust Hack &amp;amp; Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-NERF/events/261101152/"&gt;May 22. Erlangen, DE - Rust Franken Meetup #0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Meetup-Hamburg/events/260454690/"&gt;May 22. Hamburg, DE - Rust Hack &amp;amp; Learn May 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/FLOSS-Grenoble/events/261250845/"&gt;May 22. Grenoble, FR - FLOSS Grenoble - Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Paris/events/260925527/"&gt;May 23. Paris, FR - Rust Paris meetup #45&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzhbmc/"&gt;May 29. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-in-Vilnius/events/260937510/"&gt;May 28. Vilnius, LT - Rust Vilnius - Rust Safety and Distributed Consensus&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Ann-Arbor-Rust-Meetup/events/vsncvqyzhbdc/"&gt;May 22. Ann Arbor, US - Ann Arbor Rust Meetup - Monthly Gathering&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Desert-Rustaceans/events/mkwgvqyzhbdc/"&gt;May 22. Mesa, AZ, US - Desert Rust - Rust: Backend Web Frameworks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpyzhbkc/"&gt;May 27. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmyzhblc/"&gt;May 28. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzhbmc/"&gt;May 29. Vancouver, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Chicago-Rust-Meetup/events/260918979"&gt;May 29. Chicago, IL, US - Chicago Rust Meetup - Unsafe Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/jobs/cap/view/1162802661/"&gt;Lead Software Engineer at SE4, Tokyo, JP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sisu.ai/careers/?gh_jid=4057600002"&gt;Software Engineer - Backend at SISU, San Francisco, US&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tenx.workable.com/jobs/689264"&gt;Software Engineer at TenX, Singapore&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;The big gorilla 3D game framework. Apparently it actually works.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://wiki.alopex.li/AGuideToRustGraphicsLibraries2019"&gt;SimonHeath on Amethyst&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/640"&gt;Magnus Larsen&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/bowbaj/this_week_in_rust_286/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 14 May 2019 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2019-05-14:blog/2019/05/14/this-week-in-rust-286/</guid></item><item><title>This Week in Rust 285</title><link>https://this-week-in-rust.org/blog/2019/05/07/this-week-in-rust-285/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://boats.gitlab.io/blog/post/await-decision/"&gt;A final proposal for await syntax&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ncameron.org/blog/cargo-in-2019/"&gt;Cargo in 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/issues/44580#issuecomment-488819344"&gt;Const generics: a summary of progress so far&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/nearprotocol/rust-parallelism-for-non-c-c-developers-ec23f48b7e56"&gt;Rust parallelism for non-C/C++ developers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://os.phil-opp.com/status-update/2019-05-01/"&gt;Writing an OS in Rust: Updates in April 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.alopex.li/AGuideToRustGraphicsLibraries2019"&gt;A guide to Rust graphics libraries as of 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudsmith.io/2019/05/01/worlds-first-private-cargo-registry/"&gt;World's first private Cargo registry&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://guiand.xyz/blog-posts/macro-assembly-codegen.html"&gt;Compile-time coprocessor codegen, with Rust macros&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiredforge.com/blog/wasmer-plugin-pt-4/index.html"&gt;Using Wasmer for plugins part 4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/select-rustc"&gt;select-rustc&lt;/a&gt;, a crate for conditional compilation according to rustc version. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/531"&gt;ehsanmok&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No issues were proposed for CfP&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;235 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-04-29..2019-05-06"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60426"&gt;Stop &lt;code&gt;-O&lt;/code&gt;/&lt;code&gt;-C opt-level&lt;/code&gt; and &lt;code&gt;-g&lt;/code&gt;/&lt;code&gt;-C debuginfo&lt;/code&gt; conflicting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/53645"&gt;The Genesis of Generic Germination&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60467"&gt;Avoid repeated interning of static strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60159"&gt;Suggest &lt;code&gt;try_into&lt;/code&gt; when possible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60330"&gt;Suggest using an inclusive range instead of an exclusive range when the endpoint overflows by 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60327"&gt;Search for incompatible universes in borrow errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60449"&gt;Constrain all regions in the concrete type for an opaque type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60457"&gt;Const propagation refactoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60404"&gt;Implement &lt;code&gt;BorrowMut&amp;lt;str&amp;gt;&lt;/code&gt; for &lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60334"&gt;Stabilize vectored IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60356"&gt;Stabilize &lt;code&gt;str::as_mut_ptr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60256"&gt;Add &lt;code&gt;Option::flatten&lt;/code&gt; and &lt;code&gt;Into&amp;lt;Option&amp;lt;_&amp;gt;&amp;gt; for Option&amp;lt;Option&amp;lt;_&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6871"&gt;cargo: Add some help with updating the registry in offline mode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2689"&gt;RFC 2689: Introduce "compiler-team contributors"&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2363"&gt;RFC 2363: Allow arbitrary enums to have explicit discriminants&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2603"&gt;Symbol Mangling v2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60396"&gt;Document the order of {Vec,VecDeque,String}::retain&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60244"&gt;const-stabilize NonNull::dangling and NonNull::cast&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60234"&gt;std: Derive &lt;code&gt;Default&lt;/code&gt; for &lt;code&gt;io::Cursor&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60112"&gt;Implement DoubleEndedIterator for CaseMappingIter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/60014"&gt;Stabilize the core::array module and reexport in std (for TryFromSliceError)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/56995"&gt;Tracking issue for DoubleEndedIterator::nth_back&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2696"&gt;Add key and value methods to DebugMap&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wroclaw/events/260858425/"&gt;May  9. Wrocław, PL - Rust Wroclaw Meetup #10&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.gnome.org/Hackfests/Rust2019"&gt;May  9. Berlin, DE - Rust+GNOME 2019 Hackfest#5&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/BcnRust/events/261043339/"&gt;May 14. Barcelona, ES - BcnRust Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzhbtb/"&gt;May 15. Berlin, DE - Rust and Rust Berlin Birthday Party&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Finland-Rust-Meetup/events/260939025/"&gt;May 15. Helsinki, FI - Rust meetup May&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Community-Stuttgart/events/261050644/"&gt;May 15. Stuttgart, DE - Workshop: Ownership, Borrowing &amp;amp; Lifetimes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-NERF/events/261101152/"&gt;May 22. Erlangen, DE - Rust Franken Meetup #0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Meetup-Hamburg/events/260454690/"&gt;May 22. Hamburg, DE - Rust Hack &amp;amp; Learn May 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Paris/events/260925527/"&gt;May 23. Paris, FR - Rust Paris meetup #45&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/261148910/"&gt;May  9. Lehi, UT, US - Meetup #12: Happy Anniversary, Utah Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/260763786/"&gt;May  9. San Diego, US - San Diego Rust May Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/260559957"&gt;May  9. Arlington, US - Rust DC — Mid-month Rustful&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dbcfrpyzhbmb/"&gt;May  9. Columbus, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/nzfspqyzhbsb/"&gt;May 14. Seattle, US - Monthly meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-MX/events/261254479/"&gt;May 15. Mexico City, MX - Rust MX - Taller de desarrollo con Rocket&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzhbtb/"&gt;May 15. Vancouver, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Ann-Arbor-Rust-Meetup/events/vsncvqyzhbdc/"&gt;May 22. Ann Arbor, US - Ann Arbor Rust Meetup - Monthly Gathering&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Desert-Rustaceans/events/mkwgvqyzhbdc/"&gt;May 22. Mesa, AZ, US - Desert Rust - Rust: Backend Web Frameworks&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-blockchain-runtime-engineer"&gt;Blockchain Runtime Engineer at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.lever.co/kraken/4c864c8f-bde6-443d-b521-dd90df0e9105"&gt;Senior Software Engineer, Backend - Rust at Kraken, Remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A compile_fail test that fails to fail to compile is also a failure.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/dtolnay/trybuild/blob/f4abe7607480e74db1905800ea858bab145c3740/README.md"&gt;David Tolnay in the try-build README&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Llogiq is pretty self-congratulatory for picking this awesome quote.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/bm4zk6/this_week_in_rust_285/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 07 May 2019 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2019-05-07:blog/2019/05/07/this-week-in-rust-285/</guid></item><item><title>This Week in Rust 284</title><link>https://this-week-in-rust.org/blog/2019/04/30/this-week-in-rust-284/</link><description>&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;🎈🎉 &lt;a href="https://blog.rust-lang.org/2019/04/25/Rust-1.34.1.html"&gt;Announcing Rust 1.34.1&lt;/a&gt;. 🎉🎈&lt;/li&gt;
&lt;li&gt;&lt;a href="https://internals.rust-lang.org/t/await-syntax-discussion-summary/9914"&gt;Await syntax discussion summary&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://upsuper.github.io/rust-cheatsheet/"&gt;A (type-based) Rust cheatsheet&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://os.phil-opp.com/testing/"&gt;Writing an OS in Rust: Testing&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stephencoakley.com/2019/04/24/how-rust-solved-dependency-hell"&gt;How Rust solved dependency hell&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jonathanturner.org/2019/04/porting-the-pikachu.html"&gt;Creating crossplatform Rust terminal apps&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@jondot/my-key-learnings-after-30-000-loc-in-rust-a553e6403c19"&gt;10 key learnings in Rust after 30,000 lines of code&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/bhffwn/uwp_port_is_in_progress/"&gt;UWP port is in progress&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/04/26/Mozilla-IRC-Sunset-and-the-Rust-Channel.html"&gt;Mozilla IRC sunset and the Rust channel&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://way-cooler.org/blog/2019/04/29/rewriting-way-cooler-in-c.html"&gt;Giving up on wlroots-rs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://maxbittker.com/making-sandspiel"&gt;Making Sandspiel (a falling sand game in Rust and Wasm)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rom1v.com/2019/04/implementing-tile-encoding-in-rav1e/"&gt;Implementing tile encoding in rav1e&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ralfj.de/blog/2019/04/30/stacked-borrows-2.html"&gt;Stacked Borrows 2&lt;/a&gt; with more precise tracking of shared references.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/japaric/cast.rs"&gt;cast-rs&lt;/a&gt;, a crate with ergonomic, checked cast functions for primitive types. Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/525"&gt;mark-i-m&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No issues were proposed for CfP&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;229 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-04-22..2019-04-29"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/59739"&gt;Stabilize futures_api&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/58623"&gt;Replace HashMap implementation with SwissTable (as an external crate)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60225"&gt;Introduce &lt;code&gt;hir::ExprKind::Use&lt;/code&gt; and employ in for loop desugaring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/56278"&gt;Future-proof MIR for dedicated debuginfo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60191"&gt;Add &lt;code&gt;f16c&lt;/code&gt; target_feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60121"&gt;Fix &lt;code&gt;sync_all&lt;/code&gt; on macos/ios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60192"&gt;Implement &lt;code&gt;saturating_abs()&lt;/code&gt; and &lt;code&gt;saturating_neg()&lt;/code&gt; functions for signed integer types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60333"&gt;Stabilize &lt;code&gt;Iterator::copied&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60303"&gt;Stabilize &lt;code&gt;pointer::align_offset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/60364"&gt;Const-stabilize &lt;code&gt;std::mem::needs_drop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6873"&gt;cargo: Support relative paths for registries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/59940"&gt;Set &lt;code&gt;cfg(test)&lt;/code&gt; when rustdoc is running with &lt;code&gt;--test&lt;/code&gt; option&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2645"&gt;RFC 2645: Transparent Unions and Enums&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2565"&gt;RFC 2565: Attributes in formal function parameter position&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2363"&gt;Allow arbitrary enums to have explicit discriminants&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2603"&gt;Symbol Mangling v2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2689"&gt;Introduce "compiler-team contributors"&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: postpone] &lt;a href="https://github.com/rust-lang/rfcs/pull/2635"&gt;Changing the overflow behavior for usize in release builds to panic&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/59725"&gt;[Stabilization] Future APIs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/60014"&gt;Stabilize the core::array module and reexport in std (for TryFromSliceError)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/56995"&gt;Tracking issue for DoubleEndedIterator::nth_back&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/58327"&gt;Experimentally add &lt;code&gt;ffi_const&lt;/code&gt; and &lt;code&gt;ffi_pure&lt;/code&gt; extern fn attributes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/58975"&gt;Implement &lt;code&gt;iter::Sum&lt;/code&gt; and &lt;code&gt;iter::Product&lt;/code&gt; for &lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/60234"&gt;std: Derive &lt;code&gt;Default&lt;/code&gt; for &lt;code&gt;io::Cursor&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2693"&gt;Add Unicode Annex 31 methods to &lt;code&gt;char&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="africa"&gt;Africa&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/gpxrtqyzhbcb/"&gt;May  2. Johannesburg, ZA - Johannesburg meetup - Everybody Borrows&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/259480601/"&gt;May  6. Auckland, NZ - Rust AKL - Rust Debugging Techniques + Lightening Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScUHpCLPMF8I1QxA_WnIz9bipalrNsUckSyLMysGGNB5y0Lyw/viewform"&gt;May  8. Kuala Lumpur, MY - Rust Meetup May 2019&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-munich/events/259984522/"&gt;May  2. Munich, DE - Rust Munich - Rust libp2p&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Zagreb-Rust-Meetup/events/260942646/"&gt;May  2. Zagreb, HR - Rust Meetup 201905: WebAssembly &amp;lt;3 Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Hungary-Meetup/events/260651034/"&gt;May  6. Budapest, HU - Rust Hungary Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Wroclaw/events/260858425/"&gt;May  9. Wrocław, PL - Rust Wroclaw Meetup #10&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.gnome.org/Hackfests/Rust2019"&gt;May  9. Berlin, DE - Rust+GNOME 2019 Hackfest#5&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gkkttqyzhbtb/"&gt;May 15. Berlin, DE - Berlin Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Finland-Rust-Meetup/events/260939025/"&gt;May 15. Helsinki, FI - Rust meetup May&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Desert-Rustaceans/events/xbfdtqyzhblb/"&gt;May  8. Mesa, US - Desert Rust: Rust Study Group (booze.rs)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/260763786/"&gt;May  9. San Diego, US - San Diego Rust May Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/260559957"&gt;May  9. Arlington, US - Rust DC — Mid-month Rustful&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dbcfrpyzhbmb/"&gt;May  9. Columbus, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/nzfspqyzhbsb/"&gt;May 14. Seattle, US - Monthly meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/fzqqwqyzhbtb/"&gt;May 15. Vancouver, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://internals.rust-lang.org/t/mozilla-is-hiring-for-the-rust-team-2019/9949"&gt;Mozilla is hiring for the Rust Team&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-developer-advocate"&gt;Developer Advocate at Parity, Berlin, DE or remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Clippy’s Favorite Activity Is Criticizing Clippy’s Codebase&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://mobile.twitter.com/reduct_rs/status/1121439213772333058"&gt;ReductRs on twitter&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Llogiq is pretty self-congratulatory for picking this awesome quote.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/bjgzce/this_week_in_rust_284/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">TWiR Contributors</dc:creator><pubDate>Tue, 30 Apr 2019 00:00:00 -0400</pubDate><guid>tag:this-week-in-rust.org,2019-04-30:blog/2019/04/30/this-week-in-rust-284/</guid></item></channel></rss>