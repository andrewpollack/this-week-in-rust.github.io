<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>This Week in Rust</title><link href="https://this-week-in-rust.org/" rel="alternate"></link><link href="https://this-week-in-rust.org/atom.xml" rel="self"></link><id>https://this-week-in-rust.org/</id><updated>2020-03-24T00:00:00-04:00</updated><entry><title>This Week in Rust 331</title><link href="https://this-week-in-rust.org/blog/2020/03/24/this-week-in-rust-331/" rel="alternate"></link><updated>2020-03-24T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2020-03-24:blog/2020/03/24/this-week-in-rust-331/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/regex/issues/656"&gt;Plans for the regex crate&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tokio-rs/tokio/commit/acf8a7da7a64bf08d578db9a9836a8e061765314"&gt;Tokio's new internal semaphore based on intrusive lists&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@KevinHoffman/rust-async-and-the-terrible-horrible-no-good-very-bad-day-348ebc836274"&gt;Rust async and the terrible, horrible, no good, very bad day&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=olM7o_oYML0"&gt;C++20 &amp;amp; Rust on static vs dynamic generics&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matklad.github.io/2020/03/22/fast-simple-rust-interner.html"&gt;Fast and simple Rust interner&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://anssi-fr.github.io/rust-guide/"&gt;Secure Rust guidelines&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dpc.pw/how-i-structure-my-apps-in-rust-and-other-languages"&gt;How I structure my apps (in Rust and other languages)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notes.iveselov.info/programming/cheatsheet-rust-option-vs-haskell-maybe"&gt;Cheatsheet: Option (in Rust) vs Maybe (in Haskell)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://brooker.co.za/blog/2020/03/22/rust.html"&gt;Two years with Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.gnome.org/~federico/blog/reducing-memory-consumption-in-librsvg-3.html"&gt;Reducing memory consumption in librsvg, part 3: slack space in Bézier paths&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://troubles.md/abusing-rustc/"&gt;Inviting God's wrath with cursed Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@richardanaya/lets-write-a-web-assembly-interpreter-part-1-287298201d75"&gt;Let’s write a Web Assembly interpreter (part 1)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shahinrostami.com/posts/programming/rust-notebooks/descriptive-statistics-with-ndarray/"&gt;Descriptive statistics with NDArray&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/03/23/changelog-17.html"&gt;rust-analyzer changelog #17&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/XAMPPRocky/tokei/releases/tag/v11.0.0"&gt;Announcing Tokei 11: Now over 40–60% faster&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LukeMathWalker/build-your-own-jira-with-rust"&gt;Learn Rust building a toy JIRA clone&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/mart3ll/status/1240705442839277569"&gt;The original concept for the Rust logo&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crates is &lt;a href="https://github.com/zesterer/flume"&gt;flume&lt;/a&gt;, a fast multi-producer single-consumer channel.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/741"&gt;Vikrant&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.ipfs.io/2020-03-18-announcing-rust-ipfs/"&gt;Announcing Rust IPFS, and a call for contributors&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cfp.rustconf.com/events/rustconf-2020"&gt;The RustConf 2020 CFP is now open&lt;/a&gt;. We'd love to hear from you at RustConf!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2020/03/13/twir-new-lead.html"&gt;This Week in Rust is looking for a new maintainer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;380 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-03-16..2020-03-23"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69033"&gt;use generator resume arguments in the async/await lowering&lt;/a&gt; (async on core!)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69814"&gt;async: smaller and more correct generator codegen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/68970"&gt;implement a feature for a sound specialization subset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69251"&gt;&lt;code&gt;#[track_caller]&lt;/code&gt; in traits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69901"&gt;add &lt;code&gt;#[rustc_layout(debug)]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70209"&gt;parser: recover on &lt;code&gt;for&amp;lt;'a&amp;gt; |...| body&lt;/code&gt; closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69811"&gt;resolve: print import chains on privacy errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70233"&gt;resolve: do not resolve visibilities on proc macro definitions twice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70215"&gt;ast: compress &lt;code&gt;AttrId&lt;/code&gt; from &lt;code&gt;usize&lt;/code&gt; to &lt;code&gt;u32&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70223"&gt;fix type of const params in associated types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70199"&gt;revised span-to-lines conversion to produce an empty vec on &lt;code&gt;DUMMY_SP&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70119"&gt;rustc: use &lt;code&gt;LocalDefId&lt;/code&gt; instead of &lt;code&gt;DefId&lt;/code&gt; in &lt;code&gt;TypeckTables&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69934"&gt;update the mir inline costs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70249"&gt;handle &lt;code&gt;ConstKind::Unresolved&lt;/code&gt; after monomorphizing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69778"&gt;perf(dep_graph): avoid allocating a set on when the number reads are small&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69497"&gt;don't unwind when hitting the macro expansion recursion limit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/miri/pull/1248"&gt;miri: detect UB: overflow in &lt;code&gt;copy&lt;/code&gt;/&lt;code&gt;write_bytes&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69079"&gt;allow calculating the layout behind a pointer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65097"&gt;make &lt;code&gt;std::sync::Arc&lt;/code&gt; compatible with ThreadSanitizer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70266"&gt;proc_macro_harness: use item header spans for errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69922"&gt;implement &lt;code&gt;zeroed&lt;/code&gt; and &lt;code&gt;uninitialized&lt;/code&gt; with &lt;code&gt;MaybeUninit&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70240"&gt;return &lt;code&gt;NonZeroU64&lt;/code&gt; from &lt;code&gt;ThreadId::as_u64&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70111"&gt;&lt;code&gt;BTreeMap&lt;/code&gt;: remove shared root&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/148"&gt;hashbrown: use &lt;code&gt;NonNull&lt;/code&gt; for the Bucket pointer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2843"&gt;RFC 2843: Add llvm_asm! and deprecate asm!&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/67058"&gt;Tracking issue for &lt;code&gt;{f32,f64}::approx_unchecked_to&lt;/code&gt; methods&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/70048"&gt;Allow obtaining &amp;amp;mut OsStr&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/68692"&gt;impl From&amp;lt;[T; N]&amp;gt; for Vec&lt;T&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/70281"&gt;Implement Hash for Infallible&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2886"&gt;Access to traits' associated functions and constants from trait objects&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2887"&gt;Allow specifying dependencies for individual artifacts&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2888"&gt;&lt;code&gt;ForbiddenValue&lt;/code&gt; trait to enable more optimizations&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Stockholm-Rust/events/269572409/"&gt;Mar 28. Stockholm, SE - Stockholm Rust - Rust Discord Hangout - Social Social Distancing&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/269648606/"&gt;Apr  1. Johannesburg, ZA - Johannesburg Rust Meetup - Remote coffee and chat about Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/266876539/"&gt;Apr  6. Auckland, NZ - Rust AKL - Using C Libraries in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/269639205/"&gt;Apr  9. San Diego, CA, US - San Diego Rust - April 2020 Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmybcfbpc/"&gt;Mar 31. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/dtqwprybcgbcb/"&gt;Apr  1. Indianapolis, IN, US - Indy.rs - WebAssembly 101&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrybcgbmb/"&gt;Apr  9. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aleph-alpha.de/sw_engineer.html?language=de"&gt;Infrastructure Engineer at Aleph Alpha, Heidelberg, Germany&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust is funny because in one sense it's hard and clunky. However, it's only ever &lt;em&gt;precisely as hard and clunky as it needs to be&lt;/em&gt;. Everywhere something can be made more concise, or readable, or convenient, without sacrificing any control, it has been. Anytime something is hard or inconvenient, it's because the underlying domain really is exactly that hard or inconvenient.&lt;/p&gt;
&lt;p&gt;Contrast this with other languages, which are often clunky when they don't need to be and/or "easy" when they shouldn't be.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://news.ycombinator.com/item?id=22609082"&gt;brundolf on Hacker News&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/837"&gt;pitdicker&lt;/a&gt; for the suggestions!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt; and &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/fp9z5t/this_week_in_rust_331/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 330</title><link href="https://this-week-in-rust.org/blog/2020/03/17/this-week-in-rust-330/" rel="alternate"></link><updated>2020-03-17T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2020-03-17:blog/2020/03/17/this-week-in-rust-330/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;🎈🎉 &lt;a href="https://blog.rust-lang.org/2020/03/12/Rust-1.42.html"&gt;Announcing Rust 1.42.0&lt;/a&gt;. 🎉🎈&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BurntSushi/ripgrep/releases/tag/12.0.0"&gt;ripgrep 12 is released&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dropbox.tech/infrastructure/rewriting-the-heart-of-our-sync-engine"&gt;Rewriting the heart of our sync engine at Dropbox&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/03/15/docs-rs-opt-into-fewer-targets.html"&gt;docs.rs now allows you to choose your build targets&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redox-os.org/news/pkgar-introduction/"&gt;Redox OS - pkgar introduction&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/fimbo3/reducing_the_size_of_optiont_by_adding_members_to/"&gt;Reducing the size of &lt;code&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt; by adding members to &lt;code&gt;T&lt;/code&gt;&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://llogiq.github.io/2020/03/14/ootb.html"&gt;Out of the box dynamic dispatch&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yoshuawuyts.com/parallel-stream/"&gt;parallel-stream&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://oribenshir.github.io/afternoon_rusting/blog/copy-on-write"&gt;Optimizations that aren't, or are they&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2020/03/18/all-hands-retrospective.html"&gt;Rust All Hands retrospective&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.guillaume-gomez.fr/articles/2020-03-12+Guide+on+how+to+write+documentation+for+a+Rust+crate"&gt;Guide on how to write documentation for a Rust crate&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://treit.github.io/rust,/c%23,/programming/2020/03/15/StartingRustPart2.html"&gt;A C# programmer examines Rust - Part 2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://articles.bchlr.de/traits-dynamic-dispatch-upcasting"&gt;Traits, dynamic dispatch and upcasting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.thoughtram.io/references-in-rust/"&gt;References in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.frondeus.pl/parser-2/"&gt;Parsing library in Rust pt. 2 - test utilities&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shahinrostami.com/posts/programming/rust-notebooks/loading-datasets-from-csv-into-ndarray/"&gt;Loading datasets from CSV into NDArray&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/fg5wo1/announcing_rustsearchextension_v08_the_ultimate/"&gt;Announcing Rust Search Extension v0.8&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smallcultfollowing.com/babysteps/blog/2020/03/10/async-interview-7-withoutboats/"&gt;Async interview 7: withoutboats&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/03/16/changelog-16.html"&gt;rust-analyzer changelog 16&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2020/03/16/changelog-118.html"&gt;IntelliJ Rust changelog 118&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rustfest.eu/postponing-rustfest-nl"&gt;Postponing RustFest Netherlands&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustlatam.org/index.html#cancel"&gt;Rust Latam 2020 (Mexico) is cancelled&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crates is &lt;a href="https://github.com/maciejhirsz/beef"&gt;beef&lt;/a&gt;, an alternative memory-compact Clone on Write (CoW) implementation.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/740"&gt;Vlad Frolov&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2020/03/13/twir-new-lead.html"&gt;This Week in Rust is looking for a new maintainer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swc-project.github.io/blog/2020/03/16/roadmap-and-call-for-help"&gt;The swc project needs some help from community&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;309 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-03-09..2020-03-16"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69734"&gt;change &lt;code&gt;DIBuilderCreateEnumerator&lt;/code&gt; signature to match LLVM 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69155"&gt;add support for LLVM globals corresponding to miri allocations should be named &lt;code&gt;alloc123&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69357"&gt;emit 1-based column numbers in debuginfo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69760"&gt;improve expression &amp;amp; attribute parsing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/70006"&gt;resolve: fix two issues in fresh binding disambiguation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69716"&gt;don't store locals in generators that are immediately overwritten with the resume argument&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69714"&gt;make &lt;code&gt;PlaceRef&lt;/code&gt; take just one lifetime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69591"&gt;use &lt;code&gt;TypeRelating&lt;/code&gt; for instantiating query responses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/68551"&gt;perf: reuse a &lt;code&gt;Vec&lt;/code&gt; in mir simplification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69891"&gt;exhaustiveness checking, &lt;code&gt;Matrix::push&lt;/code&gt;: recursively expand or-patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69888"&gt;miri: use a session variable instead of checking for an env var always&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69850"&gt;&lt;code&gt;panic_bounds_check&lt;/code&gt;: use caller_location, like &lt;code&gt;PanicFnLangItem&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69836"&gt;check if output is immediate value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69828"&gt;fix memory leak when &lt;code&gt;vec::IntoIter&lt;/code&gt; panics during drop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/67502"&gt;optimize &lt;code&gt;catch_unwind&lt;/code&gt; to match C++ try/catch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69825"&gt;make &lt;code&gt;mem::discriminant&lt;/code&gt; const&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69799"&gt;allow zero-sized types in &lt;code&gt;AllocRef&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/66059"&gt;&lt;code&gt;mem::zeroed&lt;/code&gt;/&lt;code&gt;uninit&lt;/code&gt;: panic on types that do not permit zero-initialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/68899"&gt;add &lt;code&gt;Display&lt;/code&gt; and &lt;code&gt;Error&lt;/code&gt; impls for &lt;code&gt;proc_macro::LexError&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69792"&gt;implement &lt;code&gt;Error&lt;/code&gt; for &lt;code&gt;TryReserveError&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69625"&gt;implement &lt;code&gt;nth&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, and &lt;code&gt;count&lt;/code&gt; for &lt;code&gt;iter::Copied&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69528"&gt;add undo_leak to reset &lt;code&gt;RefCell&lt;/code&gt; borrow state&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69403"&gt;implement &lt;code&gt;Copy&lt;/code&gt; for &lt;code&gt;IoSlice&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69373"&gt;stabilize const for &lt;code&gt;integer&lt;/code&gt;{&lt;code&gt;to&lt;/code&gt;, &lt;code&gt;from&lt;/code&gt;}&lt;code&gt;_&lt;/code&gt;{&lt;code&gt;be&lt;/code&gt;, &lt;code&gt;le&lt;/code&gt;, &lt;code&gt;ne&lt;/code&gt;}&lt;code&gt;_bytes&lt;/code&gt; methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69661"&gt;implement &lt;code&gt;From&amp;lt;&amp;amp;mut str&amp;gt;&lt;/code&gt; for &lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/146"&gt;hashbrown: optimize &lt;code&gt;Clone&lt;/code&gt; implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/futures-rs/pull/2095"&gt;futures: use &lt;code&gt;once_cell&lt;/code&gt; for sound &lt;code&gt;&amp;amp;'static Waker&lt;/code&gt; instances&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7838"&gt;cargo: avoid buffering large amounts of rustc output&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7533"&gt;cargo: clippy integration changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7989"&gt;cargo: add "Updating" status for git submodules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/docs.rs/pull/632"&gt;docs.rs: allow crates to opt-in to building a single target&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/70048"&gt;Allow obtaining &amp;amp;mut OsStr&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/68905"&gt;&lt;code&gt;is_x86_feature_detected!("avx512f")&lt;/code&gt; fails to build on beta and nightly&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/68692"&gt;impl From&amp;lt;[T; N]&amp;gt; for Vec&lt;T&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/68099"&gt;Amend Rc/Arc::from_raw() docs regarding unsafety&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2884"&gt;Placement by return&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="online"&gt;Online&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://oxidizeconf.com/oxidize-1k/"&gt;Mar 20. Berlin, DE - Oxidize 1K: A Remote Conference&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/PDXRust/events/269447550/"&gt;Mar 25. Portland, OR, US - PDXRust - Lightning Talks - Remote Event&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpybcfbfc/"&gt;Mar 23. Durham, NC, US - Triangle Rustaceans - Online gathering&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-edi/events/267810816"&gt;Mar 26. Edinburgh, GB - Rust Edinburgh - Rust Meetup Short Talk Night&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.goto10.se/evenemang/stockholm-rust-meetup/"&gt;Apr  2. Stockholm, SE - Stockholm Rust Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gztznrybcgbdb/"&gt;Apr  2. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/469382520642102"&gt;Mar 25. Houston, TX, US - Houston Linux Users Group - Rust Study Group&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Ann-Arbor-Rust-Meetup/events/zdfscrybcfbhc/"&gt;Mar 25. Ann Arbor, MI, US - Ann Arbor Rust Meetup - Monthly Gathering&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmybcfbpc/"&gt;Mar 31. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/dtqwprybcgbcb/"&gt;Apr  1. Indianapolis, IN, US - Indy.rs - WebAssembly 101&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/qxqdgrybcgblb/"&gt;Apr  8. Atlanta, GA, US - Rust Atlanta - Grab a beer with fellow Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/fjsj1l/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Official /r/rust "Who's Hiring" thread for job-seekers and job-offerers [Rust 1.42]&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.apple.com/en-us/details/200144575/software-engineer"&gt;Software Engineer at Apple, AB, CA&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jobs.apple.com/en-us/details/200117537/software-engineer"&gt;Software Engineer at Apple, Seattle, WA, US&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/layertwo/jobs/687465-senior-backend-engineer"&gt;Backend Engineer, Rust at LayerTwo, London, UK&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/layertwo/jobs/702600-junior-full-stack-engineer"&gt;Junior Backend Engineer, Rust at LayerTwo, London, UK&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ockam.io/team"&gt;Senior Software Engineer - Rust at Ockam, Remote&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I thought up a clever qotw bait one liner to stick in here that prompted me to actually write it then forgot it while writing the post in favor of being genuine... whoops&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://users.rust-lang.org/t/the-confessional-thread-parts-of-rust-that-i-still-dont-get-after-all-this-time/39022/14"&gt;Christopher Durham confessing to rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/835"&gt;Jules Kerssemakers&lt;/a&gt; for the suggestions!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt; and &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/flb5tn/this_week_in_rust_330/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 329</title><link href="https://this-week-in-rust.org/blog/2020/03/10/this-week-in-rust-329/" rel="alternate"></link><updated>2020-03-10T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2020-03-10:blog/2020/03/10/this-week-in-rust-329/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://xaeroxe.github.io/init-struct-pattern/"&gt;An alternative to the builder pattern, init struct pattern&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/aws/bottlerocket-open-source-os-for-container-hosting/"&gt;Bottlerocket, a new Linux-based OS, uses Rust for almost all new components&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.frondeus.pl/parser-1/"&gt;Parsing Library in Rust pt. 1&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://llogiq.github.io/2020/03/07/learning.html"&gt;Yes, I am still learning Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://avishay.dev/2020/03/04/oss-contribution/"&gt;I have just made my first open source contribution to rust-analyzer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nannou.cc/posts/nannou_v0.13"&gt;Nannou update - WebGPU, capturing frames and more&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://treit.github.io/programming,/rust,/c%23/2020/03/06/StartingRust.html"&gt;A C# programmer examines Rust - Part 1&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ericsink.com/entries/dotnet_rust.html"&gt;My exploration of Rust and .NET&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.guillaume-gomez.fr/articles/2020-03-07+cfg%28doctest%29+is+stable+and+you+should+use+it"&gt;cfg(doctest) is stable and you should use it&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@maxsparr0w/performance-of-node-js-compared-to-actix-web-37f20810fb1a"&gt;ExpressJS vs Actix-Web: performance and running cost comparison&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/03/09/changelog-15.html"&gt;rust-analyzer changelog 15&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-gamedev.github.io/posts/newsletter-007/"&gt;This month in Rust gamedev 7 - February 2020&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/03/10/rustconf-cfp.html"&gt;The 2020 RustConf CFP is Now Open&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crates is &lt;a href="https://github.com/igiagkiozis/plotly"&gt;plotly&lt;/a&gt;, a plotly.js-backed plotting library.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/736"&gt;Ioannis Giagkiozis&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/freedomlayer/offst/issues/271"&gt;offst: Add Android builds to CI&lt;/a&gt;. Offst is a decentralized payment system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;302 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-03-02..2020-03-09"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69201"&gt;permit attributes on 'if' expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/67260"&gt;const limit for CTFE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69665"&gt;invoke &lt;code&gt;OptimizerLastEPCallbacks&lt;/code&gt; in &lt;code&gt;PreLinkThinLTO&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69628"&gt;fix a leak in &lt;code&gt;DiagnosticBuilder::into_diagnostic&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/67741"&gt;when encountering an Item in a pat context, point at the item def&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69371"&gt;improve linking of crates with circular dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69326"&gt;mir-interpret: add method to read wide strings from memory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/68952"&gt;stabilize &lt;code&gt;assoc_int_consts&lt;/code&gt; associated int/float constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69794"&gt;add &lt;code&gt;Layout::dangling()&lt;/code&gt; to return a well-aligned &lt;code&gt;NonNull&amp;lt;u8&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69776"&gt;fix &amp;amp; test leak of some &lt;code&gt;BTreeMap&lt;/code&gt; nodes on panic during &lt;code&gt;into_iter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/145"&gt;hashbrown: add &lt;code&gt;HashMap::get_key_value_mut&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/68099"&gt;Amend Rc/Arc::from_raw() docs regarding unsafety&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/68905"&gt;&lt;code&gt;is_x86_feature_detected!("avx512f")&lt;/code&gt; fails to build on nightly&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/69403"&gt;Implement &lt;code&gt;Copy&lt;/code&gt; for &lt;code&gt;IoSlice&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScSe4xQycs5i3PtEtR9GAj4vdkWUhwW3v0BiTQFpps4l7PgIA/viewform"&gt;Mar 21-22. Kuala Lumpur, MY - Rust Workshop + Mini-Hackathon&lt;/a&gt; [Postponed].&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Warsaw/events/269164365/"&gt;Mar 19. Warsaw, PL - Rust Warsaw 4&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gztznrybcfbzb/"&gt;Mar 19. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-edi/events/267810816"&gt;Mar 26. Edinburgh, GB - Rust Edinburgh - Rust Meetup Short Talk Night&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/qnrgnrybcfbxb/"&gt;Mar 18. Vancouver, BC, CA - Vancouver Rust - Rust Study/Hack/Hang-out night&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Montreal/events/269117625/"&gt;Mar 19. Montreal, QC, CA - Rust Montréal - RustMTL March 2020&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpybcfbfc/"&gt;Mar 23. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/PDXRust/events/269072568/"&gt;Mar 25. Portland, OR, US - PDXRust - PDX Rust Hack Night&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/469382520642102"&gt;Mar 25. Houston, TX, US - Houston Linux Users Group - Rust Study Group&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Ann-Arbor-Rust-Meetup/events/zdfscrybcfbhc/"&gt;Mar 25. Ann Arbor, MI, US - Ann Arbor Rust Meetup - Monthly Gathering&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmybcfbpc/"&gt;Mar 31. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aleph-alpha.de/sw_engineer.html?language=de"&gt;Infrastructure Engineer at Aleph Alpha, Heidelberg, Germany&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kopernikusauto.com"&gt;Kopernikus Automotive GmbH&lt;/a&gt; is &lt;a href="https://www.reddit.com/r/rust/comments/eyw94s/official_rrust_whos_hiring_thread_for_jobseekers/fk08z9g"&gt;looking for Rust Developers&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I have no idea how to debug Rust, because in 2 years of Rust, I haven't had that type of low level bug.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://news.ycombinator.com/item?id=22514233"&gt;papaf on hacker news&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/826"&gt;zrk&lt;/a&gt; for the suggestions!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt; and &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/fhcuec/this_week_in_rust_329/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 328</title><link href="https://this-week-in-rust.org/blog/2020/03/03/this-week-in-rust-328/" rel="alternate"></link><updated>2020-03-03T00:00:00-05:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2020-03-03:blog/2020/03/03/this-week-in-rust-328/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2020/02/27/Rust-1.41.1.html"&gt;Announcing Rust 1.41.1&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fasterthanli.me/blog/2020/a-half-hour-to-learn-rust/"&gt;A half-hour to learn Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2020/03/04/recent-future-pattern-matching-improvements.html"&gt;Recent and future pattern matching improvements&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://deterministic.space/high-performance-rust.html"&gt;Cheap tricks for high-performance Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.thoughtram.io/string-vs-str-in-rust/"&gt;Understanding String and &amp;amp;str in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://caniuse.rs/"&gt;caniuse.rs - Rust feature search&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ferrous-systems.com/blog/async-on-embedded/"&gt;Async/await on embedded Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://research.nccgroup.com/2020/02/26/public-report-rustcrypto-aes-gcm-and-chacha20poly1305-implementation-review/"&gt;Audit of the RustCrypto &lt;code&gt;aes-gcm&lt;/code&gt; and &lt;code&gt;chacha20poly1305&lt;/code&gt; crates by NCC group&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://crisal.io/words/2020/02/28/C++-rust-ffi-patterns-1-complex-data-structures.html"&gt;FFI patterns #1 - Complex Rust data structures exposed seamlessly to C++&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shahinrostami.com/posts/programming/rust-notebooks/multidimensional-arrays-and-operations-with-ndarray/"&gt;Multidimensional arrays and operations with NDArray&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://therealprof.github.io/blog/interrupt-comparison/"&gt;A look into ways to implement and share data with interrupt handlers in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.slowtec.de/posts/2020-02-28-porting-javascript-to-rust-part-3.html"&gt;Porting a JavaScript App to WebAssembly with Rust (Part 3)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2020/02/27/pietro-joins-core-team.html"&gt;Pietro Albini has joined the core team&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2020/02/27/ffi-unwind-design-meeting.html"&gt;Announcing the first FFI-unwind project design meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://os.phil-opp.com/status-update/2020-03-02/"&gt;Writing an OS in Rust: Updates in February 2020&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-analyzer.github.io/thisweek/2020/03/02/changelog-14.html"&gt;rust-analyzer Changelog 14&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intellij-rust.github.io/2020/03/02/changelog-117.html"&gt;IntelliJ Rust Changelog 117&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rustsim.org/blog/2020/03/01/this-month-in-rustsim/"&gt;This month in rustsim 9&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rustinblockchain.org/2020/03/04/rib-newsletter-9-the-month-of-working-from-home/"&gt;Rust in Blockchain newsletter 9: The month of working from home&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tokio-rs/tokio/releases/tag/tokio-0.2.12"&gt;Tokio v0.2.12, includes &lt;code&gt;Notify&lt;/code&gt;, an async/await synchronization primitive, and &lt;code&gt;StreamMap&lt;/code&gt; for dynamic merging of streams&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crates is &lt;a href="https://github.com/huggingface/tokenizers"&gt;tokenizers&lt;/a&gt;, a Rust crate with python &amp;amp; nodejs bindings for fast text tokenization for machine learning.&lt;/p&gt;
&lt;p&gt;llogiq (who singlehandedly selected the crate) is pretty self-congratulatory.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cfp.rustconf.com/events/rustconf-2020"&gt;The RustConf 2020 CFP is now open&lt;/a&gt;. We'd love to hear from you at RustConf!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;304 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2020-02-24..2020-03-02"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61812"&gt;implement Associated Type Defaults&lt;/a&gt; (RFC #&lt;a href="https://rust-lang.github.io/rfcs/2532-associated-type-defaults.html"&gt;2532&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69562"&gt;don't &lt;code&gt;bug&lt;/code&gt; when taking discriminant of generator during dataflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69227"&gt;perf: buffer stderr when writing json errors/warnings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69412"&gt;mark attributes consumed by &lt;code&gt;check_mod_attrs&lt;/code&gt; as normal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69623"&gt;stash API: remove panic to fix ICE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/chalk/pull/332"&gt;chalk: changes needed to build in rustc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69257"&gt;adjust Miri value visitor, and doc-comment layout components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69408"&gt;miri: let machine canonicalize AllocIDs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69379"&gt;fail on multiple declarations of &lt;code&gt;main&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/67332"&gt;don't instantiate so many copies of &lt;code&gt;drop_in_place&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/68528"&gt;mark other variants as uninitialized after switch on discriminant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/68943"&gt;skip &lt;code&gt;Drop&lt;/code&gt; terminators for enum variants without drop glue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/67290"&gt;audit liballoc for leaks in &lt;code&gt;Drop&lt;/code&gt; impls when user destructor panics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/67637"&gt;add primitive module to libcore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69385"&gt;relax str::get_unchecked precondition to permit empty slicing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69581"&gt;fix aliasing violation in &lt;code&gt;align_to_mut&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/68712"&gt;add methods to 'leak' RefCell borrows as references with the lifetime of the original reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69538"&gt;stabilize &lt;code&gt;boxed_slice_try_from&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/68827"&gt;&lt;code&gt;BTreeMap&lt;/code&gt; navigation done safer &amp;amp; faster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/69617"&gt;constify mem::forget&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/crates.io/pull/2214"&gt;crates.io: enable sorting crates by most recently added&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustlings/pull/269"&gt;rustlings: add clippy lints&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments) process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2834"&gt;Cargo report future-incompat&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2843"&gt;Add llvm_asm! and deprecate asm!&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/69201"&gt;Permit attributes on 'if' expressions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/66059"&gt;mem::zeroed/uninit: panic on types that do not permit zero-initialization&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2873"&gt;Inline assembly&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2872"&gt;Rust-lang org GitHub access policy&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2871"&gt;Clarifying UnwindSafe&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScSe4xQycs5i3PtEtR9GAj4vdkWUhwW3v0BiTQFpps4l7PgIA/viewform"&gt;Mar 21-22. Kuala Lumpur, MY - Rust Workshop + Mini-Hackathon&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Hack-Learn-Karlsruhe/events/268299172/"&gt;Mar  9. Karlsruhe, DE - Rust Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Oslo/events/268738879"&gt;Mar 11. Oslo, NO - Rust Oslo - Lightning talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Mozilla-Torino/events/268822794"&gt;Mar 12. Turin, IT - Mozilla Torino - Gruppo di studio Rust alla Torino hacknight&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Warsaw/events/269164365/"&gt;Mar 19. Warsaw, PL - Rust Warsaw 4&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/gztznrybcfbzb/"&gt;Mar 19. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Boulder-Denver/events/267834799/"&gt;Mar 10. Denver, CO, US - Rust Boulder/Denver - March Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Seattle-Rust-Meetup/events/prbtdrybcfbnb/"&gt;Mar 10. Redmond, WA, US - Seattle Rust Meetup - Monthly meetup in Redmond&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/qxqdgrybcfbpb/"&gt;Mar 11. Atlanta, GA, US - Rust Atlanta - Grab a beer with fellow Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/469382520642102"&gt;Mar 11. Houston, TX, US - Houston Linux Users Group - Rust Study Group&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/PDXRust/events/269055813/"&gt;Mar 11. Portland, OR, US - PDXRust - Rust Lightning Talks! By You&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgrybcfbqb/"&gt;Mar 12. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/utah-rust/events/268567961/"&gt;Mar 12. Lehi, UT, US - Utah Rust - The Blue Pill: Rust on Microcontrollers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/San-Diego-Rust/events/269191953/"&gt;Mar 12. San Diego, CA, US - San Diego Rust - March Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/qnrgnrybcfbxb/"&gt;Mar 18. Vancouver, BC, CA - Vancouver Rust - Rust Study/Hack/Hang-out night&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aleph-alpha.de/sw_engineer.html?language=de"&gt;Infrastructure Engineer at Aleph Alpha, Heidelberg, Germany&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi, fellow Crustaceans!
I am a newbie of Rust programming language. A nauplius.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://users.rust-lang.org/t/how-can-i-improve-this/38711"&gt;GhostProc on rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/822"&gt;Tom Phinney&lt;/a&gt; for the suggestions!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt; and &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/fdzspa/this_week_in_rust_328/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry></feed>