<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>This Week in Rust</title><link href="https://this-week-in-rust.org/" rel="alternate"></link><link href="https://this-week-in-rust.org/atom.xml" rel="self"></link><id>https://this-week-in-rust.org/</id><updated>2019-10-15T00:00:00-04:00</updated><entry><title>This Week in Rust 308</title><link href="https://this-week-in-rust.org/blog/2019/10/15/this-week-in-rust-308/" rel="alternate"></link><updated>2019-10-15T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-10-15:blog/2019/10/15/this-week-in-rust-308/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tokio.rs/blog/2019-10-scheduler/"&gt;Making the Tokio scheduler 10x faster&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.mozilla.org/nnethercote/2019/10/11/how-to-speed-up-the-rust-compiler-some-more-in-2019/"&gt;How to speed up the Rust compiler some more in 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cfsamson.github.io/book-exploring-async-basics/"&gt;The node experiment - exploring async basics with Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/clion/2019/10/debugging-rust-code-in-clion/"&gt;Debugging Rust code in CLion&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jabid.in/2019/10/11/drop.html"&gt;My favorite rust function &lt;code&gt;std::mem::drop&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/dguqt3/vulnerability_in_sodiumoxide_generichashdigesteq/"&gt;Vulnerability in sodiumoxide: generichash::Digest::eq always return true&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://osblog.stephenmarz.com/ch2.html"&gt;RISC-V OS using Rust: Communications&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ncameron.org/blog/migrating-a-crate-from-futures-0-1-to-0-3/"&gt;Migrating a crate from futures 0.1 to 0.3&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adventures.michaelfbryan.com/posts/comms-part-2/"&gt;Adventures in motion control: The communications system part 2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/10/15/Rustup-1.20.0.html"&gt;Announcing Rustup 1.20.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.windriver.com/news/press/pr.html?ID=22444"&gt;New VxWorks release supports Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/opensource/aws-sponsorship-of-the-rust-project/"&gt;AWS’ sponsorship of the Rust Project&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week, we don't have one, nor two, but &lt;em&gt;three&lt;/em&gt; crates of the week! There's &lt;a href="https://github.com/dtolnay/watt"&gt;Watt&lt;/a&gt;, a fast WASM-based proc-macro runtime, &lt;a href="https://github.com/dtolnay/anyhow"&gt;Anyhow&lt;/a&gt;, yet another error handling crate and &lt;a href="https://github.com/Rigellute/spotify-tui"&gt;spotify-tui&lt;/a&gt;, a console user interface for Spotify.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/649"&gt;Aloso&lt;/a&gt;, &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/645"&gt;zicklag&lt;/a&gt; and &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/644"&gt;Vikrant&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/async-rs/async-std/issues/342"&gt;async-std: Add Stream::throttle&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/async-rs/async-std/issues/340"&gt;async-std: Add Stream::timeout&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/async-rs/async-std/issues/341"&gt;async-std: Add Future::delay&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/async-rs/async-std/issues/129"&gt;async-std: [tracking] streams&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[good first issue] &lt;a href="https://github.com/tokio-rs/tracing/issues/383"&gt;tracing: core: add &lt;code&gt;dispatcher::set_default&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;302 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-10-07..2019-10-14"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64906"&gt;Add support for &lt;code&gt;const unsafe? extern fn&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65214"&gt;Split non-CAS atomic support off into &lt;code&gt;target_has_atomic_load_store&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65310"&gt;deriving: Avoid dummy Span on an artificial &lt;code&gt;type_ident&lt;/code&gt; path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65292"&gt;Print lifetimes with backticks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65289"&gt;Fix suggested bound addition diagnostic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65077"&gt;Note when a mutable trait object is needed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65194"&gt;Use structured suggestion for removal of &lt;code&gt;as_str()&lt;/code&gt; call&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65154"&gt;Fix const generic arguments not displaying in types mismatch diagnostic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65153"&gt;Improve message when attempting to instantiate tuple structs with private fields&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65150"&gt;Suggest dereferencing boolean reference when used in &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;while&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65145"&gt;When suggesting assoc function with type params, include turbofish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65208"&gt;self-profiling: Add events for everything except trait selection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64949"&gt;Avoid &lt;code&gt;SmallVec::collect&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65198"&gt;Speed up &lt;code&gt;TokenStream&lt;/code&gt; concatenation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65069"&gt;Implement &lt;code&gt;Clone::clone_from&lt;/code&gt; for &lt;code&gt;VecDeque&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64877"&gt;Stabilize &lt;code&gt;slice::repeat&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64716"&gt;Stabilize &lt;code&gt;mem::take&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64656"&gt;Implement (&lt;code&gt;HashMap&lt;/code&gt;) &lt;code&gt;Entry::insert&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65312"&gt;improve performance of signed &lt;code&gt;saturating_mul&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64823"&gt;dist: minimize the &lt;code&gt;rust-std&lt;/code&gt; component&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2495"&gt;RFC 2495: Minimum Supported Rust Version&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: postpone] &lt;a href="https://github.com/rust-lang/rfcs/pull/2315"&gt;Tighter coupling of Cargo workspaces&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/63599"&gt;Stabilize RFC 2451, re-rebalance coherence&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/65092"&gt;make is_power_of_two a const function&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2781"&gt;Unified coroutines a.k.a. Generator resume arguments&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2782"&gt;impl-only glob imports&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/mad-rs/events/265677784"&gt;Oct 19. Chennai, IN - Rust Chennai - Monthly meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust.tokyo/"&gt;Oct 26. Tokyo, JP - Rust.Tokyo 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/495062051340992/"&gt;Oct 26. Taipei, TW - Rust Taiwan Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/es-ES/BcnRust/events/265509739/"&gt;Oct 17. Barcelona, ES - BcnRust Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/Rust-Community-Stuttgart/events/265526369/"&gt;Oct 18. Stuttgart, DE - Rust Meetup Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.gnome.org/Hackfests/Rust2019-2#preview"&gt;Oct 19-23. Rome, IT - Rust+GNOME 2019 Hackfest #6&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Stockholm-Rust/events/265322700/"&gt;Oct 23. Stockholm, SE - Stockholm Rust - Rust Meetup @Embark Studios&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Mozilla-Torino/events/265207841"&gt;Oct 24. Turin, IT - Mozilla Torino - Gruppo di studio Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Vienna/events/265535638/"&gt;Oct 24. Vienna, AT - Rust Vienna - Rust Townsquare Gathering Oktober&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Zurich/events/265507413/"&gt;Oct 28. Zurich, CH - Rust Zurich - October Meetup: Claudia Saxer – 66 hours of Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Nederland/events/265656966"&gt;Oct 28. Gouda, NL - Rust Nederland - Rust - Talks &amp;amp; Demos&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-London-User-Group/events/265590044/"&gt;Oct 28. London, GB - Rust London User Group - LDN Talks October 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/nxdpgryznbnc/"&gt;Oct 30. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.rust-belt-rust.com/"&gt;Oct 18 &amp;amp; 19. Dayton, OH, US - Rust Belt Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/PDXRust/events/265043014/"&gt;Oct 23. Portland, OR, US - PDXRust - Hack Night&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Desert-Rustaceans/events/wmmphryznbfc/"&gt;Oct 23. Mesa, AZ, US - Desert Rust - Rust: lightning talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/triangle-rustaceans/events/mfglwpyznblc/"&gt;Oct 28. Durham, NC, US - Triangle Rustaceans - Project Night &amp;amp; Lightning Talks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Dallas-Rust/events/zfgwzmyznbmc/"&gt;Oct 29. Dallas, TX, US - Dallas Rust - Last Tuesday&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Chicago-Rust-Meetup/events/265283294"&gt;Oct 29. Chicago, IL, US - Chicago Rust Meetup - Entity Component Systems: An Intro To The Specs Crate Using Roguelikes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-in-Blockchain-San-Francisco/events/265362152/"&gt;Oct 30. San Francisco, CA, US - Rust in Blockchain Workshop Day (SFBW)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Bay-Area/events/265478102"&gt;Oct 30. Santa Clara, CA, US - Rust Bay Area - [@ Intel Santa Clara] Security with Rust &amp;amp; SGX + Life of an Async fn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/rwcpfryznbnc/"&gt;Oct 30. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/nervos-1/jobs/589230-senior-blockchain-engineer"&gt;Senior Blockchain Engineer at Nervos, Hangzhou, CN (Remote available)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-rust-core-developer"&gt;Rust/Core Developer at Parity, Berlin, DE (Remote available)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;If the Rust community has an ethos, it's that software should have strong static typing, but people should have soft dynamic typing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://twitter.com/BatmanAoD/status/1174799660134699008"&gt;Kyle Strand on Twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/710"&gt;Kyle Strand&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href=""&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 307</title><link href="https://this-week-in-rust.org/blog/2019/10/08/this-week-in-rust-307/" rel="alternate"></link><updated>2019-10-08T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-10-08:blog/2019/10/08/this-week-in-rust-307/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/10/03/inside-rust-blog.html"&gt;Announcing the Inside Rust blog&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2019/10/07/AsyncAwait-WG-Focus-Issues.html"&gt;Async Foundations update: Time for polish&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/inside-rust/2019/10/03/Keeping-secure-with-cargo-audit-0.9.html"&gt;Keeping Rust projects secure with cargo-audit 0.9: dependency trees, core advisories, unmaintained crates&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc-blog.microsoft.com/2019/10/08/designing-a-com-library-for-rust/"&gt;Designing a COM library for Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://luciofran.co/tonic-grpc-has-come-to-async-await/"&gt;Tonic: gRPC has come to async/await&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seanmonstar.com/post/188220739932/reqwest-alphaawait"&gt;reqwest alpha with async/await released&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://os.phil-opp.com/status-update/2019-10-06/"&gt;Writing an OS in Rust - updates in September 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nikolaivazquez.com/posts/programming/rust-static-assertions-1_0/"&gt;Static Assertions 1.0 is released&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.fpcomplete.com/rust/ownership-and-impl-trait"&gt;Ownership and impl Trait&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://curiosityoverflow.xyz/posts/linda/"&gt;Writing an HTTP server in Rust (part 1)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adventures.michaelfbryan.com/posts/comms-part-1/"&gt;Adventures in motion control: The communications system part 1&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ly.lee/coding-nrf52-with-rust-and-apache-mynewt-on-visual-studio-code-9521bcba6004"&gt;Coding nRF52 with Rust and Apache Mynewt on Visual Studio Code&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-gamedev.github.io/2019/10/05/newsletter-002.html"&gt;This month in Rust GameDev 2 - September 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-embedded.github.io/blog/newsletter-19/"&gt;The Embedded Working Group newsletter 19&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust"&gt;Rust now has more than 100000 commits&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[pdf] &lt;a href="http://pm.inf.ethz.ch/publications/getpdf.php?bibname=Own&amp;amp;id=AstrauskasMuellerPoliSummers19b.pdf"&gt;Leveraging Rust types for modular specification and verification&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/algebraics"&gt;algebraics&lt;/a&gt;, a pure-Rust algebraic numbers library for infinite-precision computation.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/629"&gt;Jacob Lifshay&lt;/a&gt; and &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/639"&gt;Vikrant&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/search?q=user:EmbarkStudios+label:hacktoberfest+state:open"&gt;Hacktoberfest issues from EmbarkStudios&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/issues/56195"&gt;rustc: Deprecation warning emitted from derive without a span&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/async-rs/async-std/issues/290"&gt;async-std: Add &lt;code&gt;task::yield_now&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/async-rs/async-std/issues/217"&gt;async-std: Add &lt;code&gt;sync::CondVar&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/async-rs/async-std/issues/183"&gt;async-std: Add &lt;code&gt;path::{Path,PathBuf}&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;338 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-09-30..2019-10-07"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64780"&gt;Only add sanitizer runtimes when linking an executable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/llvm-project/pull/25"&gt;LLVM/wasm: Fix conflict between ret legalization and sjlj&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/llvm-project/pull/24"&gt;LLVM/wasm: Restore defaults for stores per memop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64909"&gt;When encountering chained operators use heuristics to recover from bad turbofish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65056"&gt;Make visit projection iterative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65043"&gt;Make re-export collection deterministic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64937"&gt;Deduplicate closure type errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64933"&gt;Suggest fix for type mismatch based on operator precendence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64959"&gt;syntax: improve parameter without type suggestions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/polonius/pull/131"&gt;Polonius: use the fx hasher when interning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64999"&gt;extract expected return type for async fn generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64895"&gt;async/await: improve not-send errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65066"&gt;const-prop: Fix ICE when trying to eval polymorphic promoted MIR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64991"&gt;const-prop: Correctly handle locals that can't be propagated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64805"&gt;Still more &lt;code&gt;ObligationForest&lt;/code&gt; improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64801"&gt;Avoid &lt;code&gt;chain()&lt;/code&gt; in &lt;code&gt;find_constraint_paths_between_regions()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65089"&gt;Optimize integral pattern matching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64690"&gt;proc_macro API: Expose &lt;code&gt;macro_rules&lt;/code&gt; hygiene&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64675"&gt;Deprecate &lt;code&gt;#![plugin]&lt;/code&gt; &amp;amp; &lt;code&gt;#[plugin_registrar]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65026"&gt;metadata: Some crate loading cleanup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/65011"&gt;Do not ICE when dereferencing non-Copy raw pointer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64974"&gt;Fix zebra-striping in generic dataflow visualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64967"&gt;Don't mark borrows of zero-sized arrays as indirectly mutable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64564"&gt;Deny specializing items not in the parent impl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/63948"&gt;Add feature gate for raw_dylib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/63931"&gt;Stabilize macros in some more positions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/63674"&gt;syntax: Support modern attribute syntax in the &lt;code&gt;meta&lt;/code&gt; matcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64922"&gt;Use &lt;code&gt;PlaceBuilder&lt;/code&gt; to avoid a lot of slice → vec → slice convertions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64885"&gt;use &lt;code&gt;try_fold&lt;/code&gt; instead of &lt;code&gt;try_for_each&lt;/code&gt; to reduce compile time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64728"&gt;Stabilize &lt;code&gt;UdpSocket::peer_addr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64708"&gt;Stabilize &lt;code&gt;Option::as_deref&lt;/code&gt; and &lt;code&gt;Option::as_deref_mut&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/61879"&gt;Stabilize &lt;code&gt;todo!(..)&lt;/code&gt; macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/hashbrown/pull/118"&gt;hashbrown: Add &lt;code&gt;RustcVacantEntry::insert_entry&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64820"&gt;&lt;code&gt;BTreeSet&lt;/code&gt; &lt;code&gt;intersection&lt;/code&gt;, &lt;code&gt;is_subset&lt;/code&gt; &amp;amp; &lt;code&gt;difference&lt;/code&gt; optimizations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64975"&gt;Implement &lt;code&gt;Clone::clone_from&lt;/code&gt; for &lt;code&gt;LinkedList&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64941"&gt;Inline {&lt;code&gt;min&lt;/code&gt;,&lt;code&gt;max&lt;/code&gt;}&lt;code&gt;_value&lt;/code&gt; even in debug builds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6989"&gt;cargo: Support for named profiles&lt;/a&gt; (RFC 2678)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7465"&gt;cargo: Disable preserving mtimes on archives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rustup.rs/pull/2035"&gt;rustup: Cleaned up error messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64722"&gt;rustbuild: Make all alt builders produce parallel-enabled compilers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;No RFCs are currently in final comment period.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/64035"&gt;Stabilize proc macros generating &lt;code&gt;macro_rules&lt;/code&gt; items&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/64877"&gt;Stabilize &lt;code&gt;slice::repeat&lt;/code&gt; (feature &lt;code&gt;repeat_generic_slice&lt;/code&gt;)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2775"&gt;Variadic tuples&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2777"&gt;Scope prints in diagnostics&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2776"&gt;Initial cargo-plugin-fields&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/nxdpgryznbvb/"&gt;Oct 16. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/de-DE/Rust-Community-Stuttgart/events/265526369/"&gt;Oct 18. Stuttgart, DE - Rust Meetup Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Stockholm-Rust/events/265322700/"&gt;Oct 23. Stockholm, SE - Stockholm Rust - Rust Meetup @Embark Studios&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Mozilla-Torino/events/265207841"&gt;Oct 24. Turin, IT - Mozilla Torino - Gruppo di studio Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/rwcpfryznbvb/"&gt;Oct 16. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Ann-Arbor-Rust-Meetup/events/zdfscryznbfc/"&gt;Oct 16. Ann Arbor, MI, US - Ann Arbor Rust Meetup - Monthly Gathering&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rust-belt-rust.com/"&gt;Oct 18 &amp;amp; 19. Dayton, OH, US - Rust Belt Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/PDXRust/events/265043014/"&gt;Oct 23. Portland, OR, US - PDXRust - Hack Night&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-in-Blockchain-San-Francisco/events/265362152/"&gt;Oct 30. San Francisco, US - Rust in Blockchain Workshop Day (SFBW)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://angel.co/company/nervos-1/jobs/589230-senior-blockchain-engineer"&gt;Senior Blockchain Engineer at Nervos, Hangzhou, CN (Remote available)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/#berlin-rust-core-developer"&gt;Rust/Core Developer at Parity, Berlin, DE (Remote available)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;"Rust compilation is so slow that I can fix the bugs while it still compiles the crates"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/705"&gt;Rustafarian on rust-users&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/dfq08b/this_week_in_rust_307/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 306</title><link href="https://this-week-in-rust.org/blog/2019/10/01/this-week-in-rust-306/" rel="alternate"></link><updated>2019-10-01T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-10-01:blog/2019/10/01/this-week-in-rust-306/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;🎈🎉 &lt;a href="https://blog.rust-lang.org/2019/09/26/Rust-1.38.0.html"&gt;Announcing Rust 1.38.0&lt;/a&gt;. 🎉🎈&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/09/30/Security-advisory-for-cargo.html"&gt;Security advisory for Cargo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.rust-lang.org/2019/09/30/Async-await-hits-beta.html"&gt;Async-await hits beta&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.rs/dtolnay/0.0.6/dtolnay/macro._02__reference_types.html"&gt;Accurate mental model for Rust's reference types&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vorner.github.io/2019/09/29/figthting-the-async-fragmentation.html"&gt;Fighting the Async fragmentation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://web.eecs.utk.edu/~smarz1/osblog/"&gt;Making a RISC-V Operating System using Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adventures.michaelfbryan.com/posts/plugins-in-rust/"&gt;Plugins in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msrc-blog.microsoft.com/2019/09/30/building-the-azure-iot-edge-security-daemon-in-rust/"&gt;Building the Azure IoT Edge Security Daemon in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adventures.michaelfbryan.com/posts/fps-counter/"&gt;Adventures in motion control: FPS counter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://llogiq.github.io/2019/09/25/coz.html"&gt;Causal profiling Rust code&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gfx-rs.github.io/2019/10/01/update.html"&gt;gfx-rs 2019 update&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/d999qo/announcing_drone_os_010/"&gt;Announcing Drone OS - an embedded operating system for writing real-time applications in Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://crates.io/crates/pin-project"&gt;pin-project&lt;/a&gt;, a proc-macro-derive for ergonomic and safe &lt;code&gt;Pin&lt;/code&gt; projections.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/636"&gt;Krishna Sannasi&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/timberio/vector/issues/932"&gt;vector: Update &lt;code&gt;stdin&lt;/code&gt; source to use a thread instead of using the tokio version&lt;/a&gt;. Vector is a high-performance observability data router.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/mundane/issues/21"&gt;mundane: Build docs.rs documentation with all features enabled&lt;/a&gt;. Mundane is a Rust cryptography library backed by BoringSSL.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbo/rustfm-scrobble/issues?q=is%3Aissue+is%3Aopen+label%3AHacktoberfest"&gt;rustfm-scrobble: Issues for Hacktoberfest&lt;/a&gt;. rustfm-scrobble is a Last.fm scrobble API library in Rust.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vertexclique/tokamak/issues/91"&gt;Tokamak is looking for maintainers&lt;/a&gt;. Tokamak is a Rust IDE for Atom.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bastion-rs/bastion/issues/32"&gt;Bastion is looking for maintainers&lt;/a&gt;. Bastion is a fault-tolerant runtime for Rust applications&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;278 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-09-23..2019-09-30"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64790"&gt;Rest In Peace, AST borrowck (2012-2019)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64799"&gt;Fix double panic when printing query stack during an ICE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64508"&gt;or-patterns: Push &lt;code&gt;PatKind/PatternKind::Or&lt;/code&gt; at top level to HIR &amp;amp; HAIR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64793"&gt;Fix format macro expansions spans to be macro-generated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64746"&gt;Remove blanket silencing of "type annotation needed" errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64745"&gt;Include message on tests that should panic but do not&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64691"&gt;Point at definition when misusing ADT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64802"&gt;Account for tail expressions when pointing at return type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64151"&gt;On obligation errors point at the unfulfilled binding when possible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/63934"&gt;Fix coherence checking for impl trait in type aliases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64674"&gt;Propagate &lt;code&gt;types.err&lt;/code&gt; in locals further to avoid spurious knock-down errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64859"&gt;check_match: Improve diagnostics for &lt;code&gt;let A = 2;&lt;/code&gt; with &lt;code&gt;const A: i32 = 3&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64825"&gt;Point at enclosing match when expecting &lt;code&gt;()&lt;/code&gt; in arm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64622"&gt;Add a cycle detector for generic &lt;code&gt;Graph&lt;/code&gt;s and &lt;code&gt;mir::Body&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64738"&gt;Add const-eval support for SIMD types, insert, and extract&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64470"&gt;Implement dataflow-based const validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64673"&gt;Optimize &lt;code&gt;try_eval_bits&lt;/code&gt; to avoid layout queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64627"&gt;Even more &lt;code&gt;ObligationForest&lt;/code&gt; improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64481"&gt;A more explanatory thread local storage panic message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/63770"&gt;Stabilize &lt;code&gt;str::len&lt;/code&gt;, &lt;code&gt;[T]::len&lt;/code&gt; and &lt;code&gt;str::as_bytes&lt;/code&gt; as const fn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/62661"&gt;Reserve &lt;code&gt;impl&amp;lt;T&amp;gt; From&amp;lt;!&amp;gt; for T&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64600"&gt;Remove manual unrolling from &lt;code&gt;slice::Iter&lt;/code&gt;(&lt;code&gt;Mut&lt;/code&gt;)&lt;code&gt;::try_fold&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/compiler-builtins/pull/315"&gt;compiler-builtins: Implement bcmp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/7446"&gt;cargo: Improve test output with &lt;code&gt;--quiet&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2523"&gt;RFC 2523: &lt;code&gt;#[cfg(accessible(..) / version(..))]&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rfcs/pull/2495"&gt;Minimum supported Rust version&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rfcs/pull/2517"&gt;Project-based Examples for Cargo Projects&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/44109"&gt;Tracking issue for RFC 2008: Future-proofing enums/structs with #[non_exhaustive] attribute&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/64708"&gt;Stabilize &lt;code&gt;Option::as_deref&lt;/code&gt; and &lt;code&gt;Option::as_deref_mut&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/64716"&gt;Stabilize mem::take (mem_take)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/64877"&gt;Stabilize &lt;code&gt;slice::repeat&lt;/code&gt; (feature &lt;code&gt;repeat_generic_slice&lt;/code&gt;)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rfcs/pull/2774"&gt;RFC 1201 ammendments: Naked function corrections&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/259481147/"&gt;Oct  7. Auckland, NZ - Rust AKL - Introduction to Rust (session 2 of 3)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Toulouse-Rust-Meetup/events/264780064"&gt;Oct  4. Toulouse, FR - Toulouse Rust Meetup - Future&lt;Output = Rust&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Rhein-Main/events/265052778"&gt;Oct  4. Darmstadt, DE - Hacktoberfest for Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dou.ua/calendar/28904/"&gt;Oct  5. Kharkiv, UA - PeerLab Kharkiv #Rust: AsyncIO&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Zagreb-Rust-Meetup/events/265307360/"&gt;Oct  9. Zagreb, HR - impl Zagreb for Rust: Rust, FFmpeg i TensorFlow&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Finland-Rust-Meetup/events/265091401/"&gt;Oct 10. Helsinki, FI - Finland Rust-lang Group - October meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Warsaw/events/265091321/"&gt;Oct 10. Warsaw, PL - Rust Warsaw - reboot&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/nxdpgryznbvb/"&gt;Oct 16. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://coffee.dev/rustbridge"&gt;Oct  5. Cleveland, OH, US - Cleveland RustBridge&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/detroitrust/events/265090754/"&gt;Oct  8. Detroit, MI, US - Detroit Rust - Diving into Rust web frameworks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/qxqdgryznbmb/"&gt;Oct  9. Atlanta, GA, US - Grab a beer with fellow Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgryznbnb/"&gt;Oct 10. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustDC/events/264768938"&gt;Oct 10. Arlington, VA, US - Rust DC — Mid-month Rustful&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/rwcpfryznbvb/"&gt;Oct 16. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rust-belt-rust.com/"&gt;Oct 18 &amp;amp; 19. Dayton, OH, US - Rust Belt Rust&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/d9l79d/official_rrust_whos_hiring_thread_for_jobseekers/"&gt;Official /r/rust "Who's Hiring" thread for job-seekers and job-offerers [Rust 1.38]&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.embark-studios.com/jobs/278026-software-engineer-new-grad"&gt;Software engineer (New grad) at Embark Studios, Stockholm, SE&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/matter-labs/software-engineering-jobs-at-matter-labs-c456d01b2a02"&gt;Multiple Rust jobs at Matter Labs (Berlin, Kiev, remote)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/rust/comments/db7910/job_rust_internship_in_japan/"&gt;Rust internship at Tsuru Capital, Tokyo, JP&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;p&gt;Sadly, there were no nominations this week.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/dcckng/this_week_in_rust_306/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry><entry><title>This Week in Rust 305</title><link href="https://this-week-in-rust.org/blog/2019/09/24/this-week-in-rust-305/" rel="alternate"></link><updated>2019-09-24T00:00:00-04:00</updated><author><name>TWiR Contributors</name></author><id>tag:this-week-in-rust.org,2019-09-24:blog/2019/09/24/this-week-in-rust-305/</id><summary type="html">&lt;p&gt;Hello and welcome to another issue of &lt;em&gt;This Week in Rust&lt;/em&gt;!
&lt;a href="http://rust-lang.org"&gt;Rust&lt;/a&gt; is a systems language pursuing the trifecta: safety, concurrency, and speed.
This is a weekly summary of its progress and community.
Want something mentioned? Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; or &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;send us a pull request&lt;/a&gt;.
Want to get involved? &lt;a href="https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"&gt;We love contributions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust&lt;/em&gt; is openly developed &lt;a href="https://github.com/cmr/this-week-in-rust"&gt;on GitHub&lt;/a&gt;.
If you find any errors in this week's issue, &lt;a href="https://github.com/cmr/this-week-in-rust/pulls"&gt;please submit a PR&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-community"&gt;Updates from Rust Community&lt;/h1&gt;
&lt;h2 id="news-blog-posts"&gt;News &amp;amp; Blog Posts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.llvm.org/2019/09/closing-gap-cross-language-lto-between.html"&gt;LLVM: closing the gap - cross-language LTO between Rust and C/C++&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notamonadtutorial.com/weld-accelerating-numpy-scikit-and-pandas-as-much-as-100x-with-rust-and-llvm-12ec1c630a1"&gt;Weld: accelerating numpy, scikit and pandas as much as 100x with Rust and LLVM&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amos.me/blog/2019/declarative-memory-management/"&gt;Declarative memory management&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.eizinger.io/8593/generic-newtypes-a-way-to-work-around-the-orphan-rule"&gt;Generic newtypes: A way to work around the orphan rule&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.yoshuawuyts.com/async-finalizers/"&gt;Async builders&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adventures.michaelfbryan.com/posts/top-level-infrastructure/"&gt;Adventures in motion control: top-level infrastructure&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ly.lee/build-an-nb-iot-gps-tracker-on-stm32-l476-with-apache-mynewt-and-embedded-rust-8c095a925546"&gt;Build an NB-IoT GPS Tracker on STM32 L476 with Apache Mynewt and Embedded Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yaah.dev/getting-involved"&gt;Navigating the Rust OSS community&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="crate-of-the-week"&gt;Crate of the Week&lt;/h1&gt;
&lt;p&gt;This week's crate is &lt;a href="https://github.com/mun-lang/runtime"&gt;mun_runtime&lt;/a&gt;, an experimental hot-reloading oriented runtime in Rust.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704/628"&gt;Vikrant&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/crate-of-the-week/2704"&gt;Submit your suggestions and votes for next week&lt;/a&gt;!&lt;/p&gt;
&lt;h1 id="call-for-participation"&gt;Call for Participation&lt;/h1&gt;
&lt;p&gt;Always wanted to contribute to open-source projects but didn't know where to start?
Every week we highlight some tasks from the Rust community for you to pick and get started!&lt;/p&gt;
&lt;p&gt;Some of these tasks may also have mentors available, visit the task page for more information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No issues were proposed for CfP&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you are a Rust project owner and are looking for contributors, please submit tasks &lt;a href="https://users.rust-lang.org/t/twir-call-for-participation/4821"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="updates-from-rust-core"&gt;Updates from Rust Core&lt;/h1&gt;
&lt;p&gt;278 pull requests were &lt;a href="https://github.com/search?q=is%3Apr+org%3Arust-lang+is%3Amerged+merged%3A2019-09-16..2019-09-23"&gt;merged in the last week&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64679"&gt;Infer consts more consistently&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64676"&gt;Parse assoc type bounds in generic params and provide custom diagnostic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64634"&gt;Update to LLVM 9.0.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64613"&gt;rustbuild: Copy crate doc files fewer times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64592"&gt;Point at original span when emitting unreachable lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64584"&gt;record fewer adjustment types in generator witnesses, avoid spurious drops in MIR construction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64545"&gt;More &lt;code&gt;ObligationForest&lt;/code&gt; improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64532"&gt;Replace &lt;code&gt;state_for_location&lt;/code&gt; with &lt;code&gt;DataflowResultsCursor&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64528"&gt;Load proc macro metadata in the correct order&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64500"&gt;Various &lt;code&gt;ObligationForest&lt;/code&gt; improvements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64394"&gt;Shrink &lt;code&gt;SubregionOrigin&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64250"&gt;save-analysis: Nest typeck tables when processing functions/methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64047"&gt;Add &lt;code&gt;cmp::{min_by, min_by_key, max_by, max_by_key}&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/64010"&gt;Stabilize &lt;code&gt;param_attrs&lt;/code&gt; in Rust 1.39.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/rust/pull/63955"&gt;Make sure interned constants are immutable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/cargo/pull/6892"&gt;Added ability to crosscompile doctests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rust-lang/stdarch/pull/739"&gt;Add std_detect::detect::features() API that returns iterator of target-features and reject unstable features in feature-detection macros&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="approved-rfcs"&gt;Approved RFCs&lt;/h2&gt;
&lt;p&gt;Changes to Rust follow the Rust &lt;a href="https://github.com/rust-lang/rfcs#rust-rfcs"&gt;RFC (request for comments)
process&lt;/a&gt;. These
are the RFCs that were approved for implementation this week:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;No RFCs were approved this week.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="final-comment-period"&gt;Final Comment Period&lt;/h2&gt;
&lt;p&gt;Every week &lt;a href="https://www.rust-lang.org/team.html"&gt;the team&lt;/a&gt; announces the
'final comment period' for RFCs and key PRs which are reaching a
decision. Express your opinions now.&lt;/p&gt;
&lt;h3 id="rfcs"&gt;&lt;a href="https://github.com/rust-lang/rfcs/labels/final-comment-period"&gt;RFCs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: postpone] &lt;a href="https://github.com/rust-lang/rfcs/pull/2492"&gt;Existential types with external definition&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: postpone] &lt;a href="https://github.com/rust-lang/rfcs/pull/2362"&gt;Custom self types&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: postpone] &lt;a href="https://github.com/rust-lang/rfcs/pull/2182"&gt;Cargo versioning&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rfcs/pull/2517"&gt;Project-based Examples for Cargo Projects&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tracking-issues-prs"&gt;&lt;a href="https://github.com/rust-lang/rust/labels/final-comment-period"&gt;Tracking Issues &amp;amp; PRs&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/63931"&gt;Stabilize macros in some more positions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/64708"&gt;Stabilize &lt;code&gt;Option::as_deref&lt;/code&gt; and &lt;code&gt;Option::as_deref_mut&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/64716"&gt;Stabilize mem::take (mem_take)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/issues/44109"&gt;Tracking issue for RFC 2008: Future-proofing enums/structs with #[non_exhaustive] attribute&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/63531"&gt;Support repr(simd) on ADTs containing a single array field&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/63674"&gt;syntax: Support modern attribute syntax in the &lt;code&gt;meta&lt;/code&gt; matcher&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: merge] &lt;a href="https://github.com/rust-lang/rust/pull/63681"&gt;convert &lt;code&gt;\r\n&lt;/code&gt; -&amp;gt; &lt;code&gt;\n&lt;/code&gt; in include_str! macro&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/issues/56375"&gt;Regression: : cannot determine resolution for the attribute macro &lt;code&gt;test&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;[disposition: close] &lt;a href="https://github.com/rust-lang/rust/pull/63745"&gt;Expose Linux syscall interface&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="new-rfcs"&gt;New RFCs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;No new RFCs were proposed this week.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="upcoming-events"&gt;Upcoming Events&lt;/h1&gt;
&lt;h3 id="africa"&gt;Africa&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Johannesburg-Rust-Meetup/events/dgqmbryznbdb/"&gt;Oct  2. Johannesburg, ZA - Johannesburg Rust Meetup - futures (part 2)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asia-pacific"&gt;Asia Pacific&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/events/2110177005945081/"&gt;Sep 28. Taipei, TW - Rust Taiwan Meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rust-akl/events/259481147/"&gt;Oct  7. Auckland, NZ - Rust AKL - Introduction to Rust (session 2 of 3)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="europe"&gt;Europe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Mozilla-Torino/events/264748662"&gt;Sep 26. Turin, IT - Mozilla Torino - Gruppo di studio Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/it-IT/Rust-London-User-Group/events/264999149/"&gt;Sep 26. London, GB - Rust London User Group - Hack 'n Learn September 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/rustgbg/events/264957575/"&gt;Oct  1. Göteborg, SE - Rust Gbg — Golden October Rust 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/opentechschool-berlin/events/nxdpgryznbdb/"&gt;Oct  2. Berlin, DE - OpenTechSchool Berlin - Rust Hack and Learn&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/RustCologne/events/tnrnbryznbdb/"&gt;Oct  2. Cologne, DE - Rust Cologne - Open Space&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devfesttoulouse.fr/"&gt;Oct  3. Toulouse, FR - Rust talks at DevFest Toulouse 2019&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Toulouse-Rust-Meetup/events/264780064"&gt;Oct  4. Toulouse, FR - Toulouse Rust Meetup - Future&lt;Output = Rust&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Rhein-Main/events/265052778"&gt;Oct  4. Darmstadt, DE - Hacktoberfest for Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dou.ua/calendar/28904/"&gt;Oct  5. Kharkiv, UA - PeerLab Kharkiv #Rust: AsyncIO&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Finland-Rust-Meetup/events/265091401/"&gt;Oct 10. Helsinki, FI - Finland Rust-lang Group - October meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Warsaw/events/265091321/"&gt;Oct 10. Warsaw, PL - Rust Warsaw - reboot&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="north-america"&gt;North America&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-NYC/events/264849068/"&gt;Sep 26. New York, NY - Local Native: A Decentralized Cross-platform App Developed with Rust&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-Toronto/events/264727074/"&gt;Oct  1. Toronto, ON, CA - Rust Toronto - Rust for the Web&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/indyrs/events/mffbtpyznbdb/"&gt;Oct  2. Indianapolis, IN, US - Indy.rs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Vancouver-Rust/events/rwcpfryznbdb/"&gt;Oct  2. Vancouver, BC, CA - Vancouver Rust meetup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/BostonRust/events/264555065/"&gt;Oct  2. Boston, MA, US - Boston Rust Meetup at VMware&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coffee.dev/rustbridge"&gt;Oct  5. Cleveland, OH, US - Cleveland RustBridge&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/detroitrust/events/265090754/"&gt;Oct  8. Detroit, MI, US - Detroit Rust - Diving into Rust web frameworks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/Rust-ATL/events/qxqdgryznbmb/"&gt;Oct  9. Atlanta, GA, US - Grab a beer with fellow Rustaceans&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/columbus-rs/events/dpkhgryznbnb/"&gt;Oct 10. Columbus, OH, US - Columbus Rust Society - Monthly Meeting&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are running a Rust event please add it to the &lt;a href="https://www.google.com/calendar/embed?src=apd9vmbc22egenmtu5l6c5jbfc%40group.calendar.google.com"&gt;calendar&lt;/a&gt; to get
it mentioned here. Please remember to add a link to the event too.
Email the &lt;a href="mailto:community-team@rust-lang.org"&gt;Rust Community Team&lt;/a&gt; for access.&lt;/p&gt;
&lt;h1 id="rust-jobs"&gt;Rust Jobs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dungeonfog.com/about/job-offers/"&gt;2D Graphics Programmer at Dungeonfog, Vienna, AT (Remote available)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ryan_levick/status/1171830191804551168"&gt;Principal Software Engineer at Microsoft, Redmond, WA, US&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parity.io/jobs/"&gt;Multiple Rust positions at Parity, Berlin, DE (Remote available)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://3dsig.com/positions/software-engineer/"&gt;Software Engineer at 3DSignals, Kfar Saba, IL&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Adam_Fish/status/1173672751271268352"&gt;Senior Engineer at Ditto at San Francisco, US (Remote available)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Tweet us at &lt;a href="https://twitter.com/ThisWeekInRust"&gt;@ThisWeekInRust&lt;/a&gt; to get your job offers listed here!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id="quote-of-the-week"&gt;Quote of the Week&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I don’t like Rust being pigeon holed as a “safer C++”—it’s so much more than that.&lt;/p&gt;
&lt;p&gt;It’s been stated more often lately. It overlooks the fact that Rust has actively opened the door to systems programming to people coming from langs like Javascript, where C and C++ never did.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;– &lt;a href="https://twitter.com/benj_fry/status/1173754548453699584"&gt;Benjamin Fry on twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328/703"&gt;Sverre Johann Bjørke&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://users.rust-lang.org/t/twir-quote-of-the-week/328"&gt;Please submit quotes and vote for next week!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust is edited by: &lt;a href="https://github.com/nasa42"&gt;nasa42&lt;/a&gt;, &lt;a href="https://github.com/llogiq"&gt;llogiq&lt;/a&gt;, and &lt;a href="https://github.com/Flavsditz"&gt;Flavsditz&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a href="https://www.reddit.com/r/rust/comments/d92wbk/this_week_in_rust_305/"&gt;Discuss on r/rust&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;</summary></entry></feed>